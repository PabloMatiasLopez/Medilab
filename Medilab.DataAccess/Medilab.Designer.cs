//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Audit_ObjectType", "ObjectType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.ObjectType), "Audit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Audit), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Audit_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.User), "Audit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Audit), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_RolePrivilege_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Role), "RolePrivilege", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.RolePrivilege), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_UserRole_Role", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Role), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.UserRole), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_UserRole_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.User), "UserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.UserRole), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_User_Speciality", "Speciality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Speciality), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.User), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_ClientArea_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Client), "ClientArea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.ClientArea), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_PracticeGroupPrice_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Medilab.DataAccess.Client), "PracticeGroupPrice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.PracticeGroupPrice), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Client_InvoiceProfile", "InvoiceProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Medilab.DataAccess.InvoiceProfile), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Client), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_InvoiceProfile_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.User), "InvoiceProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.InvoiceProfile), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_InvoiceProfileRetention_InvoiceProfile", "InvoiceProfile", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.InvoiceProfile), "InvoiceProfileRetention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.InvoiceProfileRetention), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_InvoiceDetail_ExamType", "ExamType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Medilab.DataAccess.ExamType), "InvoiceDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.InvoiceDetail), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Client_IvaCondition", "IvaCondition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.IvaCondition), "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Client), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Address_AddressType", "AddressType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.AddressType), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Address), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_MedicalHistoryResult_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.User), "MedicalHistoryResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.MedicalHistoryResult), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_GroupMedicalPractice_MedicalPractice", "MedicalPractice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.MedicalPractice), "GroupMedicalPractice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.GroupMedicalPractice), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_MedicalPractice_Speciality", "Speciality", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Speciality), "MedicalPractice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.MedicalPractice), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_MedicalHistoryPractice_MedicalPractice", "MedicalPractice", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.MedicalPractice), "MedicalHistoryPractice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.MedicalHistoryPractice), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_MedicalHistoryPractice_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Medilab.DataAccess.User), "MedicalHistoryPractice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.MedicalHistoryPractice), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Address_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.State), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Address), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_GroupMedicalPractice_Group", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Group), "GroupMedicalPractice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.GroupMedicalPractice), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_InvoiceDetail_Group", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Medilab.DataAccess.Group), "InvoiceDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.InvoiceDetail), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_MedicalHistoryPractice_Group", "Group", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Medilab.DataAccess.Group), "MedicalHistoryPractice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.MedicalHistoryPractice), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_MedicalHistory_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Client), "MedicalHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.MedicalHistory), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_MedicalHistory_ClientArea", "ClientArea", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Medilab.DataAccess.ClientArea), "MedicalHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.MedicalHistory), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_ClinicalExam_MedicalHistory", "MedicalHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.MedicalHistory), "ClinicalExam", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.ClinicalExam), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_MedicalHistory_ClinicalHistoryResult", "ClinicalHistoryResult", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.ClinicalHistoryResult), "MedicalHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.MedicalHistory), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_MedicalHistory_ExamType", "ExamType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.ExamType), "MedicalHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.MedicalHistory), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_MedicalHistory_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.User), "MedicalHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.MedicalHistory), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_MedicalHistoryPractice_MedicalHistory", "MedicalHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.MedicalHistory), "MedicalHistoryPractice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.MedicalHistoryPractice), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_MedicalHistoryResult_MedicalHistory", "MedicalHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.MedicalHistory), "MedicalHistoryResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.MedicalHistoryResult), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Patient_CivilState", "CivilState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.CivilState), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Patient), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Patient_DocumentType", "DocumentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.DocumentType), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Patient), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Patient_Gender", "Gender", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Gender), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Patient), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Patient_InstructionLevel", "InstructionLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.InstructionLevel), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Patient), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_InvoiceDetail_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Medilab.DataAccess.Patient), "InvoiceDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.InvoiceDetail), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_MedicalHistory_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Patient), "MedicalHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.MedicalHistory), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Patient_PrivateMedicineCompany", "PrivateMedicineCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Medilab.DataAccess.PrivateMedicineCompany), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Patient), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Patient_State", "State", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.State), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Patient), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Patient_WorkRiskInsurance", "WorkRiskInsurance", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Medilab.DataAccess.WorkRiskInsurance), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Patient), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Cash_Receipt", "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Receipt), "Cash", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Cash), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Check_Receipt", "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Receipt), "Check", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Check), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Receipt_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Client), "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Receipt), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_ElectronicTrasnfer_Receipt", "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Receipt), "ElectronicTransfer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.ElectronicTransfer), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Receipt_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.User), "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Receipt), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_Receipt_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.User), "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.Receipt), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_RetentionCertificate_Receipt", "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Receipt), "RetentionCertificate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.RetentionCertificate), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_InvoiceHeader_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Client), "InvoiceHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.InvoiceHeader), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_InvoiceHeader_CompanyInfo", "CompanyInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.CompanyInfo), "InvoiceHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.InvoiceHeader), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_FiscalRetention_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.User), "FiscalRetention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.FiscalRetention), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_InvoiceProfileRetention_FiscalRetention", "FiscalRetention", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.FiscalRetention), "InvoiceProfileRetention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.InvoiceProfileRetention), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_InvoiceRetention_FiscalRetention", "FiscalRetention", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.FiscalRetention), "InvoiceRetention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.InvoiceRetention), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_InvoiceDetail_InvoiceHeader", "InvoiceHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.InvoiceHeader), "InvoiceDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.InvoiceDetail), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_InvoiceHeader_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.User), "InvoiceHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.InvoiceHeader), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_InvoiceHeader_User1", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.User), "InvoiceHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.InvoiceHeader), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_InvoiceRetention_InvoiceHeader", "InvoiceHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.InvoiceHeader), "InvoiceRetention", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.InvoiceRetention), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_DebitNote_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Client), "DebitNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.DebitNote), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_DebitNote_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.User), "DebitNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.DebitNote), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_ReceiptInvoice_Receipt", "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Receipt), "ReceiptInvoice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.ReceiptInvoice), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_CreditNote_Client", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.Client), "CreditNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.CreditNote), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_CreditNote_InvoiceHeader", "InvoiceHeader", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Medilab.DataAccess.InvoiceHeader), "CreditNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.CreditNote), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_CreditNote_Receipt", "Receipt", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Medilab.DataAccess.Receipt), "CreditNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.CreditNote), true)]
[assembly: EdmRelationshipAttribute("MedilabModel", "FK_CreditNote_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Medilab.DataAccess.User), "CreditNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Medilab.DataAccess.CreditNote), true)]

#endregion

namespace Medilab.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MedilabEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MedilabEntities object using the connection string found in the 'MedilabEntities' section of the application configuration file.
        /// </summary>
        public MedilabEntities() : base("name=MedilabEntities", "MedilabEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MedilabEntities object.
        /// </summary>
        public MedilabEntities(string connectionString) : base(connectionString, "MedilabEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MedilabEntities object.
        /// </summary>
        public MedilabEntities(EntityConnection connection) : base(connection, "MedilabEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AddressType> AddressType
        {
            get
            {
                if ((_AddressType == null))
                {
                    _AddressType = base.CreateObjectSet<AddressType>("AddressType");
                }
                return _AddressType;
            }
        }
        private ObjectSet<AddressType> _AddressType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Audit> Audit
        {
            get
            {
                if ((_Audit == null))
                {
                    _Audit = base.CreateObjectSet<Audit>("Audit");
                }
                return _Audit;
            }
        }
        private ObjectSet<Audit> _Audit;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CivilState> CivilState
        {
            get
            {
                if ((_CivilState == null))
                {
                    _CivilState = base.CreateObjectSet<CivilState>("CivilState");
                }
                return _CivilState;
            }
        }
        private ObjectSet<CivilState> _CivilState;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompanyInfo> CompanyInfo
        {
            get
            {
                if ((_CompanyInfo == null))
                {
                    _CompanyInfo = base.CreateObjectSet<CompanyInfo>("CompanyInfo");
                }
                return _CompanyInfo;
            }
        }
        private ObjectSet<CompanyInfo> _CompanyInfo;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentType> DocumentType
        {
            get
            {
                if ((_DocumentType == null))
                {
                    _DocumentType = base.CreateObjectSet<DocumentType>("DocumentType");
                }
                return _DocumentType;
            }
        }
        private ObjectSet<DocumentType> _DocumentType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Gender> Gender
        {
            get
            {
                if ((_Gender == null))
                {
                    _Gender = base.CreateObjectSet<Gender>("Gender");
                }
                return _Gender;
            }
        }
        private ObjectSet<Gender> _Gender;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InstructionLevel> InstructionLevel
        {
            get
            {
                if ((_InstructionLevel == null))
                {
                    _InstructionLevel = base.CreateObjectSet<InstructionLevel>("InstructionLevel");
                }
                return _InstructionLevel;
            }
        }
        private ObjectSet<InstructionLevel> _InstructionLevel;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ObjectType> ObjectType
        {
            get
            {
                if ((_ObjectType == null))
                {
                    _ObjectType = base.CreateObjectSet<ObjectType>("ObjectType");
                }
                return _ObjectType;
            }
        }
        private ObjectSet<ObjectType> _ObjectType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Role
        {
            get
            {
                if ((_Role == null))
                {
                    _Role = base.CreateObjectSet<Role>("Role");
                }
                return _Role;
            }
        }
        private ObjectSet<Role> _Role;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RolePrivilege> RolePrivilege
        {
            get
            {
                if ((_RolePrivilege == null))
                {
                    _RolePrivilege = base.CreateObjectSet<RolePrivilege>("RolePrivilege");
                }
                return _RolePrivilege;
            }
        }
        private ObjectSet<RolePrivilege> _RolePrivilege;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> User
        {
            get
            {
                if ((_User == null))
                {
                    _User = base.CreateObjectSet<User>("User");
                }
                return _User;
            }
        }
        private ObjectSet<User> _User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRole> UserRole
        {
            get
            {
                if ((_UserRole == null))
                {
                    _UserRole = base.CreateObjectSet<UserRole>("UserRole");
                }
                return _UserRole;
            }
        }
        private ObjectSet<UserRole> _UserRole;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkRiskInsurance> WorkRiskInsurance
        {
            get
            {
                if ((_WorkRiskInsurance == null))
                {
                    _WorkRiskInsurance = base.CreateObjectSet<WorkRiskInsurance>("WorkRiskInsurance");
                }
                return _WorkRiskInsurance;
            }
        }
        private ObjectSet<WorkRiskInsurance> _WorkRiskInsurance;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExamType> ExamType
        {
            get
            {
                if ((_ExamType == null))
                {
                    _ExamType = base.CreateObjectSet<ExamType>("ExamType");
                }
                return _ExamType;
            }
        }
        private ObjectSet<ExamType> _ExamType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClinicalHistoryResult> ClinicalHistoryResult
        {
            get
            {
                if ((_ClinicalHistoryResult == null))
                {
                    _ClinicalHistoryResult = base.CreateObjectSet<ClinicalHistoryResult>("ClinicalHistoryResult");
                }
                return _ClinicalHistoryResult;
            }
        }
        private ObjectSet<ClinicalHistoryResult> _ClinicalHistoryResult;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Speciality> Speciality
        {
            get
            {
                if ((_Speciality == null))
                {
                    _Speciality = base.CreateObjectSet<Speciality>("Speciality");
                }
                return _Speciality;
            }
        }
        private ObjectSet<Speciality> _Speciality;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GroupMedicalPractice> GroupMedicalPractice
        {
            get
            {
                if ((_GroupMedicalPractice == null))
                {
                    _GroupMedicalPractice = base.CreateObjectSet<GroupMedicalPractice>("GroupMedicalPractice");
                }
                return _GroupMedicalPractice;
            }
        }
        private ObjectSet<GroupMedicalPractice> _GroupMedicalPractice;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientArea> ClientArea
        {
            get
            {
                if ((_ClientArea == null))
                {
                    _ClientArea = base.CreateObjectSet<ClientArea>("ClientArea");
                }
                return _ClientArea;
            }
        }
        private ObjectSet<ClientArea> _ClientArea;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivateMedicineCompany> PrivateMedicineCompany
        {
            get
            {
                if ((_PrivateMedicineCompany == null))
                {
                    _PrivateMedicineCompany = base.CreateObjectSet<PrivateMedicineCompany>("PrivateMedicineCompany");
                }
                return _PrivateMedicineCompany;
            }
        }
        private ObjectSet<PrivateMedicineCompany> _PrivateMedicineCompany;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PracticeGroupPrice> PracticeGroupPrice
        {
            get
            {
                if ((_PracticeGroupPrice == null))
                {
                    _PracticeGroupPrice = base.CreateObjectSet<PracticeGroupPrice>("PracticeGroupPrice");
                }
                return _PracticeGroupPrice;
            }
        }
        private ObjectSet<PracticeGroupPrice> _PracticeGroupPrice;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Client
        {
            get
            {
                if ((_Client == null))
                {
                    _Client = base.CreateObjectSet<Client>("Client");
                }
                return _Client;
            }
        }
        private ObjectSet<Client> _Client;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NextInvoiceNumber> NextInvoiceNumber
        {
            get
            {
                if ((_NextInvoiceNumber == null))
                {
                    _NextInvoiceNumber = base.CreateObjectSet<NextInvoiceNumber>("NextInvoiceNumber");
                }
                return _NextInvoiceNumber;
            }
        }
        private ObjectSet<NextInvoiceNumber> _NextInvoiceNumber;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AditionalItem> AditionalItem
        {
            get
            {
                if ((_AditionalItem == null))
                {
                    _AditionalItem = base.CreateObjectSet<AditionalItem>("AditionalItem");
                }
                return _AditionalItem;
            }
        }
        private ObjectSet<AditionalItem> _AditionalItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvoiceProfile> InvoiceProfile
        {
            get
            {
                if ((_InvoiceProfile == null))
                {
                    _InvoiceProfile = base.CreateObjectSet<InvoiceProfile>("InvoiceProfile");
                }
                return _InvoiceProfile;
            }
        }
        private ObjectSet<InvoiceProfile> _InvoiceProfile;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvoiceProfileRetention> InvoiceProfileRetention
        {
            get
            {
                if ((_InvoiceProfileRetention == null))
                {
                    _InvoiceProfileRetention = base.CreateObjectSet<InvoiceProfileRetention>("InvoiceProfileRetention");
                }
                return _InvoiceProfileRetention;
            }
        }
        private ObjectSet<InvoiceProfileRetention> _InvoiceProfileRetention;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvoiceDetail> InvoiceDetail
        {
            get
            {
                if ((_InvoiceDetail == null))
                {
                    _InvoiceDetail = base.CreateObjectSet<InvoiceDetail>("InvoiceDetail");
                }
                return _InvoiceDetail;
            }
        }
        private ObjectSet<InvoiceDetail> _InvoiceDetail;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvoiceRetention> InvoiceRetention
        {
            get
            {
                if ((_InvoiceRetention == null))
                {
                    _InvoiceRetention = base.CreateObjectSet<InvoiceRetention>("InvoiceRetention");
                }
                return _InvoiceRetention;
            }
        }
        private ObjectSet<InvoiceRetention> _InvoiceRetention;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IvaCondition> IvaCondition
        {
            get
            {
                if ((_IvaCondition == null))
                {
                    _IvaCondition = base.CreateObjectSet<IvaCondition>("IvaCondition");
                }
                return _IvaCondition;
            }
        }
        private ObjectSet<IvaCondition> _IvaCondition;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Address
        {
            get
            {
                if ((_Address == null))
                {
                    _Address = base.CreateObjectSet<Address>("Address");
                }
                return _Address;
            }
        }
        private ObjectSet<Address> _Address;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClinicalExam> ClinicalExam
        {
            get
            {
                if ((_ClinicalExam == null))
                {
                    _ClinicalExam = base.CreateObjectSet<ClinicalExam>("ClinicalExam");
                }
                return _ClinicalExam;
            }
        }
        private ObjectSet<ClinicalExam> _ClinicalExam;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalHistoryResult> MedicalHistoryResult
        {
            get
            {
                if ((_MedicalHistoryResult == null))
                {
                    _MedicalHistoryResult = base.CreateObjectSet<MedicalHistoryResult>("MedicalHistoryResult");
                }
                return _MedicalHistoryResult;
            }
        }
        private ObjectSet<MedicalHistoryResult> _MedicalHistoryResult;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalPractice> MedicalPractice
        {
            get
            {
                if ((_MedicalPractice == null))
                {
                    _MedicalPractice = base.CreateObjectSet<MedicalPractice>("MedicalPractice");
                }
                return _MedicalPractice;
            }
        }
        private ObjectSet<MedicalPractice> _MedicalPractice;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalHistoryPractice> MedicalHistoryPractice
        {
            get
            {
                if ((_MedicalHistoryPractice == null))
                {
                    _MedicalHistoryPractice = base.CreateObjectSet<MedicalHistoryPractice>("MedicalHistoryPractice");
                }
                return _MedicalHistoryPractice;
            }
        }
        private ObjectSet<MedicalHistoryPractice> _MedicalHistoryPractice;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> State
        {
            get
            {
                if ((_State == null))
                {
                    _State = base.CreateObjectSet<State>("State");
                }
                return _State;
            }
        }
        private ObjectSet<State> _State;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Group> Group
        {
            get
            {
                if ((_Group == null))
                {
                    _Group = base.CreateObjectSet<Group>("Group");
                }
                return _Group;
            }
        }
        private ObjectSet<Group> _Group;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalHistory> MedicalHistory
        {
            get
            {
                if ((_MedicalHistory == null))
                {
                    _MedicalHistory = base.CreateObjectSet<MedicalHistory>("MedicalHistory");
                }
                return _MedicalHistory;
            }
        }
        private ObjectSet<MedicalHistory> _MedicalHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patient
        {
            get
            {
                if ((_Patient == null))
                {
                    _Patient = base.CreateObjectSet<Patient>("Patient");
                }
                return _Patient;
            }
        }
        private ObjectSet<Patient> _Patient;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cash> Cash
        {
            get
            {
                if ((_Cash == null))
                {
                    _Cash = base.CreateObjectSet<Cash>("Cash");
                }
                return _Cash;
            }
        }
        private ObjectSet<Cash> _Cash;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Check> Check
        {
            get
            {
                if ((_Check == null))
                {
                    _Check = base.CreateObjectSet<Check>("Check");
                }
                return _Check;
            }
        }
        private ObjectSet<Check> _Check;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RetentionCertificate> RetentionCertificate
        {
            get
            {
                if ((_RetentionCertificate == null))
                {
                    _RetentionCertificate = base.CreateObjectSet<RetentionCertificate>("RetentionCertificate");
                }
                return _RetentionCertificate;
            }
        }
        private ObjectSet<RetentionCertificate> _RetentionCertificate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ElectronicTransfer> ElectronicTransfer
        {
            get
            {
                if ((_ElectronicTransfer == null))
                {
                    _ElectronicTransfer = base.CreateObjectSet<ElectronicTransfer>("ElectronicTransfer");
                }
                return _ElectronicTransfer;
            }
        }
        private ObjectSet<ElectronicTransfer> _ElectronicTransfer;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NextCreditNoteNumber> NextCreditNoteNumber
        {
            get
            {
                if ((_NextCreditNoteNumber == null))
                {
                    _NextCreditNoteNumber = base.CreateObjectSet<NextCreditNoteNumber>("NextCreditNoteNumber");
                }
                return _NextCreditNoteNumber;
            }
        }
        private ObjectSet<NextCreditNoteNumber> _NextCreditNoteNumber;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NextDebitNoteNumber> NextDebitNoteNumber
        {
            get
            {
                if ((_NextDebitNoteNumber == null))
                {
                    _NextDebitNoteNumber = base.CreateObjectSet<NextDebitNoteNumber>("NextDebitNoteNumber");
                }
                return _NextDebitNoteNumber;
            }
        }
        private ObjectSet<NextDebitNoteNumber> _NextDebitNoteNumber;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Receipt> Receipt
        {
            get
            {
                if ((_Receipt == null))
                {
                    _Receipt = base.CreateObjectSet<Receipt>("Receipt");
                }
                return _Receipt;
            }
        }
        private ObjectSet<Receipt> _Receipt;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FiscalRetention> FiscalRetention
        {
            get
            {
                if ((_FiscalRetention == null))
                {
                    _FiscalRetention = base.CreateObjectSet<FiscalRetention>("FiscalRetention");
                }
                return _FiscalRetention;
            }
        }
        private ObjectSet<FiscalRetention> _FiscalRetention;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvoiceHeader> InvoiceHeader
        {
            get
            {
                if ((_InvoiceHeader == null))
                {
                    _InvoiceHeader = base.CreateObjectSet<InvoiceHeader>("InvoiceHeader");
                }
                return _InvoiceHeader;
            }
        }
        private ObjectSet<InvoiceHeader> _InvoiceHeader;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Configuration> Configuration
        {
            get
            {
                if ((_Configuration == null))
                {
                    _Configuration = base.CreateObjectSet<Configuration>("Configuration");
                }
                return _Configuration;
            }
        }
        private ObjectSet<Configuration> _Configuration;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DebitNote> DebitNote
        {
            get
            {
                if ((_DebitNote == null))
                {
                    _DebitNote = base.CreateObjectSet<DebitNote>("DebitNote");
                }
                return _DebitNote;
            }
        }
        private ObjectSet<DebitNote> _DebitNote;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReceiptInvoice> ReceiptInvoice
        {
            get
            {
                if ((_ReceiptInvoice == null))
                {
                    _ReceiptInvoice = base.CreateObjectSet<ReceiptInvoice>("ReceiptInvoice");
                }
                return _ReceiptInvoice;
            }
        }
        private ObjectSet<ReceiptInvoice> _ReceiptInvoice;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CreditNote> CreditNote
        {
            get
            {
                if ((_CreditNote == null))
                {
                    _CreditNote = base.CreateObjectSet<CreditNote>("CreditNote");
                }
                return _CreditNote;
            }
        }
        private ObjectSet<CreditNote> _CreditNote;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AddressType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddressType(AddressType addressType)
        {
            base.AddObject("AddressType", addressType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Audit EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAudit(Audit audit)
        {
            base.AddObject("Audit", audit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CivilState EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCivilState(CivilState civilState)
        {
            base.AddObject("CivilState", civilState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompanyInfo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanyInfo(CompanyInfo companyInfo)
        {
            base.AddObject("CompanyInfo", companyInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentType(DocumentType documentType)
        {
            base.AddObject("DocumentType", documentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Gender EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGender(Gender gender)
        {
            base.AddObject("Gender", gender);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InstructionLevel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInstructionLevel(InstructionLevel instructionLevel)
        {
            base.AddObject("InstructionLevel", instructionLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ObjectType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToObjectType(ObjectType objectType)
        {
            base.AddObject("ObjectType", objectType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Role EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRole(Role role)
        {
            base.AddObject("Role", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RolePrivilege EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRolePrivilege(RolePrivilege rolePrivilege)
        {
            base.AddObject("RolePrivilege", rolePrivilege);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUser(User user)
        {
            base.AddObject("User", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRole EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRole(UserRole userRole)
        {
            base.AddObject("UserRole", userRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkRiskInsurance EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkRiskInsurance(WorkRiskInsurance workRiskInsurance)
        {
            base.AddObject("WorkRiskInsurance", workRiskInsurance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExamType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExamType(ExamType examType)
        {
            base.AddObject("ExamType", examType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClinicalHistoryResult EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClinicalHistoryResult(ClinicalHistoryResult clinicalHistoryResult)
        {
            base.AddObject("ClinicalHistoryResult", clinicalHistoryResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Speciality EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpeciality(Speciality speciality)
        {
            base.AddObject("Speciality", speciality);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GroupMedicalPractice EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroupMedicalPractice(GroupMedicalPractice groupMedicalPractice)
        {
            base.AddObject("GroupMedicalPractice", groupMedicalPractice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientArea EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientArea(ClientArea clientArea)
        {
            base.AddObject("ClientArea", clientArea);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivateMedicineCompany EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivateMedicineCompany(PrivateMedicineCompany privateMedicineCompany)
        {
            base.AddObject("PrivateMedicineCompany", privateMedicineCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PracticeGroupPrice EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPracticeGroupPrice(PracticeGroupPrice practiceGroupPrice)
        {
            base.AddObject("PracticeGroupPrice", practiceGroupPrice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Client EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClient(Client client)
        {
            base.AddObject("Client", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NextInvoiceNumber EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNextInvoiceNumber(NextInvoiceNumber nextInvoiceNumber)
        {
            base.AddObject("NextInvoiceNumber", nextInvoiceNumber);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AditionalItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAditionalItem(AditionalItem aditionalItem)
        {
            base.AddObject("AditionalItem", aditionalItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvoiceProfile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoiceProfile(InvoiceProfile invoiceProfile)
        {
            base.AddObject("InvoiceProfile", invoiceProfile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvoiceProfileRetention EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoiceProfileRetention(InvoiceProfileRetention invoiceProfileRetention)
        {
            base.AddObject("InvoiceProfileRetention", invoiceProfileRetention);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvoiceDetail EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoiceDetail(InvoiceDetail invoiceDetail)
        {
            base.AddObject("InvoiceDetail", invoiceDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvoiceRetention EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoiceRetention(InvoiceRetention invoiceRetention)
        {
            base.AddObject("InvoiceRetention", invoiceRetention);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IvaCondition EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIvaCondition(IvaCondition ivaCondition)
        {
            base.AddObject("IvaCondition", ivaCondition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Address EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddress(Address address)
        {
            base.AddObject("Address", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClinicalExam EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClinicalExam(ClinicalExam clinicalExam)
        {
            base.AddObject("ClinicalExam", clinicalExam);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalHistoryResult EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalHistoryResult(MedicalHistoryResult medicalHistoryResult)
        {
            base.AddObject("MedicalHistoryResult", medicalHistoryResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalPractice EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalPractice(MedicalPractice medicalPractice)
        {
            base.AddObject("MedicalPractice", medicalPractice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalHistoryPractice EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalHistoryPractice(MedicalHistoryPractice medicalHistoryPractice)
        {
            base.AddObject("MedicalHistoryPractice", medicalHistoryPractice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the State EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToState(State state)
        {
            base.AddObject("State", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Group EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGroup(Group group)
        {
            base.AddObject("Group", group);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalHistory(MedicalHistory medicalHistory)
        {
            base.AddObject("MedicalHistory", medicalHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patient EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatient(Patient patient)
        {
            base.AddObject("Patient", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cash EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCash(Cash cash)
        {
            base.AddObject("Cash", cash);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Check EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCheck(Check check)
        {
            base.AddObject("Check", check);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RetentionCertificate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRetentionCertificate(RetentionCertificate retentionCertificate)
        {
            base.AddObject("RetentionCertificate", retentionCertificate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ElectronicTransfer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToElectronicTransfer(ElectronicTransfer electronicTransfer)
        {
            base.AddObject("ElectronicTransfer", electronicTransfer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NextCreditNoteNumber EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNextCreditNoteNumber(NextCreditNoteNumber nextCreditNoteNumber)
        {
            base.AddObject("NextCreditNoteNumber", nextCreditNoteNumber);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NextDebitNoteNumber EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNextDebitNoteNumber(NextDebitNoteNumber nextDebitNoteNumber)
        {
            base.AddObject("NextDebitNoteNumber", nextDebitNoteNumber);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Receipt EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceipt(Receipt receipt)
        {
            base.AddObject("Receipt", receipt);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FiscalRetention EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFiscalRetention(FiscalRetention fiscalRetention)
        {
            base.AddObject("FiscalRetention", fiscalRetention);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvoiceHeader EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvoiceHeader(InvoiceHeader invoiceHeader)
        {
            base.AddObject("InvoiceHeader", invoiceHeader);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Configuration EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfiguration(Configuration configuration)
        {
            base.AddObject("Configuration", configuration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DebitNote EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDebitNote(DebitNote debitNote)
        {
            base.AddObject("DebitNote", debitNote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReceiptInvoice EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReceiptInvoice(ReceiptInvoice receiptInvoice)
        {
            base.AddObject("ReceiptInvoice", receiptInvoice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CreditNote EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCreditNote(CreditNote creditNote)
        {
            base.AddObject("CreditNote", creditNote);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="addressId">Initial value of the AddressId property.</param>
        /// <param name="addressOwner">Initial value of the AddressOwner property.</param>
        /// <param name="addressTypeId">Initial value of the AddressTypeId property.</param>
        /// <param name="street">Initial value of the Street property.</param>
        /// <param name="number">Initial value of the Number property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="otherInformation">Initial value of the OtherInformation property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="isDefault">Initial value of the IsDefault property.</param>
        public static Address CreateAddress(global::System.Guid addressId, global::System.Guid addressOwner, global::System.Int32 addressTypeId, global::System.String street, global::System.String number, global::System.String city, global::System.String otherInformation, global::System.Int32 stateId, global::System.Boolean isDeleted, global::System.Byte[] lastUpdated, global::System.Boolean isDefault)
        {
            Address address = new Address();
            address.AddressId = addressId;
            address.AddressOwner = addressOwner;
            address.AddressTypeId = addressTypeId;
            address.Street = street;
            address.Number = number;
            address.City = city;
            address.OtherInformation = otherInformation;
            address.StateId = stateId;
            address.IsDeleted = isDeleted;
            address.LastUpdated = lastUpdated;
            address.IsDefault = isDefault;
            return address;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                if (_AddressId != value)
                {
                    OnAddressIdChanging(value);
                    ReportPropertyChanging("AddressId");
                    _AddressId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressId");
                    OnAddressIdChanged();
                }
            }
        }
        private global::System.Guid _AddressId;
        partial void OnAddressIdChanging(global::System.Guid value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AddressOwner
        {
            get
            {
                return _AddressOwner;
            }
            set
            {
                OnAddressOwnerChanging(value);
                ReportPropertyChanging("AddressOwner");
                _AddressOwner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressOwner");
                OnAddressOwnerChanged();
            }
        }
        private global::System.Guid _AddressOwner;
        partial void OnAddressOwnerChanging(global::System.Guid value);
        partial void OnAddressOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressTypeId
        {
            get
            {
                return _AddressTypeId;
            }
            set
            {
                OnAddressTypeIdChanging(value);
                ReportPropertyChanging("AddressTypeId");
                _AddressTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressTypeId");
                OnAddressTypeIdChanged();
            }
        }
        private global::System.Int32 _AddressTypeId;
        partial void OnAddressTypeIdChanging(global::System.Int32 value);
        partial void OnAddressTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Street
        {
            get
            {
                return _Street;
            }
            set
            {
                OnStreetChanging(value);
                ReportPropertyChanging("Street");
                _Street = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Street");
                OnStreetChanged();
            }
        }
        private global::System.String _Street;
        partial void OnStreetChanging(global::System.String value);
        partial void OnStreetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.String _Number;
        partial void OnNumberChanging(global::System.String value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OtherInformation
        {
            get
            {
                return _OtherInformation;
            }
            set
            {
                OnOtherInformationChanging(value);
                ReportPropertyChanging("OtherInformation");
                _OtherInformation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OtherInformation");
                OnOtherInformationChanged();
            }
        }
        private global::System.String _OtherInformation;
        partial void OnOtherInformationChanging(global::System.String value);
        partial void OnOtherInformationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private global::System.Boolean _IsDefault;
        partial void OnIsDefaultChanging(global::System.Boolean value);
        partial void OnIsDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ArchiveDate
        {
            get
            {
                return _ArchiveDate;
            }
            set
            {
                OnArchiveDateChanging(value);
                ReportPropertyChanging("ArchiveDate");
                _ArchiveDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ArchiveDate");
                OnArchiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ArchiveDate;
        partial void OnArchiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnArchiveDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Address_AddressType", "AddressType")]
        public AddressType AddressType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("MedilabModel.FK_Address_AddressType", "AddressType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("MedilabModel.FK_Address_AddressType", "AddressType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AddressType> AddressTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("MedilabModel.FK_Address_AddressType", "AddressType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AddressType>("MedilabModel.FK_Address_AddressType", "AddressType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Address_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("MedilabModel.FK_Address_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("MedilabModel.FK_Address_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("MedilabModel.FK_Address_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("MedilabModel.FK_Address_State", "State", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="AddressType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AddressType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AddressType object.
        /// </summary>
        /// <param name="addressTypeId">Initial value of the AddressTypeId property.</param>
        /// <param name="addressTypeName">Initial value of the AddressTypeName property.</param>
        public static AddressType CreateAddressType(global::System.Int32 addressTypeId, global::System.String addressTypeName)
        {
            AddressType addressType = new AddressType();
            addressType.AddressTypeId = addressTypeId;
            addressType.AddressTypeName = addressTypeName;
            return addressType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressTypeId
        {
            get
            {
                return _AddressTypeId;
            }
            set
            {
                if (_AddressTypeId != value)
                {
                    OnAddressTypeIdChanging(value);
                    ReportPropertyChanging("AddressTypeId");
                    _AddressTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressTypeId");
                    OnAddressTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _AddressTypeId;
        partial void OnAddressTypeIdChanging(global::System.Int32 value);
        partial void OnAddressTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressTypeName
        {
            get
            {
                return _AddressTypeName;
            }
            set
            {
                OnAddressTypeNameChanging(value);
                ReportPropertyChanging("AddressTypeName");
                _AddressTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddressTypeName");
                OnAddressTypeNameChanged();
            }
        }
        private global::System.String _AddressTypeName;
        partial void OnAddressTypeNameChanging(global::System.String value);
        partial void OnAddressTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Address_AddressType", "Address")]
        public EntityCollection<Address> Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("MedilabModel.FK_Address_AddressType", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("MedilabModel.FK_Address_AddressType", "Address", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="AditionalItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AditionalItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AditionalItem object.
        /// </summary>
        /// <param name="aditionaltemId">Initial value of the AditionaltemId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        public static AditionalItem CreateAditionalItem(global::System.Guid aditionaltemId, global::System.String name, global::System.String description, global::System.Boolean isDeleted, global::System.Int32 code)
        {
            AditionalItem aditionalItem = new AditionalItem();
            aditionalItem.AditionaltemId = aditionaltemId;
            aditionalItem.Name = name;
            aditionalItem.Description = description;
            aditionalItem.IsDeleted = isDeleted;
            aditionalItem.Code = code;
            return aditionalItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AditionaltemId
        {
            get
            {
                return _AditionaltemId;
            }
            set
            {
                if (_AditionaltemId != value)
                {
                    OnAditionaltemIdChanging(value);
                    ReportPropertyChanging("AditionaltemId");
                    _AditionaltemId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AditionaltemId");
                    OnAditionaltemIdChanged();
                }
            }
        }
        private global::System.Guid _AditionaltemId;
        partial void OnAditionaltemIdChanging(global::System.Guid value);
        partial void OnAditionaltemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.Int32 _Code;
        partial void OnCodeChanging(global::System.Int32 value);
        partial void OnCodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="Audit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Audit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Audit object.
        /// </summary>
        /// <param name="auditId">Initial value of the AuditId property.</param>
        /// <param name="auditCreatedDate">Initial value of the AuditCreatedDate property.</param>
        /// <param name="auditUserId">Initial value of the AuditUserId property.</param>
        /// <param name="auditObjectTypeId">Initial value of the AuditObjectTypeId property.</param>
        /// <param name="auditOperation">Initial value of the AuditOperation property.</param>
        /// <param name="auditObjectId">Initial value of the AuditObjectId property.</param>
        /// <param name="auditChangedValues">Initial value of the AuditChangedValues property.</param>
        public static Audit CreateAudit(global::System.Guid auditId, global::System.DateTime auditCreatedDate, global::System.Guid auditUserId, global::System.Int32 auditObjectTypeId, global::System.String auditOperation, global::System.Guid auditObjectId, global::System.String auditChangedValues)
        {
            Audit audit = new Audit();
            audit.AuditId = auditId;
            audit.AuditCreatedDate = auditCreatedDate;
            audit.AuditUserId = auditUserId;
            audit.AuditObjectTypeId = auditObjectTypeId;
            audit.AuditOperation = auditOperation;
            audit.AuditObjectId = auditObjectId;
            audit.AuditChangedValues = auditChangedValues;
            return audit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AuditId
        {
            get
            {
                return _AuditId;
            }
            set
            {
                if (_AuditId != value)
                {
                    OnAuditIdChanging(value);
                    ReportPropertyChanging("AuditId");
                    _AuditId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AuditId");
                    OnAuditIdChanged();
                }
            }
        }
        private global::System.Guid _AuditId;
        partial void OnAuditIdChanging(global::System.Guid value);
        partial void OnAuditIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AuditCreatedDate
        {
            get
            {
                return _AuditCreatedDate;
            }
            set
            {
                OnAuditCreatedDateChanging(value);
                ReportPropertyChanging("AuditCreatedDate");
                _AuditCreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuditCreatedDate");
                OnAuditCreatedDateChanged();
            }
        }
        private global::System.DateTime _AuditCreatedDate;
        partial void OnAuditCreatedDateChanging(global::System.DateTime value);
        partial void OnAuditCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AuditUserId
        {
            get
            {
                return _AuditUserId;
            }
            set
            {
                OnAuditUserIdChanging(value);
                ReportPropertyChanging("AuditUserId");
                _AuditUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuditUserId");
                OnAuditUserIdChanged();
            }
        }
        private global::System.Guid _AuditUserId;
        partial void OnAuditUserIdChanging(global::System.Guid value);
        partial void OnAuditUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuditObjectTypeId
        {
            get
            {
                return _AuditObjectTypeId;
            }
            set
            {
                OnAuditObjectTypeIdChanging(value);
                ReportPropertyChanging("AuditObjectTypeId");
                _AuditObjectTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuditObjectTypeId");
                OnAuditObjectTypeIdChanged();
            }
        }
        private global::System.Int32 _AuditObjectTypeId;
        partial void OnAuditObjectTypeIdChanging(global::System.Int32 value);
        partial void OnAuditObjectTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuditOperation
        {
            get
            {
                return _AuditOperation;
            }
            set
            {
                OnAuditOperationChanging(value);
                ReportPropertyChanging("AuditOperation");
                _AuditOperation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuditOperation");
                OnAuditOperationChanged();
            }
        }
        private global::System.String _AuditOperation;
        partial void OnAuditOperationChanging(global::System.String value);
        partial void OnAuditOperationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AuditObjectId
        {
            get
            {
                return _AuditObjectId;
            }
            set
            {
                OnAuditObjectIdChanging(value);
                ReportPropertyChanging("AuditObjectId");
                _AuditObjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuditObjectId");
                OnAuditObjectIdChanged();
            }
        }
        private global::System.Guid _AuditObjectId;
        partial void OnAuditObjectIdChanging(global::System.Guid value);
        partial void OnAuditObjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuditChangedValues
        {
            get
            {
                return _AuditChangedValues;
            }
            set
            {
                OnAuditChangedValuesChanging(value);
                ReportPropertyChanging("AuditChangedValues");
                _AuditChangedValues = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuditChangedValues");
                OnAuditChangedValuesChanged();
            }
        }
        private global::System.String _AuditChangedValues;
        partial void OnAuditChangedValuesChanging(global::System.String value);
        partial void OnAuditChangedValuesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Audit_ObjectType", "ObjectType")]
        public ObjectType ObjectType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectType>("MedilabModel.FK_Audit_ObjectType", "ObjectType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectType>("MedilabModel.FK_Audit_ObjectType", "ObjectType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ObjectType> ObjectTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ObjectType>("MedilabModel.FK_Audit_ObjectType", "ObjectType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ObjectType>("MedilabModel.FK_Audit_ObjectType", "ObjectType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Audit_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_Audit_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_Audit_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_Audit_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MedilabModel.FK_Audit_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="Cash")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cash : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cash object.
        /// </summary>
        /// <param name="cashId">Initial value of the CashId property.</param>
        /// <param name="cashImport">Initial value of the CashImport property.</param>
        /// <param name="paymentDate">Initial value of the PaymentDate property.</param>
        /// <param name="receiptId">Initial value of the ReceiptId property.</param>
        /// <param name="notes">Initial value of the Notes property.</param>
        public static Cash CreateCash(global::System.Guid cashId, global::System.Double cashImport, global::System.DateTime paymentDate, global::System.Guid receiptId, global::System.String notes)
        {
            Cash cash = new Cash();
            cash.CashId = cashId;
            cash.CashImport = cashImport;
            cash.PaymentDate = paymentDate;
            cash.ReceiptId = receiptId;
            cash.Notes = notes;
            return cash;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CashId
        {
            get
            {
                return _CashId;
            }
            set
            {
                if (_CashId != value)
                {
                    OnCashIdChanging(value);
                    ReportPropertyChanging("CashId");
                    _CashId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CashId");
                    OnCashIdChanged();
                }
            }
        }
        private global::System.Guid _CashId;
        partial void OnCashIdChanging(global::System.Guid value);
        partial void OnCashIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CashImport
        {
            get
            {
                return _CashImport;
            }
            set
            {
                OnCashImportChanging(value);
                ReportPropertyChanging("CashImport");
                _CashImport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CashImport");
                OnCashImportChanged();
            }
        }
        private global::System.Double _CashImport;
        partial void OnCashImportChanging(global::System.Double value);
        partial void OnCashImportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private global::System.DateTime _PaymentDate;
        partial void OnPaymentDateChanging(global::System.DateTime value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReceiptId
        {
            get
            {
                return _ReceiptId;
            }
            set
            {
                OnReceiptIdChanging(value);
                ReportPropertyChanging("ReceiptId");
                _ReceiptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiptId");
                OnReceiptIdChanged();
            }
        }
        private global::System.Guid _ReceiptId;
        partial void OnReceiptIdChanging(global::System.Guid value);
        partial void OnReceiptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Cash_Receipt", "Receipt")]
        public Receipt Receipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_Cash_Receipt", "Receipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_Cash_Receipt", "Receipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Receipt> ReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_Cash_Receipt", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Receipt>("MedilabModel.FK_Cash_Receipt", "Receipt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="Check")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Check : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Check object.
        /// </summary>
        /// <param name="checkId">Initial value of the CheckId property.</param>
        /// <param name="checkImport">Initial value of the CheckImport property.</param>
        /// <param name="paymentDate">Initial value of the PaymentDate property.</param>
        /// <param name="receiptId">Initial value of the ReceiptId property.</param>
        /// <param name="bankName">Initial value of the BankName property.</param>
        /// <param name="checkNumber">Initial value of the CheckNumber property.</param>
        /// <param name="ownerName">Initial value of the OwnerName property.</param>
        /// <param name="isOwner">Initial value of the IsOwner property.</param>
        /// <param name="issuanceDate">Initial value of the IssuanceDate property.</param>
        /// <param name="expirationDate">Initial value of the ExpirationDate property.</param>
        /// <param name="notes">Initial value of the Notes property.</param>
        public static Check CreateCheck(global::System.Guid checkId, global::System.Double checkImport, global::System.DateTime paymentDate, global::System.Guid receiptId, global::System.String bankName, global::System.String checkNumber, global::System.String ownerName, global::System.Boolean isOwner, global::System.DateTime issuanceDate, global::System.DateTime expirationDate, global::System.String notes)
        {
            Check check = new Check();
            check.CheckId = checkId;
            check.CheckImport = checkImport;
            check.PaymentDate = paymentDate;
            check.ReceiptId = receiptId;
            check.BankName = bankName;
            check.CheckNumber = checkNumber;
            check.OwnerName = ownerName;
            check.IsOwner = isOwner;
            check.IssuanceDate = issuanceDate;
            check.ExpirationDate = expirationDate;
            check.Notes = notes;
            return check;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CheckId
        {
            get
            {
                return _CheckId;
            }
            set
            {
                if (_CheckId != value)
                {
                    OnCheckIdChanging(value);
                    ReportPropertyChanging("CheckId");
                    _CheckId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CheckId");
                    OnCheckIdChanged();
                }
            }
        }
        private global::System.Guid _CheckId;
        partial void OnCheckIdChanging(global::System.Guid value);
        partial void OnCheckIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double CheckImport
        {
            get
            {
                return _CheckImport;
            }
            set
            {
                OnCheckImportChanging(value);
                ReportPropertyChanging("CheckImport");
                _CheckImport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CheckImport");
                OnCheckImportChanged();
            }
        }
        private global::System.Double _CheckImport;
        partial void OnCheckImportChanging(global::System.Double value);
        partial void OnCheckImportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private global::System.DateTime _PaymentDate;
        partial void OnPaymentDateChanging(global::System.DateTime value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReceiptId
        {
            get
            {
                return _ReceiptId;
            }
            set
            {
                OnReceiptIdChanging(value);
                ReportPropertyChanging("ReceiptId");
                _ReceiptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiptId");
                OnReceiptIdChanged();
            }
        }
        private global::System.Guid _ReceiptId;
        partial void OnReceiptIdChanging(global::System.Guid value);
        partial void OnReceiptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CheckNumber
        {
            get
            {
                return _CheckNumber;
            }
            set
            {
                OnCheckNumberChanging(value);
                ReportPropertyChanging("CheckNumber");
                _CheckNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CheckNumber");
                OnCheckNumberChanged();
            }
        }
        private global::System.String _CheckNumber;
        partial void OnCheckNumberChanging(global::System.String value);
        partial void OnCheckNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OwnerName
        {
            get
            {
                return _OwnerName;
            }
            set
            {
                OnOwnerNameChanging(value);
                ReportPropertyChanging("OwnerName");
                _OwnerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OwnerName");
                OnOwnerNameChanged();
            }
        }
        private global::System.String _OwnerName;
        partial void OnOwnerNameChanging(global::System.String value);
        partial void OnOwnerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOwner
        {
            get
            {
                return _IsOwner;
            }
            set
            {
                OnIsOwnerChanging(value);
                ReportPropertyChanging("IsOwner");
                _IsOwner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOwner");
                OnIsOwnerChanged();
            }
        }
        private global::System.Boolean _IsOwner;
        partial void OnIsOwnerChanging(global::System.Boolean value);
        partial void OnIsOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IssuanceDate
        {
            get
            {
                return _IssuanceDate;
            }
            set
            {
                OnIssuanceDateChanging(value);
                ReportPropertyChanging("IssuanceDate");
                _IssuanceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuanceDate");
                OnIssuanceDateChanged();
            }
        }
        private global::System.DateTime _IssuanceDate;
        partial void OnIssuanceDateChanging(global::System.DateTime value);
        partial void OnIssuanceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ExpirationDate
        {
            get
            {
                return _ExpirationDate;
            }
            set
            {
                OnExpirationDateChanging(value);
                ReportPropertyChanging("ExpirationDate");
                _ExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDate");
                OnExpirationDateChanged();
            }
        }
        private global::System.DateTime _ExpirationDate;
        partial void OnExpirationDateChanging(global::System.DateTime value);
        partial void OnExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Check_Receipt", "Receipt")]
        public Receipt Receipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_Check_Receipt", "Receipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_Check_Receipt", "Receipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Receipt> ReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_Check_Receipt", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Receipt>("MedilabModel.FK_Check_Receipt", "Receipt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="CivilState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CivilState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CivilState object.
        /// </summary>
        /// <param name="civilStateId">Initial value of the CivilStateId property.</param>
        /// <param name="civilStateName">Initial value of the CivilStateName property.</param>
        public static CivilState CreateCivilState(global::System.Int32 civilStateId, global::System.String civilStateName)
        {
            CivilState civilState = new CivilState();
            civilState.CivilStateId = civilStateId;
            civilState.CivilStateName = civilStateName;
            return civilState;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CivilStateId
        {
            get
            {
                return _CivilStateId;
            }
            set
            {
                if (_CivilStateId != value)
                {
                    OnCivilStateIdChanging(value);
                    ReportPropertyChanging("CivilStateId");
                    _CivilStateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CivilStateId");
                    OnCivilStateIdChanged();
                }
            }
        }
        private global::System.Int32 _CivilStateId;
        partial void OnCivilStateIdChanging(global::System.Int32 value);
        partial void OnCivilStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CivilStateName
        {
            get
            {
                return _CivilStateName;
            }
            set
            {
                OnCivilStateNameChanging(value);
                ReportPropertyChanging("CivilStateName");
                _CivilStateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CivilStateName");
                OnCivilStateNameChanged();
            }
        }
        private global::System.String _CivilStateName;
        partial void OnCivilStateNameChanging(global::System.String value);
        partial void OnCivilStateNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Patient_CivilState", "Patient")]
        public EntityCollection<Patient> Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("MedilabModel.FK_Patient_CivilState", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("MedilabModel.FK_Patient_CivilState", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="Client")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        /// <param name="clientName">Initial value of the ClientName property.</param>
        /// <param name="clientCuit">Initial value of the ClientCuit property.</param>
        /// <param name="clientAditionalInformation">Initial value of the ClientAditionalInformation property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="clientIsDeleted">Initial value of the ClientIsDeleted property.</param>
        /// <param name="clientPhoneNumber">Initial value of the ClientPhoneNumber property.</param>
        /// <param name="clientFaxNumber">Initial value of the ClientFaxNumber property.</param>
        /// <param name="clientEmailAddress">Initial value of the ClientEmailAddress property.</param>
        /// <param name="clientNumber">Initial value of the ClientNumber property.</param>
        /// <param name="ivaConditionId">Initial value of the IvaConditionId property.</param>
        /// <param name="documentTypeId">Initial value of the DocumentTypeId property.</param>
        public static Client CreateClient(global::System.Guid clientId, global::System.String clientName, global::System.String clientCuit, global::System.String clientAditionalInformation, global::System.Byte[] lastUpdated, global::System.Boolean clientIsDeleted, global::System.String clientPhoneNumber, global::System.String clientFaxNumber, global::System.String clientEmailAddress, global::System.Int32 clientNumber, global::System.Int32 ivaConditionId, global::System.Int32 documentTypeId)
        {
            Client client = new Client();
            client.ClientId = clientId;
            client.ClientName = clientName;
            client.ClientCuit = clientCuit;
            client.ClientAditionalInformation = clientAditionalInformation;
            client.LastUpdated = lastUpdated;
            client.ClientIsDeleted = clientIsDeleted;
            client.ClientPhoneNumber = clientPhoneNumber;
            client.ClientFaxNumber = clientFaxNumber;
            client.ClientEmailAddress = clientEmailAddress;
            client.ClientNumber = clientNumber;
            client.IvaConditionId = ivaConditionId;
            client.DocumentTypeId = documentTypeId;
            return client;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    OnClientIdChanging(value);
                    ReportPropertyChanging("ClientId");
                    _ClientId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientId");
                    OnClientIdChanged();
                }
            }
        }
        private global::System.Guid _ClientId;
        partial void OnClientIdChanging(global::System.Guid value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientName
        {
            get
            {
                return _ClientName;
            }
            set
            {
                OnClientNameChanging(value);
                ReportPropertyChanging("ClientName");
                _ClientName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClientName");
                OnClientNameChanged();
            }
        }
        private global::System.String _ClientName;
        partial void OnClientNameChanging(global::System.String value);
        partial void OnClientNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientCuit
        {
            get
            {
                return _ClientCuit;
            }
            set
            {
                OnClientCuitChanging(value);
                ReportPropertyChanging("ClientCuit");
                _ClientCuit = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClientCuit");
                OnClientCuitChanged();
            }
        }
        private global::System.String _ClientCuit;
        partial void OnClientCuitChanging(global::System.String value);
        partial void OnClientCuitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientAditionalInformation
        {
            get
            {
                return _ClientAditionalInformation;
            }
            set
            {
                OnClientAditionalInformationChanging(value);
                ReportPropertyChanging("ClientAditionalInformation");
                _ClientAditionalInformation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClientAditionalInformation");
                OnClientAditionalInformationChanged();
            }
        }
        private global::System.String _ClientAditionalInformation;
        partial void OnClientAditionalInformationChanging(global::System.String value);
        partial void OnClientAditionalInformationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ClientIsDeleted
        {
            get
            {
                return _ClientIsDeleted;
            }
            set
            {
                OnClientIsDeletedChanging(value);
                ReportPropertyChanging("ClientIsDeleted");
                _ClientIsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientIsDeleted");
                OnClientIsDeletedChanged();
            }
        }
        private global::System.Boolean _ClientIsDeleted;
        partial void OnClientIsDeletedChanging(global::System.Boolean value);
        partial void OnClientIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientPhoneNumber
        {
            get
            {
                return _ClientPhoneNumber;
            }
            set
            {
                OnClientPhoneNumberChanging(value);
                ReportPropertyChanging("ClientPhoneNumber");
                _ClientPhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClientPhoneNumber");
                OnClientPhoneNumberChanged();
            }
        }
        private global::System.String _ClientPhoneNumber;
        partial void OnClientPhoneNumberChanging(global::System.String value);
        partial void OnClientPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientFaxNumber
        {
            get
            {
                return _ClientFaxNumber;
            }
            set
            {
                OnClientFaxNumberChanging(value);
                ReportPropertyChanging("ClientFaxNumber");
                _ClientFaxNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClientFaxNumber");
                OnClientFaxNumberChanged();
            }
        }
        private global::System.String _ClientFaxNumber;
        partial void OnClientFaxNumberChanging(global::System.String value);
        partial void OnClientFaxNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClientEmailAddress
        {
            get
            {
                return _ClientEmailAddress;
            }
            set
            {
                OnClientEmailAddressChanging(value);
                ReportPropertyChanging("ClientEmailAddress");
                _ClientEmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClientEmailAddress");
                OnClientEmailAddressChanged();
            }
        }
        private global::System.String _ClientEmailAddress;
        partial void OnClientEmailAddressChanging(global::System.String value);
        partial void OnClientEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClientNumber
        {
            get
            {
                return _ClientNumber;
            }
            set
            {
                OnClientNumberChanging(value);
                ReportPropertyChanging("ClientNumber");
                _ClientNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientNumber");
                OnClientNumberChanged();
            }
        }
        private global::System.Int32 _ClientNumber;
        partial void OnClientNumberChanging(global::System.Int32 value);
        partial void OnClientNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IvaConditionId
        {
            get
            {
                return _IvaConditionId;
            }
            set
            {
                OnIvaConditionIdChanging(value);
                ReportPropertyChanging("IvaConditionId");
                _IvaConditionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IvaConditionId");
                OnIvaConditionIdChanged();
            }
        }
        private global::System.Int32 _IvaConditionId;
        partial void OnIvaConditionIdChanging(global::System.Int32 value);
        partial void OnIvaConditionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> InvoiceProfileId
        {
            get
            {
                return _InvoiceProfileId;
            }
            set
            {
                OnInvoiceProfileIdChanging(value);
                ReportPropertyChanging("InvoiceProfileId");
                _InvoiceProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceProfileId");
                OnInvoiceProfileIdChanged();
            }
        }
        private Nullable<global::System.Guid> _InvoiceProfileId;
        partial void OnInvoiceProfileIdChanging(Nullable<global::System.Guid> value);
        partial void OnInvoiceProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientLogo
        {
            get
            {
                return _ClientLogo;
            }
            set
            {
                OnClientLogoChanging(value);
                ReportPropertyChanging("ClientLogo");
                _ClientLogo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientLogo");
                OnClientLogoChanged();
            }
        }
        private global::System.String _ClientLogo;
        partial void OnClientLogoChanging(global::System.String value);
        partial void OnClientLogoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeId
        {
            get
            {
                return _DocumentTypeId;
            }
            set
            {
                OnDocumentTypeIdChanging(value);
                ReportPropertyChanging("DocumentTypeId");
                _DocumentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentTypeId");
                OnDocumentTypeIdChanged();
            }
        }
        private global::System.Int32 _DocumentTypeId;
        partial void OnDocumentTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentTypeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_ClientArea_Client", "ClientArea")]
        public EntityCollection<ClientArea> ClientArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientArea>("MedilabModel.FK_ClientArea_Client", "ClientArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientArea>("MedilabModel.FK_ClientArea_Client", "ClientArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_PracticeGroupPrice_Client", "PracticeGroupPrice")]
        public EntityCollection<PracticeGroupPrice> PracticeGroupPrice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PracticeGroupPrice>("MedilabModel.FK_PracticeGroupPrice_Client", "PracticeGroupPrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PracticeGroupPrice>("MedilabModel.FK_PracticeGroupPrice_Client", "PracticeGroupPrice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Client_InvoiceProfile", "InvoiceProfile")]
        public InvoiceProfile InvoiceProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceProfile>("MedilabModel.FK_Client_InvoiceProfile", "InvoiceProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceProfile>("MedilabModel.FK_Client_InvoiceProfile", "InvoiceProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceProfile> InvoiceProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceProfile>("MedilabModel.FK_Client_InvoiceProfile", "InvoiceProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvoiceProfile>("MedilabModel.FK_Client_InvoiceProfile", "InvoiceProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Client_IvaCondition", "IvaCondition")]
        public IvaCondition IvaCondition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IvaCondition>("MedilabModel.FK_Client_IvaCondition", "IvaCondition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IvaCondition>("MedilabModel.FK_Client_IvaCondition", "IvaCondition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IvaCondition> IvaConditionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IvaCondition>("MedilabModel.FK_Client_IvaCondition", "IvaCondition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IvaCondition>("MedilabModel.FK_Client_IvaCondition", "IvaCondition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistory_Client", "MedicalHistory")]
        public EntityCollection<MedicalHistory> MedicalHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalHistory>("MedilabModel.FK_MedicalHistory_Client", "MedicalHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalHistory>("MedilabModel.FK_MedicalHistory_Client", "MedicalHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Receipt_Client", "Receipt")]
        public EntityCollection<Receipt> Receipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Receipt>("MedilabModel.FK_Receipt_Client", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Receipt>("MedilabModel.FK_Receipt_Client", "Receipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceHeader_Client", "InvoiceHeader")]
        public EntityCollection<InvoiceHeader> InvoiceHeader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceHeader>("MedilabModel.FK_InvoiceHeader_Client", "InvoiceHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceHeader>("MedilabModel.FK_InvoiceHeader_Client", "InvoiceHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_DebitNote_Client", "DebitNote")]
        public EntityCollection<DebitNote> DebitNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DebitNote>("MedilabModel.FK_DebitNote_Client", "DebitNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DebitNote>("MedilabModel.FK_DebitNote_Client", "DebitNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_CreditNote_Client", "CreditNote")]
        public EntityCollection<CreditNote> CreditNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CreditNote>("MedilabModel.FK_CreditNote_Client", "CreditNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CreditNote>("MedilabModel.FK_CreditNote_Client", "CreditNote", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="ClientArea")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClientArea : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientArea object.
        /// </summary>
        /// <param name="clientAreaId">Initial value of the ClientAreaId property.</param>
        /// <param name="cllientId">Initial value of the CllientId property.</param>
        /// <param name="areaName">Initial value of the AreaName property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static ClientArea CreateClientArea(global::System.Guid clientAreaId, global::System.Guid cllientId, global::System.String areaName, global::System.Boolean isDeleted, global::System.Byte[] lastUpdated)
        {
            ClientArea clientArea = new ClientArea();
            clientArea.ClientAreaId = clientAreaId;
            clientArea.CllientId = cllientId;
            clientArea.AreaName = areaName;
            clientArea.IsDeleted = isDeleted;
            clientArea.LastUpdated = lastUpdated;
            return clientArea;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClientAreaId
        {
            get
            {
                return _ClientAreaId;
            }
            set
            {
                if (_ClientAreaId != value)
                {
                    OnClientAreaIdChanging(value);
                    ReportPropertyChanging("ClientAreaId");
                    _ClientAreaId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientAreaId");
                    OnClientAreaIdChanged();
                }
            }
        }
        private global::System.Guid _ClientAreaId;
        partial void OnClientAreaIdChanging(global::System.Guid value);
        partial void OnClientAreaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CllientId
        {
            get
            {
                return _CllientId;
            }
            set
            {
                OnCllientIdChanging(value);
                ReportPropertyChanging("CllientId");
                _CllientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CllientId");
                OnCllientIdChanged();
            }
        }
        private global::System.Guid _CllientId;
        partial void OnCllientIdChanging(global::System.Guid value);
        partial void OnCllientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AreaName
        {
            get
            {
                return _AreaName;
            }
            set
            {
                OnAreaNameChanging(value);
                ReportPropertyChanging("AreaName");
                _AreaName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AreaName");
                OnAreaNameChanged();
            }
        }
        private global::System.String _AreaName;
        partial void OnAreaNameChanging(global::System.String value);
        partial void OnAreaNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_ClientArea_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_ClientArea_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_ClientArea_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_ClientArea_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("MedilabModel.FK_ClientArea_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistory_ClientArea", "MedicalHistory")]
        public EntityCollection<MedicalHistory> MedicalHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalHistory>("MedilabModel.FK_MedicalHistory_ClientArea", "MedicalHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalHistory>("MedilabModel.FK_MedicalHistory_ClientArea", "MedicalHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="ClinicalExam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClinicalExam : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClinicalExam object.
        /// </summary>
        /// <param name="clinicalExamId">Initial value of the ClinicalExamId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="medicalHistoryId">Initial value of the MedicalHistoryId property.</param>
        /// <param name="hereditaryHistory">Initial value of the HereditaryHistory property.</param>
        /// <param name="pathologicalHistory">Initial value of the PathologicalHistory property.</param>
        /// <param name="surgicalHistory">Initial value of the SurgicalHistory property.</param>
        /// <param name="traumaHistory">Initial value of the TraumaHistory property.</param>
        /// <param name="obstetricalHistory">Initial value of the ObstetricalHistory property.</param>
        /// <param name="otherHistory">Initial value of the OtherHistory property.</param>
        /// <param name="smoke">Initial value of the Smoke property.</param>
        /// <param name="smokeCount">Initial value of the SmokeCount property.</param>
        /// <param name="alcohol">Initial value of the Alcohol property.</param>
        /// <param name="alcoholCount">Initial value of the AlcoholCount property.</param>
        /// <param name="normalSleep">Initial value of the NormalSleep property.</param>
        /// <param name="sleepHours">Initial value of the SleepHours property.</param>
        /// <param name="diet">Initial value of the Diet property.</param>
        /// <param name="dietDetails">Initial value of the DietDetails property.</param>
        /// <param name="sports">Initial value of the Sports property.</param>
        /// <param name="sportsDetails">Initial value of the SportsDetails property.</param>
        /// <param name="useEyeGlasses">Initial value of the UseEyeGlasses property.</param>
        /// <param name="colorVision">Initial value of the ColorVision property.</param>
        /// <param name="funduscopicRight">Initial value of the FunduscopicRight property.</param>
        /// <param name="funduscopicLeft">Initial value of the FunduscopicLeft property.</param>
        /// <param name="viewObservations">Initial value of the ViewObservations property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        /// <param name="weight">Initial value of the Weight property.</param>
        /// <param name="bloodPressureHight">Initial value of the BloodPressureHight property.</param>
        /// <param name="bloodPressureLow">Initial value of the BloodPressureLow property.</param>
        /// <param name="pulse">Initial value of the Pulse property.</param>
        /// <param name="head">Initial value of the Head property.</param>
        /// <param name="headDetails">Initial value of the HeadDetails property.</param>
        /// <param name="eyes">Initial value of the Eyes property.</param>
        /// <param name="eyesDetails">Initial value of the EyesDetails property.</param>
        /// <param name="ear">Initial value of the Ear property.</param>
        /// <param name="earDetails">Initial value of the EarDetails property.</param>
        /// <param name="nose">Initial value of the Nose property.</param>
        /// <param name="noseDetails">Initial value of the NoseDetails property.</param>
        /// <param name="mouth">Initial value of the Mouth property.</param>
        /// <param name="mouthDetails">Initial value of the MouthDetails property.</param>
        /// <param name="neck">Initial value of the Neck property.</param>
        /// <param name="neckDetails">Initial value of the NeckDetails property.</param>
        /// <param name="chest">Initial value of the Chest property.</param>
        /// <param name="chestDetails">Initial value of the ChestDetails property.</param>
        /// <param name="lung">Initial value of the Lung property.</param>
        /// <param name="lungDetails">Initial value of the LungDetails property.</param>
        /// <param name="heart">Initial value of the Heart property.</param>
        /// <param name="heartDetails">Initial value of the HeartDetails property.</param>
        /// <param name="peripheralVeins">Initial value of the PeripheralVeins property.</param>
        /// <param name="peripheralVeinsDetails">Initial value of the PeripheralVeinsDetails property.</param>
        /// <param name="peripheralArteries">Initial value of the PeripheralArteries property.</param>
        /// <param name="peripheralArteriesDetails">Initial value of the PeripheralArteriesDetails property.</param>
        /// <param name="abdomen">Initial value of the Abdomen property.</param>
        /// <param name="abdomenDetails">Initial value of the AbdomenDetails property.</param>
        /// <param name="hernia">Initial value of the Hernia property.</param>
        /// <param name="herniaDetails">Initial value of the HerniaDetails property.</param>
        /// <param name="genitals">Initial value of the Genitals property.</param>
        /// <param name="genitalsDetails">Initial value of the GenitalsDetails property.</param>
        /// <param name="anus">Initial value of the Anus property.</param>
        /// <param name="anusDetails">Initial value of the AnusDetails property.</param>
        /// <param name="tips">Initial value of the Tips property.</param>
        /// <param name="tipsDetails">Initial value of the TipsDetails property.</param>
        /// <param name="backbone">Initial value of the Backbone property.</param>
        /// <param name="backboneDetails">Initial value of the BackboneDetails property.</param>
        /// <param name="skin">Initial value of the Skin property.</param>
        /// <param name="skinDetails">Initial value of the SkinDetails property.</param>
        /// <param name="lympNodes">Initial value of the LympNodes property.</param>
        /// <param name="lympNodesDetails">Initial value of the LympNodesDetails property.</param>
        /// <param name="nervousSystem">Initial value of the NervousSystem property.</param>
        /// <param name="nervousSystemDetails">Initial value of the NervousSystemDetails property.</param>
        /// <param name="motion">Initial value of the Motion property.</param>
        /// <param name="motionDetails">Initial value of the MotionDetails property.</param>
        /// <param name="psychicTest">Initial value of the PsychicTest property.</param>
        /// <param name="psychicTestDetails">Initial value of the PsychicTestDetails property.</param>
        /// <param name="scars">Initial value of the Scars property.</param>
        /// <param name="scarsDetails">Initial value of the ScarsDetails property.</param>
        /// <param name="kidneys">Initial value of the Kidneys property.</param>
        /// <param name="kidneysDetails">Initial value of the KidneysDetails property.</param>
        /// <param name="subcutaneousCellularTissue">Initial value of the SubcutaneousCellularTissue property.</param>
        /// <param name="subcutaneousCellularTissueDetails">Initial value of the SubcutaneousCellularTissueDetails property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="observations">Initial value of the Observations property.</param>
        /// <param name="vaccinesHistory">Initial value of the VaccinesHistory property.</param>
        /// <param name="balanceTest">Initial value of the BalanceTest property.</param>
        /// <param name="balanceTestDetails">Initial value of the BalanceTestDetails property.</param>
        /// <param name="iMCStatus">Initial value of the IMCStatus property.</param>
        /// <param name="iMCStatusDetail">Initial value of the IMCStatusDetail property.</param>
        /// <param name="bloodPressureStatus">Initial value of the BloodPressureStatus property.</param>
        /// <param name="bloodPressureStatusDetail">Initial value of the BloodPressureStatusDetail property.</param>
        public static ClinicalExam CreateClinicalExam(global::System.Guid clinicalExamId, global::System.DateTime createdDate, global::System.Guid medicalHistoryId, global::System.String hereditaryHistory, global::System.String pathologicalHistory, global::System.String surgicalHistory, global::System.String traumaHistory, global::System.String obstetricalHistory, global::System.String otherHistory, global::System.Boolean smoke, global::System.String smokeCount, global::System.Boolean alcohol, global::System.String alcoholCount, global::System.Boolean normalSleep, global::System.String sleepHours, global::System.Boolean diet, global::System.String dietDetails, global::System.Boolean sports, global::System.String sportsDetails, global::System.Boolean useEyeGlasses, global::System.String colorVision, global::System.String funduscopicRight, global::System.String funduscopicLeft, global::System.String viewObservations, global::System.Int32 size, global::System.Int32 weight, global::System.Int32 bloodPressureHight, global::System.Int32 bloodPressureLow, global::System.Int32 pulse, global::System.Int32 head, global::System.String headDetails, global::System.Int32 eyes, global::System.String eyesDetails, global::System.Int32 ear, global::System.String earDetails, global::System.Int32 nose, global::System.String noseDetails, global::System.Int32 mouth, global::System.String mouthDetails, global::System.Int32 neck, global::System.String neckDetails, global::System.Int32 chest, global::System.String chestDetails, global::System.Int32 lung, global::System.String lungDetails, global::System.Int32 heart, global::System.String heartDetails, global::System.Int32 peripheralVeins, global::System.String peripheralVeinsDetails, global::System.Int32 peripheralArteries, global::System.String peripheralArteriesDetails, global::System.Int32 abdomen, global::System.String abdomenDetails, global::System.Int32 hernia, global::System.String herniaDetails, global::System.Int32 genitals, global::System.String genitalsDetails, global::System.Int32 anus, global::System.String anusDetails, global::System.Int32 tips, global::System.String tipsDetails, global::System.Int32 backbone, global::System.String backboneDetails, global::System.Int32 skin, global::System.String skinDetails, global::System.Int32 lympNodes, global::System.String lympNodesDetails, global::System.Int32 nervousSystem, global::System.String nervousSystemDetails, global::System.Int32 motion, global::System.String motionDetails, global::System.Int32 psychicTest, global::System.String psychicTestDetails, global::System.Int32 scars, global::System.String scarsDetails, global::System.Int32 kidneys, global::System.String kidneysDetails, global::System.Int32 subcutaneousCellularTissue, global::System.String subcutaneousCellularTissueDetails, global::System.Int32 status, global::System.Byte[] lastUpdated, global::System.String observations, global::System.String vaccinesHistory, global::System.Int32 balanceTest, global::System.String balanceTestDetails, global::System.Int32 iMCStatus, global::System.String iMCStatusDetail, global::System.Int32 bloodPressureStatus, global::System.String bloodPressureStatusDetail)
        {
            ClinicalExam clinicalExam = new ClinicalExam();
            clinicalExam.ClinicalExamId = clinicalExamId;
            clinicalExam.CreatedDate = createdDate;
            clinicalExam.MedicalHistoryId = medicalHistoryId;
            clinicalExam.HereditaryHistory = hereditaryHistory;
            clinicalExam.PathologicalHistory = pathologicalHistory;
            clinicalExam.SurgicalHistory = surgicalHistory;
            clinicalExam.TraumaHistory = traumaHistory;
            clinicalExam.ObstetricalHistory = obstetricalHistory;
            clinicalExam.OtherHistory = otherHistory;
            clinicalExam.Smoke = smoke;
            clinicalExam.SmokeCount = smokeCount;
            clinicalExam.Alcohol = alcohol;
            clinicalExam.AlcoholCount = alcoholCount;
            clinicalExam.NormalSleep = normalSleep;
            clinicalExam.SleepHours = sleepHours;
            clinicalExam.Diet = diet;
            clinicalExam.DietDetails = dietDetails;
            clinicalExam.Sports = sports;
            clinicalExam.SportsDetails = sportsDetails;
            clinicalExam.UseEyeGlasses = useEyeGlasses;
            clinicalExam.ColorVision = colorVision;
            clinicalExam.FunduscopicRight = funduscopicRight;
            clinicalExam.FunduscopicLeft = funduscopicLeft;
            clinicalExam.ViewObservations = viewObservations;
            clinicalExam.Size = size;
            clinicalExam.Weight = weight;
            clinicalExam.BloodPressureHight = bloodPressureHight;
            clinicalExam.BloodPressureLow = bloodPressureLow;
            clinicalExam.Pulse = pulse;
            clinicalExam.Head = head;
            clinicalExam.HeadDetails = headDetails;
            clinicalExam.Eyes = eyes;
            clinicalExam.EyesDetails = eyesDetails;
            clinicalExam.Ear = ear;
            clinicalExam.EarDetails = earDetails;
            clinicalExam.Nose = nose;
            clinicalExam.NoseDetails = noseDetails;
            clinicalExam.Mouth = mouth;
            clinicalExam.MouthDetails = mouthDetails;
            clinicalExam.Neck = neck;
            clinicalExam.NeckDetails = neckDetails;
            clinicalExam.Chest = chest;
            clinicalExam.ChestDetails = chestDetails;
            clinicalExam.Lung = lung;
            clinicalExam.LungDetails = lungDetails;
            clinicalExam.Heart = heart;
            clinicalExam.HeartDetails = heartDetails;
            clinicalExam.PeripheralVeins = peripheralVeins;
            clinicalExam.PeripheralVeinsDetails = peripheralVeinsDetails;
            clinicalExam.PeripheralArteries = peripheralArteries;
            clinicalExam.PeripheralArteriesDetails = peripheralArteriesDetails;
            clinicalExam.Abdomen = abdomen;
            clinicalExam.AbdomenDetails = abdomenDetails;
            clinicalExam.Hernia = hernia;
            clinicalExam.HerniaDetails = herniaDetails;
            clinicalExam.Genitals = genitals;
            clinicalExam.GenitalsDetails = genitalsDetails;
            clinicalExam.Anus = anus;
            clinicalExam.AnusDetails = anusDetails;
            clinicalExam.Tips = tips;
            clinicalExam.TipsDetails = tipsDetails;
            clinicalExam.Backbone = backbone;
            clinicalExam.BackboneDetails = backboneDetails;
            clinicalExam.Skin = skin;
            clinicalExam.SkinDetails = skinDetails;
            clinicalExam.LympNodes = lympNodes;
            clinicalExam.LympNodesDetails = lympNodesDetails;
            clinicalExam.NervousSystem = nervousSystem;
            clinicalExam.NervousSystemDetails = nervousSystemDetails;
            clinicalExam.Motion = motion;
            clinicalExam.MotionDetails = motionDetails;
            clinicalExam.PsychicTest = psychicTest;
            clinicalExam.PsychicTestDetails = psychicTestDetails;
            clinicalExam.Scars = scars;
            clinicalExam.ScarsDetails = scarsDetails;
            clinicalExam.Kidneys = kidneys;
            clinicalExam.KidneysDetails = kidneysDetails;
            clinicalExam.SubcutaneousCellularTissue = subcutaneousCellularTissue;
            clinicalExam.SubcutaneousCellularTissueDetails = subcutaneousCellularTissueDetails;
            clinicalExam.Status = status;
            clinicalExam.LastUpdated = lastUpdated;
            clinicalExam.Observations = observations;
            clinicalExam.VaccinesHistory = vaccinesHistory;
            clinicalExam.BalanceTest = balanceTest;
            clinicalExam.BalanceTestDetails = balanceTestDetails;
            clinicalExam.IMCStatus = iMCStatus;
            clinicalExam.IMCStatusDetail = iMCStatusDetail;
            clinicalExam.BloodPressureStatus = bloodPressureStatus;
            clinicalExam.BloodPressureStatusDetail = bloodPressureStatusDetail;
            return clinicalExam;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClinicalExamId
        {
            get
            {
                return _ClinicalExamId;
            }
            set
            {
                if (_ClinicalExamId != value)
                {
                    OnClinicalExamIdChanging(value);
                    ReportPropertyChanging("ClinicalExamId");
                    _ClinicalExamId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicalExamId");
                    OnClinicalExamIdChanged();
                }
            }
        }
        private global::System.Guid _ClinicalExamId;
        partial void OnClinicalExamIdChanging(global::System.Guid value);
        partial void OnClinicalExamIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MedicalHistoryId
        {
            get
            {
                return _MedicalHistoryId;
            }
            set
            {
                OnMedicalHistoryIdChanging(value);
                ReportPropertyChanging("MedicalHistoryId");
                _MedicalHistoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicalHistoryId");
                OnMedicalHistoryIdChanged();
            }
        }
        private global::System.Guid _MedicalHistoryId;
        partial void OnMedicalHistoryIdChanging(global::System.Guid value);
        partial void OnMedicalHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HereditaryHistory
        {
            get
            {
                return _HereditaryHistory;
            }
            set
            {
                OnHereditaryHistoryChanging(value);
                ReportPropertyChanging("HereditaryHistory");
                _HereditaryHistory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HereditaryHistory");
                OnHereditaryHistoryChanged();
            }
        }
        private global::System.String _HereditaryHistory;
        partial void OnHereditaryHistoryChanging(global::System.String value);
        partial void OnHereditaryHistoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PathologicalHistory
        {
            get
            {
                return _PathologicalHistory;
            }
            set
            {
                OnPathologicalHistoryChanging(value);
                ReportPropertyChanging("PathologicalHistory");
                _PathologicalHistory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PathologicalHistory");
                OnPathologicalHistoryChanged();
            }
        }
        private global::System.String _PathologicalHistory;
        partial void OnPathologicalHistoryChanging(global::System.String value);
        partial void OnPathologicalHistoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SurgicalHistory
        {
            get
            {
                return _SurgicalHistory;
            }
            set
            {
                OnSurgicalHistoryChanging(value);
                ReportPropertyChanging("SurgicalHistory");
                _SurgicalHistory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SurgicalHistory");
                OnSurgicalHistoryChanged();
            }
        }
        private global::System.String _SurgicalHistory;
        partial void OnSurgicalHistoryChanging(global::System.String value);
        partial void OnSurgicalHistoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TraumaHistory
        {
            get
            {
                return _TraumaHistory;
            }
            set
            {
                OnTraumaHistoryChanging(value);
                ReportPropertyChanging("TraumaHistory");
                _TraumaHistory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TraumaHistory");
                OnTraumaHistoryChanged();
            }
        }
        private global::System.String _TraumaHistory;
        partial void OnTraumaHistoryChanging(global::System.String value);
        partial void OnTraumaHistoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObstetricalHistory
        {
            get
            {
                return _ObstetricalHistory;
            }
            set
            {
                OnObstetricalHistoryChanging(value);
                ReportPropertyChanging("ObstetricalHistory");
                _ObstetricalHistory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObstetricalHistory");
                OnObstetricalHistoryChanged();
            }
        }
        private global::System.String _ObstetricalHistory;
        partial void OnObstetricalHistoryChanging(global::System.String value);
        partial void OnObstetricalHistoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OtherHistory
        {
            get
            {
                return _OtherHistory;
            }
            set
            {
                OnOtherHistoryChanging(value);
                ReportPropertyChanging("OtherHistory");
                _OtherHistory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OtherHistory");
                OnOtherHistoryChanged();
            }
        }
        private global::System.String _OtherHistory;
        partial void OnOtherHistoryChanging(global::System.String value);
        partial void OnOtherHistoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Smoke
        {
            get
            {
                return _Smoke;
            }
            set
            {
                OnSmokeChanging(value);
                ReportPropertyChanging("Smoke");
                _Smoke = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Smoke");
                OnSmokeChanged();
            }
        }
        private global::System.Boolean _Smoke;
        partial void OnSmokeChanging(global::System.Boolean value);
        partial void OnSmokeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SmokeCount
        {
            get
            {
                return _SmokeCount;
            }
            set
            {
                OnSmokeCountChanging(value);
                ReportPropertyChanging("SmokeCount");
                _SmokeCount = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SmokeCount");
                OnSmokeCountChanged();
            }
        }
        private global::System.String _SmokeCount;
        partial void OnSmokeCountChanging(global::System.String value);
        partial void OnSmokeCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Alcohol
        {
            get
            {
                return _Alcohol;
            }
            set
            {
                OnAlcoholChanging(value);
                ReportPropertyChanging("Alcohol");
                _Alcohol = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Alcohol");
                OnAlcoholChanged();
            }
        }
        private global::System.Boolean _Alcohol;
        partial void OnAlcoholChanging(global::System.Boolean value);
        partial void OnAlcoholChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AlcoholCount
        {
            get
            {
                return _AlcoholCount;
            }
            set
            {
                OnAlcoholCountChanging(value);
                ReportPropertyChanging("AlcoholCount");
                _AlcoholCount = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AlcoholCount");
                OnAlcoholCountChanged();
            }
        }
        private global::System.String _AlcoholCount;
        partial void OnAlcoholCountChanging(global::System.String value);
        partial void OnAlcoholCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NormalSleep
        {
            get
            {
                return _NormalSleep;
            }
            set
            {
                OnNormalSleepChanging(value);
                ReportPropertyChanging("NormalSleep");
                _NormalSleep = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NormalSleep");
                OnNormalSleepChanged();
            }
        }
        private global::System.Boolean _NormalSleep;
        partial void OnNormalSleepChanging(global::System.Boolean value);
        partial void OnNormalSleepChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SleepHours
        {
            get
            {
                return _SleepHours;
            }
            set
            {
                OnSleepHoursChanging(value);
                ReportPropertyChanging("SleepHours");
                _SleepHours = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SleepHours");
                OnSleepHoursChanged();
            }
        }
        private global::System.String _SleepHours;
        partial void OnSleepHoursChanging(global::System.String value);
        partial void OnSleepHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Diet
        {
            get
            {
                return _Diet;
            }
            set
            {
                OnDietChanging(value);
                ReportPropertyChanging("Diet");
                _Diet = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Diet");
                OnDietChanged();
            }
        }
        private global::System.Boolean _Diet;
        partial void OnDietChanging(global::System.Boolean value);
        partial void OnDietChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DietDetails
        {
            get
            {
                return _DietDetails;
            }
            set
            {
                OnDietDetailsChanging(value);
                ReportPropertyChanging("DietDetails");
                _DietDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DietDetails");
                OnDietDetailsChanged();
            }
        }
        private global::System.String _DietDetails;
        partial void OnDietDetailsChanging(global::System.String value);
        partial void OnDietDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Sports
        {
            get
            {
                return _Sports;
            }
            set
            {
                OnSportsChanging(value);
                ReportPropertyChanging("Sports");
                _Sports = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sports");
                OnSportsChanged();
            }
        }
        private global::System.Boolean _Sports;
        partial void OnSportsChanging(global::System.Boolean value);
        partial void OnSportsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SportsDetails
        {
            get
            {
                return _SportsDetails;
            }
            set
            {
                OnSportsDetailsChanging(value);
                ReportPropertyChanging("SportsDetails");
                _SportsDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SportsDetails");
                OnSportsDetailsChanged();
            }
        }
        private global::System.String _SportsDetails;
        partial void OnSportsDetailsChanging(global::System.String value);
        partial void OnSportsDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UseEyeGlasses
        {
            get
            {
                return _UseEyeGlasses;
            }
            set
            {
                OnUseEyeGlassesChanging(value);
                ReportPropertyChanging("UseEyeGlasses");
                _UseEyeGlasses = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UseEyeGlasses");
                OnUseEyeGlassesChanged();
            }
        }
        private global::System.Boolean _UseEyeGlasses;
        partial void OnUseEyeGlassesChanging(global::System.Boolean value);
        partial void OnUseEyeGlassesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EyeFarNoCorrectionRight
        {
            get
            {
                return _EyeFarNoCorrectionRight;
            }
            set
            {
                OnEyeFarNoCorrectionRightChanging(value);
                ReportPropertyChanging("EyeFarNoCorrectionRight");
                _EyeFarNoCorrectionRight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EyeFarNoCorrectionRight");
                OnEyeFarNoCorrectionRightChanged();
            }
        }
        private Nullable<global::System.Int32> _EyeFarNoCorrectionRight;
        partial void OnEyeFarNoCorrectionRightChanging(Nullable<global::System.Int32> value);
        partial void OnEyeFarNoCorrectionRightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EyeFarNoCorrectionLeft
        {
            get
            {
                return _EyeFarNoCorrectionLeft;
            }
            set
            {
                OnEyeFarNoCorrectionLeftChanging(value);
                ReportPropertyChanging("EyeFarNoCorrectionLeft");
                _EyeFarNoCorrectionLeft = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EyeFarNoCorrectionLeft");
                OnEyeFarNoCorrectionLeftChanged();
            }
        }
        private Nullable<global::System.Int32> _EyeFarNoCorrectionLeft;
        partial void OnEyeFarNoCorrectionLeftChanging(Nullable<global::System.Int32> value);
        partial void OnEyeFarNoCorrectionLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EyeFarWithCorrectionRight
        {
            get
            {
                return _EyeFarWithCorrectionRight;
            }
            set
            {
                OnEyeFarWithCorrectionRightChanging(value);
                ReportPropertyChanging("EyeFarWithCorrectionRight");
                _EyeFarWithCorrectionRight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EyeFarWithCorrectionRight");
                OnEyeFarWithCorrectionRightChanged();
            }
        }
        private Nullable<global::System.Int32> _EyeFarWithCorrectionRight;
        partial void OnEyeFarWithCorrectionRightChanging(Nullable<global::System.Int32> value);
        partial void OnEyeFarWithCorrectionRightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EyeFarWithCorrectionLeft
        {
            get
            {
                return _EyeFarWithCorrectionLeft;
            }
            set
            {
                OnEyeFarWithCorrectionLeftChanging(value);
                ReportPropertyChanging("EyeFarWithCorrectionLeft");
                _EyeFarWithCorrectionLeft = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EyeFarWithCorrectionLeft");
                OnEyeFarWithCorrectionLeftChanged();
            }
        }
        private Nullable<global::System.Int32> _EyeFarWithCorrectionLeft;
        partial void OnEyeFarWithCorrectionLeftChanging(Nullable<global::System.Int32> value);
        partial void OnEyeFarWithCorrectionLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> EyeNearNoCorrectionRight
        {
            get
            {
                return _EyeNearNoCorrectionRight;
            }
            set
            {
                OnEyeNearNoCorrectionRightChanging(value);
                ReportPropertyChanging("EyeNearNoCorrectionRight");
                _EyeNearNoCorrectionRight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EyeNearNoCorrectionRight");
                OnEyeNearNoCorrectionRightChanged();
            }
        }
        private Nullable<global::System.Double> _EyeNearNoCorrectionRight;
        partial void OnEyeNearNoCorrectionRightChanging(Nullable<global::System.Double> value);
        partial void OnEyeNearNoCorrectionRightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> EyeNearNoCorrectionLeft
        {
            get
            {
                return _EyeNearNoCorrectionLeft;
            }
            set
            {
                OnEyeNearNoCorrectionLeftChanging(value);
                ReportPropertyChanging("EyeNearNoCorrectionLeft");
                _EyeNearNoCorrectionLeft = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EyeNearNoCorrectionLeft");
                OnEyeNearNoCorrectionLeftChanged();
            }
        }
        private Nullable<global::System.Double> _EyeNearNoCorrectionLeft;
        partial void OnEyeNearNoCorrectionLeftChanging(Nullable<global::System.Double> value);
        partial void OnEyeNearNoCorrectionLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> EyeNearWithCorrectionRight
        {
            get
            {
                return _EyeNearWithCorrectionRight;
            }
            set
            {
                OnEyeNearWithCorrectionRightChanging(value);
                ReportPropertyChanging("EyeNearWithCorrectionRight");
                _EyeNearWithCorrectionRight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EyeNearWithCorrectionRight");
                OnEyeNearWithCorrectionRightChanged();
            }
        }
        private Nullable<global::System.Double> _EyeNearWithCorrectionRight;
        partial void OnEyeNearWithCorrectionRightChanging(Nullable<global::System.Double> value);
        partial void OnEyeNearWithCorrectionRightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> EyeNearWithCorrectionLeft
        {
            get
            {
                return _EyeNearWithCorrectionLeft;
            }
            set
            {
                OnEyeNearWithCorrectionLeftChanging(value);
                ReportPropertyChanging("EyeNearWithCorrectionLeft");
                _EyeNearWithCorrectionLeft = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EyeNearWithCorrectionLeft");
                OnEyeNearWithCorrectionLeftChanged();
            }
        }
        private Nullable<global::System.Double> _EyeNearWithCorrectionLeft;
        partial void OnEyeNearWithCorrectionLeftChanging(Nullable<global::System.Double> value);
        partial void OnEyeNearWithCorrectionLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ColorVision
        {
            get
            {
                return _ColorVision;
            }
            set
            {
                OnColorVisionChanging(value);
                ReportPropertyChanging("ColorVision");
                _ColorVision = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ColorVision");
                OnColorVisionChanged();
            }
        }
        private global::System.String _ColorVision;
        partial void OnColorVisionChanging(global::System.String value);
        partial void OnColorVisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FunduscopicRight
        {
            get
            {
                return _FunduscopicRight;
            }
            set
            {
                OnFunduscopicRightChanging(value);
                ReportPropertyChanging("FunduscopicRight");
                _FunduscopicRight = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FunduscopicRight");
                OnFunduscopicRightChanged();
            }
        }
        private global::System.String _FunduscopicRight;
        partial void OnFunduscopicRightChanging(global::System.String value);
        partial void OnFunduscopicRightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FunduscopicLeft
        {
            get
            {
                return _FunduscopicLeft;
            }
            set
            {
                OnFunduscopicLeftChanging(value);
                ReportPropertyChanging("FunduscopicLeft");
                _FunduscopicLeft = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FunduscopicLeft");
                OnFunduscopicLeftChanged();
            }
        }
        private global::System.String _FunduscopicLeft;
        partial void OnFunduscopicLeftChanging(global::System.String value);
        partial void OnFunduscopicLeftChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ViewObservations
        {
            get
            {
                return _ViewObservations;
            }
            set
            {
                OnViewObservationsChanging(value);
                ReportPropertyChanging("ViewObservations");
                _ViewObservations = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ViewObservations");
                OnViewObservationsChanged();
            }
        }
        private global::System.String _ViewObservations;
        partial void OnViewObservationsChanging(global::System.String value);
        partial void OnViewObservationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.Int32 _Size;
        partial void OnSizeChanging(global::System.Int32 value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private global::System.Int32 _Weight;
        partial void OnWeightChanging(global::System.Int32 value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AbdominalCircunference
        {
            get
            {
                return _AbdominalCircunference;
            }
            set
            {
                OnAbdominalCircunferenceChanging(value);
                ReportPropertyChanging("AbdominalCircunference");
                _AbdominalCircunference = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AbdominalCircunference");
                OnAbdominalCircunferenceChanged();
            }
        }
        private Nullable<global::System.Int32> _AbdominalCircunference;
        partial void OnAbdominalCircunferenceChanging(Nullable<global::System.Int32> value);
        partial void OnAbdominalCircunferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BloodPressureHight
        {
            get
            {
                return _BloodPressureHight;
            }
            set
            {
                OnBloodPressureHightChanging(value);
                ReportPropertyChanging("BloodPressureHight");
                _BloodPressureHight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BloodPressureHight");
                OnBloodPressureHightChanged();
            }
        }
        private global::System.Int32 _BloodPressureHight;
        partial void OnBloodPressureHightChanging(global::System.Int32 value);
        partial void OnBloodPressureHightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BloodPressureLow
        {
            get
            {
                return _BloodPressureLow;
            }
            set
            {
                OnBloodPressureLowChanging(value);
                ReportPropertyChanging("BloodPressureLow");
                _BloodPressureLow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BloodPressureLow");
                OnBloodPressureLowChanged();
            }
        }
        private global::System.Int32 _BloodPressureLow;
        partial void OnBloodPressureLowChanging(global::System.Int32 value);
        partial void OnBloodPressureLowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Pulse
        {
            get
            {
                return _Pulse;
            }
            set
            {
                OnPulseChanging(value);
                ReportPropertyChanging("Pulse");
                _Pulse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Pulse");
                OnPulseChanged();
            }
        }
        private global::System.Int32 _Pulse;
        partial void OnPulseChanging(global::System.Int32 value);
        partial void OnPulseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CervicalPerimeter
        {
            get
            {
                return _CervicalPerimeter;
            }
            set
            {
                OnCervicalPerimeterChanging(value);
                ReportPropertyChanging("CervicalPerimeter");
                _CervicalPerimeter = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CervicalPerimeter");
                OnCervicalPerimeterChanged();
            }
        }
        private Nullable<global::System.Int32> _CervicalPerimeter;
        partial void OnCervicalPerimeterChanging(Nullable<global::System.Int32> value);
        partial void OnCervicalPerimeterChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Head
        {
            get
            {
                return _Head;
            }
            set
            {
                OnHeadChanging(value);
                ReportPropertyChanging("Head");
                _Head = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Head");
                OnHeadChanged();
            }
        }
        private global::System.Int32 _Head;
        partial void OnHeadChanging(global::System.Int32 value);
        partial void OnHeadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HeadDetails
        {
            get
            {
                return _HeadDetails;
            }
            set
            {
                OnHeadDetailsChanging(value);
                ReportPropertyChanging("HeadDetails");
                _HeadDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HeadDetails");
                OnHeadDetailsChanged();
            }
        }
        private global::System.String _HeadDetails;
        partial void OnHeadDetailsChanging(global::System.String value);
        partial void OnHeadDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Eyes
        {
            get
            {
                return _Eyes;
            }
            set
            {
                OnEyesChanging(value);
                ReportPropertyChanging("Eyes");
                _Eyes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Eyes");
                OnEyesChanged();
            }
        }
        private global::System.Int32 _Eyes;
        partial void OnEyesChanging(global::System.Int32 value);
        partial void OnEyesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EyesDetails
        {
            get
            {
                return _EyesDetails;
            }
            set
            {
                OnEyesDetailsChanging(value);
                ReportPropertyChanging("EyesDetails");
                _EyesDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EyesDetails");
                OnEyesDetailsChanged();
            }
        }
        private global::System.String _EyesDetails;
        partial void OnEyesDetailsChanging(global::System.String value);
        partial void OnEyesDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Ear
        {
            get
            {
                return _Ear;
            }
            set
            {
                OnEarChanging(value);
                ReportPropertyChanging("Ear");
                _Ear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ear");
                OnEarChanged();
            }
        }
        private global::System.Int32 _Ear;
        partial void OnEarChanging(global::System.Int32 value);
        partial void OnEarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EarDetails
        {
            get
            {
                return _EarDetails;
            }
            set
            {
                OnEarDetailsChanging(value);
                ReportPropertyChanging("EarDetails");
                _EarDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EarDetails");
                OnEarDetailsChanged();
            }
        }
        private global::System.String _EarDetails;
        partial void OnEarDetailsChanging(global::System.String value);
        partial void OnEarDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Nose
        {
            get
            {
                return _Nose;
            }
            set
            {
                OnNoseChanging(value);
                ReportPropertyChanging("Nose");
                _Nose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Nose");
                OnNoseChanged();
            }
        }
        private global::System.Int32 _Nose;
        partial void OnNoseChanging(global::System.Int32 value);
        partial void OnNoseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NoseDetails
        {
            get
            {
                return _NoseDetails;
            }
            set
            {
                OnNoseDetailsChanging(value);
                ReportPropertyChanging("NoseDetails");
                _NoseDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NoseDetails");
                OnNoseDetailsChanged();
            }
        }
        private global::System.String _NoseDetails;
        partial void OnNoseDetailsChanging(global::System.String value);
        partial void OnNoseDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Mouth
        {
            get
            {
                return _Mouth;
            }
            set
            {
                OnMouthChanging(value);
                ReportPropertyChanging("Mouth");
                _Mouth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mouth");
                OnMouthChanged();
            }
        }
        private global::System.Int32 _Mouth;
        partial void OnMouthChanging(global::System.Int32 value);
        partial void OnMouthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MouthDetails
        {
            get
            {
                return _MouthDetails;
            }
            set
            {
                OnMouthDetailsChanging(value);
                ReportPropertyChanging("MouthDetails");
                _MouthDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MouthDetails");
                OnMouthDetailsChanged();
            }
        }
        private global::System.String _MouthDetails;
        partial void OnMouthDetailsChanging(global::System.String value);
        partial void OnMouthDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Neck
        {
            get
            {
                return _Neck;
            }
            set
            {
                OnNeckChanging(value);
                ReportPropertyChanging("Neck");
                _Neck = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Neck");
                OnNeckChanged();
            }
        }
        private global::System.Int32 _Neck;
        partial void OnNeckChanging(global::System.Int32 value);
        partial void OnNeckChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NeckDetails
        {
            get
            {
                return _NeckDetails;
            }
            set
            {
                OnNeckDetailsChanging(value);
                ReportPropertyChanging("NeckDetails");
                _NeckDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NeckDetails");
                OnNeckDetailsChanged();
            }
        }
        private global::System.String _NeckDetails;
        partial void OnNeckDetailsChanging(global::System.String value);
        partial void OnNeckDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Chest
        {
            get
            {
                return _Chest;
            }
            set
            {
                OnChestChanging(value);
                ReportPropertyChanging("Chest");
                _Chest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Chest");
                OnChestChanged();
            }
        }
        private global::System.Int32 _Chest;
        partial void OnChestChanging(global::System.Int32 value);
        partial void OnChestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChestDetails
        {
            get
            {
                return _ChestDetails;
            }
            set
            {
                OnChestDetailsChanging(value);
                ReportPropertyChanging("ChestDetails");
                _ChestDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChestDetails");
                OnChestDetailsChanged();
            }
        }
        private global::System.String _ChestDetails;
        partial void OnChestDetailsChanging(global::System.String value);
        partial void OnChestDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Lung
        {
            get
            {
                return _Lung;
            }
            set
            {
                OnLungChanging(value);
                ReportPropertyChanging("Lung");
                _Lung = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Lung");
                OnLungChanged();
            }
        }
        private global::System.Int32 _Lung;
        partial void OnLungChanging(global::System.Int32 value);
        partial void OnLungChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LungDetails
        {
            get
            {
                return _LungDetails;
            }
            set
            {
                OnLungDetailsChanging(value);
                ReportPropertyChanging("LungDetails");
                _LungDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LungDetails");
                OnLungDetailsChanged();
            }
        }
        private global::System.String _LungDetails;
        partial void OnLungDetailsChanging(global::System.String value);
        partial void OnLungDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Heart
        {
            get
            {
                return _Heart;
            }
            set
            {
                OnHeartChanging(value);
                ReportPropertyChanging("Heart");
                _Heart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Heart");
                OnHeartChanged();
            }
        }
        private global::System.Int32 _Heart;
        partial void OnHeartChanging(global::System.Int32 value);
        partial void OnHeartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HeartDetails
        {
            get
            {
                return _HeartDetails;
            }
            set
            {
                OnHeartDetailsChanging(value);
                ReportPropertyChanging("HeartDetails");
                _HeartDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HeartDetails");
                OnHeartDetailsChanged();
            }
        }
        private global::System.String _HeartDetails;
        partial void OnHeartDetailsChanging(global::System.String value);
        partial void OnHeartDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeripheralVeins
        {
            get
            {
                return _PeripheralVeins;
            }
            set
            {
                OnPeripheralVeinsChanging(value);
                ReportPropertyChanging("PeripheralVeins");
                _PeripheralVeins = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeripheralVeins");
                OnPeripheralVeinsChanged();
            }
        }
        private global::System.Int32 _PeripheralVeins;
        partial void OnPeripheralVeinsChanging(global::System.Int32 value);
        partial void OnPeripheralVeinsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PeripheralVeinsDetails
        {
            get
            {
                return _PeripheralVeinsDetails;
            }
            set
            {
                OnPeripheralVeinsDetailsChanging(value);
                ReportPropertyChanging("PeripheralVeinsDetails");
                _PeripheralVeinsDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PeripheralVeinsDetails");
                OnPeripheralVeinsDetailsChanged();
            }
        }
        private global::System.String _PeripheralVeinsDetails;
        partial void OnPeripheralVeinsDetailsChanging(global::System.String value);
        partial void OnPeripheralVeinsDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PeripheralArteries
        {
            get
            {
                return _PeripheralArteries;
            }
            set
            {
                OnPeripheralArteriesChanging(value);
                ReportPropertyChanging("PeripheralArteries");
                _PeripheralArteries = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PeripheralArteries");
                OnPeripheralArteriesChanged();
            }
        }
        private global::System.Int32 _PeripheralArteries;
        partial void OnPeripheralArteriesChanging(global::System.Int32 value);
        partial void OnPeripheralArteriesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PeripheralArteriesDetails
        {
            get
            {
                return _PeripheralArteriesDetails;
            }
            set
            {
                OnPeripheralArteriesDetailsChanging(value);
                ReportPropertyChanging("PeripheralArteriesDetails");
                _PeripheralArteriesDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PeripheralArteriesDetails");
                OnPeripheralArteriesDetailsChanged();
            }
        }
        private global::System.String _PeripheralArteriesDetails;
        partial void OnPeripheralArteriesDetailsChanging(global::System.String value);
        partial void OnPeripheralArteriesDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Abdomen
        {
            get
            {
                return _Abdomen;
            }
            set
            {
                OnAbdomenChanging(value);
                ReportPropertyChanging("Abdomen");
                _Abdomen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Abdomen");
                OnAbdomenChanged();
            }
        }
        private global::System.Int32 _Abdomen;
        partial void OnAbdomenChanging(global::System.Int32 value);
        partial void OnAbdomenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AbdomenDetails
        {
            get
            {
                return _AbdomenDetails;
            }
            set
            {
                OnAbdomenDetailsChanging(value);
                ReportPropertyChanging("AbdomenDetails");
                _AbdomenDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AbdomenDetails");
                OnAbdomenDetailsChanged();
            }
        }
        private global::System.String _AbdomenDetails;
        partial void OnAbdomenDetailsChanging(global::System.String value);
        partial void OnAbdomenDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Hernia
        {
            get
            {
                return _Hernia;
            }
            set
            {
                OnHerniaChanging(value);
                ReportPropertyChanging("Hernia");
                _Hernia = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hernia");
                OnHerniaChanged();
            }
        }
        private global::System.Int32 _Hernia;
        partial void OnHerniaChanging(global::System.Int32 value);
        partial void OnHerniaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HerniaDetails
        {
            get
            {
                return _HerniaDetails;
            }
            set
            {
                OnHerniaDetailsChanging(value);
                ReportPropertyChanging("HerniaDetails");
                _HerniaDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HerniaDetails");
                OnHerniaDetailsChanged();
            }
        }
        private global::System.String _HerniaDetails;
        partial void OnHerniaDetailsChanging(global::System.String value);
        partial void OnHerniaDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Genitals
        {
            get
            {
                return _Genitals;
            }
            set
            {
                OnGenitalsChanging(value);
                ReportPropertyChanging("Genitals");
                _Genitals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Genitals");
                OnGenitalsChanged();
            }
        }
        private global::System.Int32 _Genitals;
        partial void OnGenitalsChanging(global::System.Int32 value);
        partial void OnGenitalsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GenitalsDetails
        {
            get
            {
                return _GenitalsDetails;
            }
            set
            {
                OnGenitalsDetailsChanging(value);
                ReportPropertyChanging("GenitalsDetails");
                _GenitalsDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GenitalsDetails");
                OnGenitalsDetailsChanged();
            }
        }
        private global::System.String _GenitalsDetails;
        partial void OnGenitalsDetailsChanging(global::System.String value);
        partial void OnGenitalsDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Anus
        {
            get
            {
                return _Anus;
            }
            set
            {
                OnAnusChanging(value);
                ReportPropertyChanging("Anus");
                _Anus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Anus");
                OnAnusChanged();
            }
        }
        private global::System.Int32 _Anus;
        partial void OnAnusChanging(global::System.Int32 value);
        partial void OnAnusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AnusDetails
        {
            get
            {
                return _AnusDetails;
            }
            set
            {
                OnAnusDetailsChanging(value);
                ReportPropertyChanging("AnusDetails");
                _AnusDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AnusDetails");
                OnAnusDetailsChanged();
            }
        }
        private global::System.String _AnusDetails;
        partial void OnAnusDetailsChanging(global::System.String value);
        partial void OnAnusDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Tips
        {
            get
            {
                return _Tips;
            }
            set
            {
                OnTipsChanging(value);
                ReportPropertyChanging("Tips");
                _Tips = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Tips");
                OnTipsChanged();
            }
        }
        private global::System.Int32 _Tips;
        partial void OnTipsChanging(global::System.Int32 value);
        partial void OnTipsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TipsDetails
        {
            get
            {
                return _TipsDetails;
            }
            set
            {
                OnTipsDetailsChanging(value);
                ReportPropertyChanging("TipsDetails");
                _TipsDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TipsDetails");
                OnTipsDetailsChanged();
            }
        }
        private global::System.String _TipsDetails;
        partial void OnTipsDetailsChanging(global::System.String value);
        partial void OnTipsDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Backbone
        {
            get
            {
                return _Backbone;
            }
            set
            {
                OnBackboneChanging(value);
                ReportPropertyChanging("Backbone");
                _Backbone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Backbone");
                OnBackboneChanged();
            }
        }
        private global::System.Int32 _Backbone;
        partial void OnBackboneChanging(global::System.Int32 value);
        partial void OnBackboneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BackboneDetails
        {
            get
            {
                return _BackboneDetails;
            }
            set
            {
                OnBackboneDetailsChanging(value);
                ReportPropertyChanging("BackboneDetails");
                _BackboneDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BackboneDetails");
                OnBackboneDetailsChanged();
            }
        }
        private global::System.String _BackboneDetails;
        partial void OnBackboneDetailsChanging(global::System.String value);
        partial void OnBackboneDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Skin
        {
            get
            {
                return _Skin;
            }
            set
            {
                OnSkinChanging(value);
                ReportPropertyChanging("Skin");
                _Skin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Skin");
                OnSkinChanged();
            }
        }
        private global::System.Int32 _Skin;
        partial void OnSkinChanging(global::System.Int32 value);
        partial void OnSkinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SkinDetails
        {
            get
            {
                return _SkinDetails;
            }
            set
            {
                OnSkinDetailsChanging(value);
                ReportPropertyChanging("SkinDetails");
                _SkinDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SkinDetails");
                OnSkinDetailsChanged();
            }
        }
        private global::System.String _SkinDetails;
        partial void OnSkinDetailsChanging(global::System.String value);
        partial void OnSkinDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LympNodes
        {
            get
            {
                return _LympNodes;
            }
            set
            {
                OnLympNodesChanging(value);
                ReportPropertyChanging("LympNodes");
                _LympNodes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LympNodes");
                OnLympNodesChanged();
            }
        }
        private global::System.Int32 _LympNodes;
        partial void OnLympNodesChanging(global::System.Int32 value);
        partial void OnLympNodesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LympNodesDetails
        {
            get
            {
                return _LympNodesDetails;
            }
            set
            {
                OnLympNodesDetailsChanging(value);
                ReportPropertyChanging("LympNodesDetails");
                _LympNodesDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LympNodesDetails");
                OnLympNodesDetailsChanged();
            }
        }
        private global::System.String _LympNodesDetails;
        partial void OnLympNodesDetailsChanging(global::System.String value);
        partial void OnLympNodesDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NervousSystem
        {
            get
            {
                return _NervousSystem;
            }
            set
            {
                OnNervousSystemChanging(value);
                ReportPropertyChanging("NervousSystem");
                _NervousSystem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NervousSystem");
                OnNervousSystemChanged();
            }
        }
        private global::System.Int32 _NervousSystem;
        partial void OnNervousSystemChanging(global::System.Int32 value);
        partial void OnNervousSystemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NervousSystemDetails
        {
            get
            {
                return _NervousSystemDetails;
            }
            set
            {
                OnNervousSystemDetailsChanging(value);
                ReportPropertyChanging("NervousSystemDetails");
                _NervousSystemDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NervousSystemDetails");
                OnNervousSystemDetailsChanged();
            }
        }
        private global::System.String _NervousSystemDetails;
        partial void OnNervousSystemDetailsChanging(global::System.String value);
        partial void OnNervousSystemDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Motion
        {
            get
            {
                return _Motion;
            }
            set
            {
                OnMotionChanging(value);
                ReportPropertyChanging("Motion");
                _Motion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Motion");
                OnMotionChanged();
            }
        }
        private global::System.Int32 _Motion;
        partial void OnMotionChanging(global::System.Int32 value);
        partial void OnMotionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MotionDetails
        {
            get
            {
                return _MotionDetails;
            }
            set
            {
                OnMotionDetailsChanging(value);
                ReportPropertyChanging("MotionDetails");
                _MotionDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MotionDetails");
                OnMotionDetailsChanged();
            }
        }
        private global::System.String _MotionDetails;
        partial void OnMotionDetailsChanging(global::System.String value);
        partial void OnMotionDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PsychicTest
        {
            get
            {
                return _PsychicTest;
            }
            set
            {
                OnPsychicTestChanging(value);
                ReportPropertyChanging("PsychicTest");
                _PsychicTest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PsychicTest");
                OnPsychicTestChanged();
            }
        }
        private global::System.Int32 _PsychicTest;
        partial void OnPsychicTestChanging(global::System.Int32 value);
        partial void OnPsychicTestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PsychicTestDetails
        {
            get
            {
                return _PsychicTestDetails;
            }
            set
            {
                OnPsychicTestDetailsChanging(value);
                ReportPropertyChanging("PsychicTestDetails");
                _PsychicTestDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PsychicTestDetails");
                OnPsychicTestDetailsChanged();
            }
        }
        private global::System.String _PsychicTestDetails;
        partial void OnPsychicTestDetailsChanging(global::System.String value);
        partial void OnPsychicTestDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Scars
        {
            get
            {
                return _Scars;
            }
            set
            {
                OnScarsChanging(value);
                ReportPropertyChanging("Scars");
                _Scars = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Scars");
                OnScarsChanged();
            }
        }
        private global::System.Int32 _Scars;
        partial void OnScarsChanging(global::System.Int32 value);
        partial void OnScarsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScarsDetails
        {
            get
            {
                return _ScarsDetails;
            }
            set
            {
                OnScarsDetailsChanging(value);
                ReportPropertyChanging("ScarsDetails");
                _ScarsDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScarsDetails");
                OnScarsDetailsChanged();
            }
        }
        private global::System.String _ScarsDetails;
        partial void OnScarsDetailsChanging(global::System.String value);
        partial void OnScarsDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Kidneys
        {
            get
            {
                return _Kidneys;
            }
            set
            {
                OnKidneysChanging(value);
                ReportPropertyChanging("Kidneys");
                _Kidneys = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Kidneys");
                OnKidneysChanged();
            }
        }
        private global::System.Int32 _Kidneys;
        partial void OnKidneysChanging(global::System.Int32 value);
        partial void OnKidneysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String KidneysDetails
        {
            get
            {
                return _KidneysDetails;
            }
            set
            {
                OnKidneysDetailsChanging(value);
                ReportPropertyChanging("KidneysDetails");
                _KidneysDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("KidneysDetails");
                OnKidneysDetailsChanged();
            }
        }
        private global::System.String _KidneysDetails;
        partial void OnKidneysDetailsChanging(global::System.String value);
        partial void OnKidneysDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubcutaneousCellularTissue
        {
            get
            {
                return _SubcutaneousCellularTissue;
            }
            set
            {
                OnSubcutaneousCellularTissueChanging(value);
                ReportPropertyChanging("SubcutaneousCellularTissue");
                _SubcutaneousCellularTissue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubcutaneousCellularTissue");
                OnSubcutaneousCellularTissueChanged();
            }
        }
        private global::System.Int32 _SubcutaneousCellularTissue;
        partial void OnSubcutaneousCellularTissueChanging(global::System.Int32 value);
        partial void OnSubcutaneousCellularTissueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubcutaneousCellularTissueDetails
        {
            get
            {
                return _SubcutaneousCellularTissueDetails;
            }
            set
            {
                OnSubcutaneousCellularTissueDetailsChanging(value);
                ReportPropertyChanging("SubcutaneousCellularTissueDetails");
                _SubcutaneousCellularTissueDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SubcutaneousCellularTissueDetails");
                OnSubcutaneousCellularTissueDetailsChanged();
            }
        }
        private global::System.String _SubcutaneousCellularTissueDetails;
        partial void OnSubcutaneousCellularTissueDetailsChanging(global::System.String value);
        partial void OnSubcutaneousCellularTissueDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Observations
        {
            get
            {
                return _Observations;
            }
            set
            {
                OnObservationsChanging(value);
                ReportPropertyChanging("Observations");
                _Observations = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Observations");
                OnObservationsChanged();
            }
        }
        private global::System.String _Observations;
        partial void OnObservationsChanging(global::System.String value);
        partial void OnObservationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VaccinesHistory
        {
            get
            {
                return _VaccinesHistory;
            }
            set
            {
                OnVaccinesHistoryChanging(value);
                ReportPropertyChanging("VaccinesHistory");
                _VaccinesHistory = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VaccinesHistory");
                OnVaccinesHistoryChanged();
            }
        }
        private global::System.String _VaccinesHistory;
        partial void OnVaccinesHistoryChanging(global::System.String value);
        partial void OnVaccinesHistoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BalanceTest
        {
            get
            {
                return _BalanceTest;
            }
            set
            {
                OnBalanceTestChanging(value);
                ReportPropertyChanging("BalanceTest");
                _BalanceTest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BalanceTest");
                OnBalanceTestChanged();
            }
        }
        private global::System.Int32 _BalanceTest;
        partial void OnBalanceTestChanging(global::System.Int32 value);
        partial void OnBalanceTestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BalanceTestDetails
        {
            get
            {
                return _BalanceTestDetails;
            }
            set
            {
                OnBalanceTestDetailsChanging(value);
                ReportPropertyChanging("BalanceTestDetails");
                _BalanceTestDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BalanceTestDetails");
                OnBalanceTestDetailsChanged();
            }
        }
        private global::System.String _BalanceTestDetails;
        partial void OnBalanceTestDetailsChanging(global::System.String value);
        partial void OnBalanceTestDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IMCStatus
        {
            get
            {
                return _IMCStatus;
            }
            set
            {
                OnIMCStatusChanging(value);
                ReportPropertyChanging("IMCStatus");
                _IMCStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IMCStatus");
                OnIMCStatusChanged();
            }
        }
        private global::System.Int32 _IMCStatus;
        partial void OnIMCStatusChanging(global::System.Int32 value);
        partial void OnIMCStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IMCStatusDetail
        {
            get
            {
                return _IMCStatusDetail;
            }
            set
            {
                OnIMCStatusDetailChanging(value);
                ReportPropertyChanging("IMCStatusDetail");
                _IMCStatusDetail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IMCStatusDetail");
                OnIMCStatusDetailChanged();
            }
        }
        private global::System.String _IMCStatusDetail;
        partial void OnIMCStatusDetailChanging(global::System.String value);
        partial void OnIMCStatusDetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BloodPressureStatus
        {
            get
            {
                return _BloodPressureStatus;
            }
            set
            {
                OnBloodPressureStatusChanging(value);
                ReportPropertyChanging("BloodPressureStatus");
                _BloodPressureStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BloodPressureStatus");
                OnBloodPressureStatusChanged();
            }
        }
        private global::System.Int32 _BloodPressureStatus;
        partial void OnBloodPressureStatusChanging(global::System.Int32 value);
        partial void OnBloodPressureStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BloodPressureStatusDetail
        {
            get
            {
                return _BloodPressureStatusDetail;
            }
            set
            {
                OnBloodPressureStatusDetailChanging(value);
                ReportPropertyChanging("BloodPressureStatusDetail");
                _BloodPressureStatusDetail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BloodPressureStatusDetail");
                OnBloodPressureStatusDetailChanged();
            }
        }
        private global::System.String _BloodPressureStatusDetail;
        partial void OnBloodPressureStatusDetailChanging(global::System.String value);
        partial void OnBloodPressureStatusDetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ProfessionalId
        {
            get
            {
                return _ProfessionalId;
            }
            set
            {
                OnProfessionalIdChanging(value);
                ReportPropertyChanging("ProfessionalId");
                _ProfessionalId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfessionalId");
                OnProfessionalIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ProfessionalId;
        partial void OnProfessionalIdChanging(Nullable<global::System.Guid> value);
        partial void OnProfessionalIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_ClinicalExam_MedicalHistory", "MedicalHistory")]
        public MedicalHistory MedicalHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalHistory>("MedilabModel.FK_ClinicalExam_MedicalHistory", "MedicalHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalHistory>("MedilabModel.FK_ClinicalExam_MedicalHistory", "MedicalHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalHistory> MedicalHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalHistory>("MedilabModel.FK_ClinicalExam_MedicalHistory", "MedicalHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalHistory>("MedilabModel.FK_ClinicalExam_MedicalHistory", "MedicalHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="ClinicalHistoryResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClinicalHistoryResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClinicalHistoryResult object.
        /// </summary>
        /// <param name="clinicalHistoryResultId">Initial value of the ClinicalHistoryResultId property.</param>
        /// <param name="clinicalHistoryResultName">Initial value of the ClinicalHistoryResultName property.</param>
        public static ClinicalHistoryResult CreateClinicalHistoryResult(global::System.Int32 clinicalHistoryResultId, global::System.String clinicalHistoryResultName)
        {
            ClinicalHistoryResult clinicalHistoryResult = new ClinicalHistoryResult();
            clinicalHistoryResult.ClinicalHistoryResultId = clinicalHistoryResultId;
            clinicalHistoryResult.ClinicalHistoryResultName = clinicalHistoryResultName;
            return clinicalHistoryResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClinicalHistoryResultId
        {
            get
            {
                return _ClinicalHistoryResultId;
            }
            set
            {
                if (_ClinicalHistoryResultId != value)
                {
                    OnClinicalHistoryResultIdChanging(value);
                    ReportPropertyChanging("ClinicalHistoryResultId");
                    _ClinicalHistoryResultId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinicalHistoryResultId");
                    OnClinicalHistoryResultIdChanged();
                }
            }
        }
        private global::System.Int32 _ClinicalHistoryResultId;
        partial void OnClinicalHistoryResultIdChanging(global::System.Int32 value);
        partial void OnClinicalHistoryResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClinicalHistoryResultName
        {
            get
            {
                return _ClinicalHistoryResultName;
            }
            set
            {
                OnClinicalHistoryResultNameChanging(value);
                ReportPropertyChanging("ClinicalHistoryResultName");
                _ClinicalHistoryResultName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClinicalHistoryResultName");
                OnClinicalHistoryResultNameChanged();
            }
        }
        private global::System.String _ClinicalHistoryResultName;
        partial void OnClinicalHistoryResultNameChanging(global::System.String value);
        partial void OnClinicalHistoryResultNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistory_ClinicalHistoryResult", "MedicalHistory")]
        public EntityCollection<MedicalHistory> MedicalHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalHistory>("MedilabModel.FK_MedicalHistory_ClinicalHistoryResult", "MedicalHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalHistory>("MedilabModel.FK_MedicalHistory_ClinicalHistoryResult", "MedicalHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="CompanyInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompanyInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompanyInfo object.
        /// </summary>
        /// <param name="companyInfoId">Initial value of the CompanyInfoId property.</param>
        /// <param name="companyInfoName">Initial value of the CompanyInfoName property.</param>
        /// <param name="companyInfoAddress">Initial value of the CompanyInfoAddress property.</param>
        /// <param name="companyInfoPostalCode">Initial value of the CompanyInfoPostalCode property.</param>
        /// <param name="companyInfoProvince">Initial value of the CompanyInfoProvince property.</param>
        /// <param name="companyInfoCountry">Initial value of the CompanyInfoCountry property.</param>
        /// <param name="companyInfoPhone">Initial value of the CompanyInfoPhone property.</param>
        /// <param name="companyInfoFax">Initial value of the CompanyInfoFax property.</param>
        /// <param name="companyInfoEmail">Initial value of the CompanyInfoEmail property.</param>
        /// <param name="companyInfoImage">Initial value of the CompanyInfoImage property.</param>
        /// <param name="companyInfoCuit">Initial value of the CompanyInfoCuit property.</param>
        /// <param name="companyInfoIsActive">Initial value of the CompanyInfoIsActive property.</param>
        /// <param name="companyInfoIsDeleted">Initial value of the CompanyInfoIsDeleted property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="companyInfoExcelFormat">Initial value of the CompanyInfoExcelFormat property.</param>
        public static CompanyInfo CreateCompanyInfo(global::System.Guid companyInfoId, global::System.String companyInfoName, global::System.String companyInfoAddress, global::System.String companyInfoPostalCode, global::System.String companyInfoProvince, global::System.String companyInfoCountry, global::System.String companyInfoPhone, global::System.String companyInfoFax, global::System.String companyInfoEmail, global::System.String companyInfoImage, global::System.String companyInfoCuit, global::System.Boolean companyInfoIsActive, global::System.Boolean companyInfoIsDeleted, global::System.Byte[] lastUpdated, global::System.String companyInfoExcelFormat)
        {
            CompanyInfo companyInfo = new CompanyInfo();
            companyInfo.CompanyInfoId = companyInfoId;
            companyInfo.CompanyInfoName = companyInfoName;
            companyInfo.CompanyInfoAddress = companyInfoAddress;
            companyInfo.CompanyInfoPostalCode = companyInfoPostalCode;
            companyInfo.CompanyInfoProvince = companyInfoProvince;
            companyInfo.CompanyInfoCountry = companyInfoCountry;
            companyInfo.CompanyInfoPhone = companyInfoPhone;
            companyInfo.CompanyInfoFax = companyInfoFax;
            companyInfo.CompanyInfoEmail = companyInfoEmail;
            companyInfo.CompanyInfoImage = companyInfoImage;
            companyInfo.CompanyInfoCuit = companyInfoCuit;
            companyInfo.CompanyInfoIsActive = companyInfoIsActive;
            companyInfo.CompanyInfoIsDeleted = companyInfoIsDeleted;
            companyInfo.LastUpdated = lastUpdated;
            companyInfo.CompanyInfoExcelFormat = companyInfoExcelFormat;
            return companyInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyInfoId
        {
            get
            {
                return _CompanyInfoId;
            }
            set
            {
                if (_CompanyInfoId != value)
                {
                    OnCompanyInfoIdChanging(value);
                    ReportPropertyChanging("CompanyInfoId");
                    _CompanyInfoId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyInfoId");
                    OnCompanyInfoIdChanged();
                }
            }
        }
        private global::System.Guid _CompanyInfoId;
        partial void OnCompanyInfoIdChanging(global::System.Guid value);
        partial void OnCompanyInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyInfoName
        {
            get
            {
                return _CompanyInfoName;
            }
            set
            {
                OnCompanyInfoNameChanging(value);
                ReportPropertyChanging("CompanyInfoName");
                _CompanyInfoName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyInfoName");
                OnCompanyInfoNameChanged();
            }
        }
        private global::System.String _CompanyInfoName;
        partial void OnCompanyInfoNameChanging(global::System.String value);
        partial void OnCompanyInfoNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyInfoAddress
        {
            get
            {
                return _CompanyInfoAddress;
            }
            set
            {
                OnCompanyInfoAddressChanging(value);
                ReportPropertyChanging("CompanyInfoAddress");
                _CompanyInfoAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyInfoAddress");
                OnCompanyInfoAddressChanged();
            }
        }
        private global::System.String _CompanyInfoAddress;
        partial void OnCompanyInfoAddressChanging(global::System.String value);
        partial void OnCompanyInfoAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyInfoPostalCode
        {
            get
            {
                return _CompanyInfoPostalCode;
            }
            set
            {
                OnCompanyInfoPostalCodeChanging(value);
                ReportPropertyChanging("CompanyInfoPostalCode");
                _CompanyInfoPostalCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyInfoPostalCode");
                OnCompanyInfoPostalCodeChanged();
            }
        }
        private global::System.String _CompanyInfoPostalCode;
        partial void OnCompanyInfoPostalCodeChanging(global::System.String value);
        partial void OnCompanyInfoPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyInfoProvince
        {
            get
            {
                return _CompanyInfoProvince;
            }
            set
            {
                OnCompanyInfoProvinceChanging(value);
                ReportPropertyChanging("CompanyInfoProvince");
                _CompanyInfoProvince = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyInfoProvince");
                OnCompanyInfoProvinceChanged();
            }
        }
        private global::System.String _CompanyInfoProvince;
        partial void OnCompanyInfoProvinceChanging(global::System.String value);
        partial void OnCompanyInfoProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyInfoCountry
        {
            get
            {
                return _CompanyInfoCountry;
            }
            set
            {
                OnCompanyInfoCountryChanging(value);
                ReportPropertyChanging("CompanyInfoCountry");
                _CompanyInfoCountry = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyInfoCountry");
                OnCompanyInfoCountryChanged();
            }
        }
        private global::System.String _CompanyInfoCountry;
        partial void OnCompanyInfoCountryChanging(global::System.String value);
        partial void OnCompanyInfoCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyInfoPhone
        {
            get
            {
                return _CompanyInfoPhone;
            }
            set
            {
                OnCompanyInfoPhoneChanging(value);
                ReportPropertyChanging("CompanyInfoPhone");
                _CompanyInfoPhone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyInfoPhone");
                OnCompanyInfoPhoneChanged();
            }
        }
        private global::System.String _CompanyInfoPhone;
        partial void OnCompanyInfoPhoneChanging(global::System.String value);
        partial void OnCompanyInfoPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyInfoFax
        {
            get
            {
                return _CompanyInfoFax;
            }
            set
            {
                OnCompanyInfoFaxChanging(value);
                ReportPropertyChanging("CompanyInfoFax");
                _CompanyInfoFax = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyInfoFax");
                OnCompanyInfoFaxChanged();
            }
        }
        private global::System.String _CompanyInfoFax;
        partial void OnCompanyInfoFaxChanging(global::System.String value);
        partial void OnCompanyInfoFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyInfoEmail
        {
            get
            {
                return _CompanyInfoEmail;
            }
            set
            {
                OnCompanyInfoEmailChanging(value);
                ReportPropertyChanging("CompanyInfoEmail");
                _CompanyInfoEmail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyInfoEmail");
                OnCompanyInfoEmailChanged();
            }
        }
        private global::System.String _CompanyInfoEmail;
        partial void OnCompanyInfoEmailChanging(global::System.String value);
        partial void OnCompanyInfoEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyInfoImage
        {
            get
            {
                return _CompanyInfoImage;
            }
            set
            {
                OnCompanyInfoImageChanging(value);
                ReportPropertyChanging("CompanyInfoImage");
                _CompanyInfoImage = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyInfoImage");
                OnCompanyInfoImageChanged();
            }
        }
        private global::System.String _CompanyInfoImage;
        partial void OnCompanyInfoImageChanging(global::System.String value);
        partial void OnCompanyInfoImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyInfoCuit
        {
            get
            {
                return _CompanyInfoCuit;
            }
            set
            {
                OnCompanyInfoCuitChanging(value);
                ReportPropertyChanging("CompanyInfoCuit");
                _CompanyInfoCuit = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyInfoCuit");
                OnCompanyInfoCuitChanged();
            }
        }
        private global::System.String _CompanyInfoCuit;
        partial void OnCompanyInfoCuitChanging(global::System.String value);
        partial void OnCompanyInfoCuitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CompanyInfoIsActive
        {
            get
            {
                return _CompanyInfoIsActive;
            }
            set
            {
                OnCompanyInfoIsActiveChanging(value);
                ReportPropertyChanging("CompanyInfoIsActive");
                _CompanyInfoIsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyInfoIsActive");
                OnCompanyInfoIsActiveChanged();
            }
        }
        private global::System.Boolean _CompanyInfoIsActive;
        partial void OnCompanyInfoIsActiveChanging(global::System.Boolean value);
        partial void OnCompanyInfoIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CompanyInfoIsDeleted
        {
            get
            {
                return _CompanyInfoIsDeleted;
            }
            set
            {
                OnCompanyInfoIsDeletedChanging(value);
                ReportPropertyChanging("CompanyInfoIsDeleted");
                _CompanyInfoIsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyInfoIsDeleted");
                OnCompanyInfoIsDeletedChanged();
            }
        }
        private global::System.Boolean _CompanyInfoIsDeleted;
        partial void OnCompanyInfoIsDeletedChanging(global::System.Boolean value);
        partial void OnCompanyInfoIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyInfoExcelFormat
        {
            get
            {
                return _CompanyInfoExcelFormat;
            }
            set
            {
                OnCompanyInfoExcelFormatChanging(value);
                ReportPropertyChanging("CompanyInfoExcelFormat");
                _CompanyInfoExcelFormat = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyInfoExcelFormat");
                OnCompanyInfoExcelFormatChanged();
            }
        }
        private global::System.String _CompanyInfoExcelFormat;
        partial void OnCompanyInfoExcelFormatChanging(global::System.String value);
        partial void OnCompanyInfoExcelFormatChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceHeader_CompanyInfo", "InvoiceHeader")]
        public EntityCollection<InvoiceHeader> InvoiceHeader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceHeader>("MedilabModel.FK_InvoiceHeader_CompanyInfo", "InvoiceHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceHeader>("MedilabModel.FK_InvoiceHeader_CompanyInfo", "InvoiceHeader", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="Configuration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Configuration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Configuration object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Configuration CreateConfiguration(global::System.String name, global::System.String value)
        {
            Configuration configuration = new Configuration();
            configuration.Name = name;
            configuration.Value = value;
            return configuration;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="CreditNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CreditNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CreditNote object.
        /// </summary>
        /// <param name="creditNoteId">Initial value of the CreditNoteId property.</param>
        /// <param name="creditNoteNumber">Initial value of the CreditNoteNumber property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        /// <param name="detail">Initial value of the Detail property.</param>
        /// <param name="import">Initial value of the Import property.</param>
        /// <param name="iVA">Initial value of the IVA property.</param>
        /// <param name="iVAImport">Initial value of the IVAImport property.</param>
        /// <param name="creatorUserId">Initial value of the CreatorUserId property.</param>
        /// <param name="creditNoteType">Initial value of the CreditNoteType property.</param>
        /// <param name="observations">Initial value of the Observations property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="cAEExpirationDate">Initial value of the CAEExpirationDate property.</param>
        /// <param name="salePoint">Initial value of the SalePoint property.</param>
        /// <param name="cAE">Initial value of the CAE property.</param>
        /// <param name="iVAType">Initial value of the IVAType property.</param>
        public static CreditNote CreateCreditNote(global::System.Guid creditNoteId, global::System.Int32 creditNoteNumber, global::System.DateTime creationDate, global::System.Guid clientId, global::System.String detail, global::System.Double import, global::System.Boolean iVA, global::System.Double iVAImport, global::System.Guid creatorUserId, global::System.Int32 creditNoteType, global::System.String observations, global::System.Int32 state, global::System.DateTime cAEExpirationDate, global::System.Int32 salePoint, global::System.String cAE, global::System.Int32 iVAType)
        {
            CreditNote creditNote = new CreditNote();
            creditNote.CreditNoteId = creditNoteId;
            creditNote.CreditNoteNumber = creditNoteNumber;
            creditNote.CreationDate = creationDate;
            creditNote.ClientId = clientId;
            creditNote.Detail = detail;
            creditNote.Import = import;
            creditNote.IVA = iVA;
            creditNote.IVAImport = iVAImport;
            creditNote.CreatorUserId = creatorUserId;
            creditNote.CreditNoteType = creditNoteType;
            creditNote.Observations = observations;
            creditNote.State = state;
            creditNote.CAEExpirationDate = cAEExpirationDate;
            creditNote.SalePoint = salePoint;
            creditNote.CAE = cAE;
            creditNote.IVAType = iVAType;
            return creditNote;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CreditNoteId
        {
            get
            {
                return _CreditNoteId;
            }
            set
            {
                if (_CreditNoteId != value)
                {
                    OnCreditNoteIdChanging(value);
                    ReportPropertyChanging("CreditNoteId");
                    _CreditNoteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreditNoteId");
                    OnCreditNoteIdChanged();
                }
            }
        }
        private global::System.Guid _CreditNoteId;
        partial void OnCreditNoteIdChanging(global::System.Guid value);
        partial void OnCreditNoteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreditNoteNumber
        {
            get
            {
                return _CreditNoteNumber;
            }
            set
            {
                OnCreditNoteNumberChanging(value);
                ReportPropertyChanging("CreditNoteNumber");
                _CreditNoteNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditNoteNumber");
                OnCreditNoteNumberChanged();
            }
        }
        private global::System.Int32 _CreditNoteNumber;
        partial void OnCreditNoteNumberChanging(global::System.Int32 value);
        partial void OnCreditNoteNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private global::System.Guid _ClientId;
        partial void OnClientIdChanging(global::System.Guid value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RelatedInvoiceId
        {
            get
            {
                return _RelatedInvoiceId;
            }
            set
            {
                OnRelatedInvoiceIdChanging(value);
                ReportPropertyChanging("RelatedInvoiceId");
                _RelatedInvoiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelatedInvoiceId");
                OnRelatedInvoiceIdChanged();
            }
        }
        private Nullable<global::System.Guid> _RelatedInvoiceId;
        partial void OnRelatedInvoiceIdChanging(Nullable<global::System.Guid> value);
        partial void OnRelatedInvoiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Detail
        {
            get
            {
                return _Detail;
            }
            set
            {
                OnDetailChanging(value);
                ReportPropertyChanging("Detail");
                _Detail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Detail");
                OnDetailChanged();
            }
        }
        private global::System.String _Detail;
        partial void OnDetailChanging(global::System.String value);
        partial void OnDetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Import
        {
            get
            {
                return _Import;
            }
            set
            {
                OnImportChanging(value);
                ReportPropertyChanging("Import");
                _Import = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Import");
                OnImportChanged();
            }
        }
        private global::System.Double _Import;
        partial void OnImportChanging(global::System.Double value);
        partial void OnImportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IVA
        {
            get
            {
                return _IVA;
            }
            set
            {
                OnIVAChanging(value);
                ReportPropertyChanging("IVA");
                _IVA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IVA");
                OnIVAChanged();
            }
        }
        private global::System.Boolean _IVA;
        partial void OnIVAChanging(global::System.Boolean value);
        partial void OnIVAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double IVAImport
        {
            get
            {
                return _IVAImport;
            }
            set
            {
                OnIVAImportChanging(value);
                ReportPropertyChanging("IVAImport");
                _IVAImport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IVAImport");
                OnIVAImportChanged();
            }
        }
        private global::System.Double _IVAImport;
        partial void OnIVAImportChanging(global::System.Double value);
        partial void OnIVAImportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CreatorUserId
        {
            get
            {
                return _CreatorUserId;
            }
            set
            {
                OnCreatorUserIdChanging(value);
                ReportPropertyChanging("CreatorUserId");
                _CreatorUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorUserId");
                OnCreatorUserIdChanged();
            }
        }
        private global::System.Guid _CreatorUserId;
        partial void OnCreatorUserIdChanging(global::System.Guid value);
        partial void OnCreatorUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreditNoteType
        {
            get
            {
                return _CreditNoteType;
            }
            set
            {
                OnCreditNoteTypeChanging(value);
                ReportPropertyChanging("CreditNoteType");
                _CreditNoteType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditNoteType");
                OnCreditNoteTypeChanged();
            }
        }
        private global::System.Int32 _CreditNoteType;
        partial void OnCreditNoteTypeChanging(global::System.Int32 value);
        partial void OnCreditNoteTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Observations
        {
            get
            {
                return _Observations;
            }
            set
            {
                OnObservationsChanging(value);
                ReportPropertyChanging("Observations");
                _Observations = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Observations");
                OnObservationsChanged();
            }
        }
        private global::System.String _Observations;
        partial void OnObservationsChanging(global::System.String value);
        partial void OnObservationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Int32 _State;
        partial void OnStateChanging(global::System.Int32 value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ReceiptId
        {
            get
            {
                return _ReceiptId;
            }
            set
            {
                OnReceiptIdChanging(value);
                ReportPropertyChanging("ReceiptId");
                _ReceiptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiptId");
                OnReceiptIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ReceiptId;
        partial void OnReceiptIdChanging(Nullable<global::System.Guid> value);
        partial void OnReceiptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CAEExpirationDate
        {
            get
            {
                return _CAEExpirationDate;
            }
            set
            {
                OnCAEExpirationDateChanging(value);
                ReportPropertyChanging("CAEExpirationDate");
                _CAEExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CAEExpirationDate");
                OnCAEExpirationDateChanged();
            }
        }
        private global::System.DateTime _CAEExpirationDate;
        partial void OnCAEExpirationDateChanging(global::System.DateTime value);
        partial void OnCAEExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SalePoint
        {
            get
            {
                return _SalePoint;
            }
            set
            {
                OnSalePointChanging(value);
                ReportPropertyChanging("SalePoint");
                _SalePoint = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalePoint");
                OnSalePointChanged();
            }
        }
        private global::System.Int32 _SalePoint;
        partial void OnSalePointChanging(global::System.Int32 value);
        partial void OnSalePointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CAE
        {
            get
            {
                return _CAE;
            }
            set
            {
                OnCAEChanging(value);
                ReportPropertyChanging("CAE");
                _CAE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CAE");
                OnCAEChanged();
            }
        }
        private global::System.String _CAE;
        partial void OnCAEChanging(global::System.String value);
        partial void OnCAEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IVAType
        {
            get
            {
                return _IVAType;
            }
            set
            {
                OnIVATypeChanging(value);
                ReportPropertyChanging("IVAType");
                _IVAType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IVAType");
                OnIVATypeChanged();
            }
        }
        private global::System.Int32 _IVAType;
        partial void OnIVATypeChanging(global::System.Int32 value);
        partial void OnIVATypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_CreditNote_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_CreditNote_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_CreditNote_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_CreditNote_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("MedilabModel.FK_CreditNote_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_CreditNote_InvoiceHeader", "InvoiceHeader")]
        public InvoiceHeader InvoiceHeader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceHeader>("MedilabModel.FK_CreditNote_InvoiceHeader", "InvoiceHeader").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceHeader>("MedilabModel.FK_CreditNote_InvoiceHeader", "InvoiceHeader").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceHeader> InvoiceHeaderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceHeader>("MedilabModel.FK_CreditNote_InvoiceHeader", "InvoiceHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvoiceHeader>("MedilabModel.FK_CreditNote_InvoiceHeader", "InvoiceHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_CreditNote_Receipt", "Receipt")]
        public Receipt Receipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_CreditNote_Receipt", "Receipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_CreditNote_Receipt", "Receipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Receipt> ReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_CreditNote_Receipt", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Receipt>("MedilabModel.FK_CreditNote_Receipt", "Receipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_CreditNote_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_CreditNote_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_CreditNote_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_CreditNote_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MedilabModel.FK_CreditNote_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="DebitNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DebitNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DebitNote object.
        /// </summary>
        /// <param name="debitNoteId">Initial value of the DebitNoteId property.</param>
        /// <param name="debitNoteNumber">Initial value of the DebitNoteNumber property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        /// <param name="detail">Initial value of the Detail property.</param>
        /// <param name="import">Initial value of the Import property.</param>
        /// <param name="iVA">Initial value of the IVA property.</param>
        /// <param name="iVAImport">Initial value of the IVAImport property.</param>
        /// <param name="creatorUserId">Initial value of the CreatorUserId property.</param>
        /// <param name="creditNoteType">Initial value of the CreditNoteType property.</param>
        /// <param name="observations">Initial value of the Observations property.</param>
        /// <param name="state">Initial value of the State property.</param>
        /// <param name="cAEExpirationDate">Initial value of the CAEExpirationDate property.</param>
        /// <param name="salePoint">Initial value of the SalePoint property.</param>
        /// <param name="cAE">Initial value of the CAE property.</param>
        /// <param name="iVAType">Initial value of the IVAType property.</param>
        public static DebitNote CreateDebitNote(global::System.Guid debitNoteId, global::System.Int32 debitNoteNumber, global::System.DateTime creationDate, global::System.Guid clientId, global::System.String detail, global::System.Double import, global::System.Boolean iVA, global::System.Double iVAImport, global::System.Guid creatorUserId, global::System.Int32 creditNoteType, global::System.String observations, global::System.Int32 state, global::System.DateTime cAEExpirationDate, global::System.Int32 salePoint, global::System.String cAE, global::System.Int32 iVAType)
        {
            DebitNote debitNote = new DebitNote();
            debitNote.DebitNoteId = debitNoteId;
            debitNote.DebitNoteNumber = debitNoteNumber;
            debitNote.CreationDate = creationDate;
            debitNote.ClientId = clientId;
            debitNote.Detail = detail;
            debitNote.Import = import;
            debitNote.IVA = iVA;
            debitNote.IVAImport = iVAImport;
            debitNote.CreatorUserId = creatorUserId;
            debitNote.CreditNoteType = creditNoteType;
            debitNote.Observations = observations;
            debitNote.State = state;
            debitNote.CAEExpirationDate = cAEExpirationDate;
            debitNote.SalePoint = salePoint;
            debitNote.CAE = cAE;
            debitNote.IVAType = iVAType;
            return debitNote;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DebitNoteId
        {
            get
            {
                return _DebitNoteId;
            }
            set
            {
                if (_DebitNoteId != value)
                {
                    OnDebitNoteIdChanging(value);
                    ReportPropertyChanging("DebitNoteId");
                    _DebitNoteId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DebitNoteId");
                    OnDebitNoteIdChanged();
                }
            }
        }
        private global::System.Guid _DebitNoteId;
        partial void OnDebitNoteIdChanging(global::System.Guid value);
        partial void OnDebitNoteIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DebitNoteNumber
        {
            get
            {
                return _DebitNoteNumber;
            }
            set
            {
                OnDebitNoteNumberChanging(value);
                ReportPropertyChanging("DebitNoteNumber");
                _DebitNoteNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DebitNoteNumber");
                OnDebitNoteNumberChanged();
            }
        }
        private global::System.Int32 _DebitNoteNumber;
        partial void OnDebitNoteNumberChanging(global::System.Int32 value);
        partial void OnDebitNoteNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private global::System.Guid _ClientId;
        partial void OnClientIdChanging(global::System.Guid value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> RelatedInvoiceId
        {
            get
            {
                return _RelatedInvoiceId;
            }
            set
            {
                OnRelatedInvoiceIdChanging(value);
                ReportPropertyChanging("RelatedInvoiceId");
                _RelatedInvoiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelatedInvoiceId");
                OnRelatedInvoiceIdChanged();
            }
        }
        private Nullable<global::System.Guid> _RelatedInvoiceId;
        partial void OnRelatedInvoiceIdChanging(Nullable<global::System.Guid> value);
        partial void OnRelatedInvoiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Detail
        {
            get
            {
                return _Detail;
            }
            set
            {
                OnDetailChanging(value);
                ReportPropertyChanging("Detail");
                _Detail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Detail");
                OnDetailChanged();
            }
        }
        private global::System.String _Detail;
        partial void OnDetailChanging(global::System.String value);
        partial void OnDetailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Import
        {
            get
            {
                return _Import;
            }
            set
            {
                OnImportChanging(value);
                ReportPropertyChanging("Import");
                _Import = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Import");
                OnImportChanged();
            }
        }
        private global::System.Double _Import;
        partial void OnImportChanging(global::System.Double value);
        partial void OnImportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IVA
        {
            get
            {
                return _IVA;
            }
            set
            {
                OnIVAChanging(value);
                ReportPropertyChanging("IVA");
                _IVA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IVA");
                OnIVAChanged();
            }
        }
        private global::System.Boolean _IVA;
        partial void OnIVAChanging(global::System.Boolean value);
        partial void OnIVAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double IVAImport
        {
            get
            {
                return _IVAImport;
            }
            set
            {
                OnIVAImportChanging(value);
                ReportPropertyChanging("IVAImport");
                _IVAImport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IVAImport");
                OnIVAImportChanged();
            }
        }
        private global::System.Double _IVAImport;
        partial void OnIVAImportChanging(global::System.Double value);
        partial void OnIVAImportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CreatorUserId
        {
            get
            {
                return _CreatorUserId;
            }
            set
            {
                OnCreatorUserIdChanging(value);
                ReportPropertyChanging("CreatorUserId");
                _CreatorUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatorUserId");
                OnCreatorUserIdChanged();
            }
        }
        private global::System.Guid _CreatorUserId;
        partial void OnCreatorUserIdChanging(global::System.Guid value);
        partial void OnCreatorUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreditNoteType
        {
            get
            {
                return _CreditNoteType;
            }
            set
            {
                OnCreditNoteTypeChanging(value);
                ReportPropertyChanging("CreditNoteType");
                _CreditNoteType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditNoteType");
                OnCreditNoteTypeChanged();
            }
        }
        private global::System.Int32 _CreditNoteType;
        partial void OnCreditNoteTypeChanging(global::System.Int32 value);
        partial void OnCreditNoteTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Observations
        {
            get
            {
                return _Observations;
            }
            set
            {
                OnObservationsChanging(value);
                ReportPropertyChanging("Observations");
                _Observations = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Observations");
                OnObservationsChanged();
            }
        }
        private global::System.String _Observations;
        partial void OnObservationsChanging(global::System.String value);
        partial void OnObservationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.Int32 _State;
        partial void OnStateChanging(global::System.Int32 value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ReceiptId
        {
            get
            {
                return _ReceiptId;
            }
            set
            {
                OnReceiptIdChanging(value);
                ReportPropertyChanging("ReceiptId");
                _ReceiptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiptId");
                OnReceiptIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ReceiptId;
        partial void OnReceiptIdChanging(Nullable<global::System.Guid> value);
        partial void OnReceiptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CAEExpirationDate
        {
            get
            {
                return _CAEExpirationDate;
            }
            set
            {
                OnCAEExpirationDateChanging(value);
                ReportPropertyChanging("CAEExpirationDate");
                _CAEExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CAEExpirationDate");
                OnCAEExpirationDateChanged();
            }
        }
        private global::System.DateTime _CAEExpirationDate;
        partial void OnCAEExpirationDateChanging(global::System.DateTime value);
        partial void OnCAEExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SalePoint
        {
            get
            {
                return _SalePoint;
            }
            set
            {
                OnSalePointChanging(value);
                ReportPropertyChanging("SalePoint");
                _SalePoint = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalePoint");
                OnSalePointChanged();
            }
        }
        private global::System.Int32 _SalePoint;
        partial void OnSalePointChanging(global::System.Int32 value);
        partial void OnSalePointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CAE
        {
            get
            {
                return _CAE;
            }
            set
            {
                OnCAEChanging(value);
                ReportPropertyChanging("CAE");
                _CAE = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CAE");
                OnCAEChanged();
            }
        }
        private global::System.String _CAE;
        partial void OnCAEChanging(global::System.String value);
        partial void OnCAEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IVAType
        {
            get
            {
                return _IVAType;
            }
            set
            {
                OnIVATypeChanging(value);
                ReportPropertyChanging("IVAType");
                _IVAType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IVAType");
                OnIVATypeChanged();
            }
        }
        private global::System.Int32 _IVAType;
        partial void OnIVATypeChanging(global::System.Int32 value);
        partial void OnIVATypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_DebitNote_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_DebitNote_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_DebitNote_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_DebitNote_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("MedilabModel.FK_DebitNote_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_DebitNote_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_DebitNote_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_DebitNote_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_DebitNote_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MedilabModel.FK_DebitNote_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="DocumentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentType object.
        /// </summary>
        /// <param name="documentTypeId">Initial value of the DocumentTypeId property.</param>
        /// <param name="documentTypeName">Initial value of the DocumentTypeName property.</param>
        public static DocumentType CreateDocumentType(global::System.Int32 documentTypeId, global::System.String documentTypeName)
        {
            DocumentType documentType = new DocumentType();
            documentType.DocumentTypeId = documentTypeId;
            documentType.DocumentTypeName = documentTypeName;
            return documentType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeId
        {
            get
            {
                return _DocumentTypeId;
            }
            set
            {
                if (_DocumentTypeId != value)
                {
                    OnDocumentTypeIdChanging(value);
                    ReportPropertyChanging("DocumentTypeId");
                    _DocumentTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DocumentTypeId");
                    OnDocumentTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _DocumentTypeId;
        partial void OnDocumentTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentTypeName
        {
            get
            {
                return _DocumentTypeName;
            }
            set
            {
                OnDocumentTypeNameChanging(value);
                ReportPropertyChanging("DocumentTypeName");
                _DocumentTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DocumentTypeName");
                OnDocumentTypeNameChanged();
            }
        }
        private global::System.String _DocumentTypeName;
        partial void OnDocumentTypeNameChanging(global::System.String value);
        partial void OnDocumentTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Patient_DocumentType", "Patient")]
        public EntityCollection<Patient> Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("MedilabModel.FK_Patient_DocumentType", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("MedilabModel.FK_Patient_DocumentType", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="ElectronicTransfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ElectronicTransfer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ElectronicTransfer object.
        /// </summary>
        /// <param name="electronicTransferId">Initial value of the ElectronicTransferId property.</param>
        /// <param name="transferImport">Initial value of the TransferImport property.</param>
        /// <param name="paymentDate">Initial value of the PaymentDate property.</param>
        /// <param name="receiptId">Initial value of the ReceiptId property.</param>
        /// <param name="bankName">Initial value of the BankName property.</param>
        /// <param name="accountNumber">Initial value of the AccountNumber property.</param>
        /// <param name="notes">Initial value of the Notes property.</param>
        /// <param name="transferDate">Initial value of the TransferDate property.</param>
        public static ElectronicTransfer CreateElectronicTransfer(global::System.Guid electronicTransferId, global::System.Double transferImport, global::System.DateTime paymentDate, global::System.Guid receiptId, global::System.String bankName, global::System.String accountNumber, global::System.String notes, global::System.DateTime transferDate)
        {
            ElectronicTransfer electronicTransfer = new ElectronicTransfer();
            electronicTransfer.ElectronicTransferId = electronicTransferId;
            electronicTransfer.TransferImport = transferImport;
            electronicTransfer.PaymentDate = paymentDate;
            electronicTransfer.ReceiptId = receiptId;
            electronicTransfer.BankName = bankName;
            electronicTransfer.AccountNumber = accountNumber;
            electronicTransfer.Notes = notes;
            electronicTransfer.TransferDate = transferDate;
            return electronicTransfer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ElectronicTransferId
        {
            get
            {
                return _ElectronicTransferId;
            }
            set
            {
                if (_ElectronicTransferId != value)
                {
                    OnElectronicTransferIdChanging(value);
                    ReportPropertyChanging("ElectronicTransferId");
                    _ElectronicTransferId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ElectronicTransferId");
                    OnElectronicTransferIdChanged();
                }
            }
        }
        private global::System.Guid _ElectronicTransferId;
        partial void OnElectronicTransferIdChanging(global::System.Guid value);
        partial void OnElectronicTransferIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double TransferImport
        {
            get
            {
                return _TransferImport;
            }
            set
            {
                OnTransferImportChanging(value);
                ReportPropertyChanging("TransferImport");
                _TransferImport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferImport");
                OnTransferImportChanged();
            }
        }
        private global::System.Double _TransferImport;
        partial void OnTransferImportChanging(global::System.Double value);
        partial void OnTransferImportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private global::System.DateTime _PaymentDate;
        partial void OnPaymentDateChanging(global::System.DateTime value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReceiptId
        {
            get
            {
                return _ReceiptId;
            }
            set
            {
                OnReceiptIdChanging(value);
                ReportPropertyChanging("ReceiptId");
                _ReceiptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiptId");
                OnReceiptIdChanged();
            }
        }
        private global::System.Guid _ReceiptId;
        partial void OnReceiptIdChanging(global::System.Guid value);
        partial void OnReceiptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountNumber
        {
            get
            {
                return _AccountNumber;
            }
            set
            {
                OnAccountNumberChanging(value);
                ReportPropertyChanging("AccountNumber");
                _AccountNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountNumber");
                OnAccountNumberChanged();
            }
        }
        private global::System.String _AccountNumber;
        partial void OnAccountNumberChanging(global::System.String value);
        partial void OnAccountNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransferDate
        {
            get
            {
                return _TransferDate;
            }
            set
            {
                OnTransferDateChanging(value);
                ReportPropertyChanging("TransferDate");
                _TransferDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransferDate");
                OnTransferDateChanged();
            }
        }
        private global::System.DateTime _TransferDate;
        partial void OnTransferDateChanging(global::System.DateTime value);
        partial void OnTransferDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_ElectronicTrasnfer_Receipt", "Receipt")]
        public Receipt Receipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_ElectronicTrasnfer_Receipt", "Receipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_ElectronicTrasnfer_Receipt", "Receipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Receipt> ReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_ElectronicTrasnfer_Receipt", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Receipt>("MedilabModel.FK_ElectronicTrasnfer_Receipt", "Receipt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="ExamType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExamType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExamType object.
        /// </summary>
        /// <param name="examTypeId">Initial value of the ExamTypeId property.</param>
        /// <param name="examTypeName">Initial value of the ExamTypeName property.</param>
        public static ExamType CreateExamType(global::System.Int32 examTypeId, global::System.String examTypeName)
        {
            ExamType examType = new ExamType();
            examType.ExamTypeId = examTypeId;
            examType.ExamTypeName = examTypeName;
            return examType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExamTypeId
        {
            get
            {
                return _ExamTypeId;
            }
            set
            {
                if (_ExamTypeId != value)
                {
                    OnExamTypeIdChanging(value);
                    ReportPropertyChanging("ExamTypeId");
                    _ExamTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExamTypeId");
                    OnExamTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ExamTypeId;
        partial void OnExamTypeIdChanging(global::System.Int32 value);
        partial void OnExamTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExamTypeName
        {
            get
            {
                return _ExamTypeName;
            }
            set
            {
                OnExamTypeNameChanging(value);
                ReportPropertyChanging("ExamTypeName");
                _ExamTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExamTypeName");
                OnExamTypeNameChanged();
            }
        }
        private global::System.String _ExamTypeName;
        partial void OnExamTypeNameChanging(global::System.String value);
        partial void OnExamTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceDetail_ExamType", "InvoiceDetail")]
        public EntityCollection<InvoiceDetail> InvoiceDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceDetail>("MedilabModel.FK_InvoiceDetail_ExamType", "InvoiceDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceDetail>("MedilabModel.FK_InvoiceDetail_ExamType", "InvoiceDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistory_ExamType", "MedicalHistory")]
        public EntityCollection<MedicalHistory> MedicalHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalHistory>("MedilabModel.FK_MedicalHistory_ExamType", "MedicalHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalHistory>("MedilabModel.FK_MedicalHistory_ExamType", "MedicalHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="FiscalRetention")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FiscalRetention : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FiscalRetention object.
        /// </summary>
        /// <param name="fiscalRetentionId">Initial value of the FiscalRetentionId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="lastUpdateUser">Initial value of the LastUpdateUser property.</param>
        /// <param name="cAECode">Initial value of the CAECode property.</param>
        /// <param name="isIVA">Initial value of the IsIVA property.</param>
        public static FiscalRetention CreateFiscalRetention(global::System.Guid fiscalRetentionId, global::System.String name, global::System.String description, global::System.Double value, global::System.Boolean isDeleted, global::System.Byte[] lastUpdated, global::System.Guid lastUpdateUser, global::System.Int32 cAECode, global::System.Boolean isIVA)
        {
            FiscalRetention fiscalRetention = new FiscalRetention();
            fiscalRetention.FiscalRetentionId = fiscalRetentionId;
            fiscalRetention.Name = name;
            fiscalRetention.Description = description;
            fiscalRetention.Value = value;
            fiscalRetention.IsDeleted = isDeleted;
            fiscalRetention.LastUpdated = lastUpdated;
            fiscalRetention.LastUpdateUser = lastUpdateUser;
            fiscalRetention.CAECode = cAECode;
            fiscalRetention.IsIVA = isIVA;
            return fiscalRetention;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FiscalRetentionId
        {
            get
            {
                return _FiscalRetentionId;
            }
            set
            {
                if (_FiscalRetentionId != value)
                {
                    OnFiscalRetentionIdChanging(value);
                    ReportPropertyChanging("FiscalRetentionId");
                    _FiscalRetentionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FiscalRetentionId");
                    OnFiscalRetentionIdChanged();
                }
            }
        }
        private global::System.Guid _FiscalRetentionId;
        partial void OnFiscalRetentionIdChanging(global::System.Guid value);
        partial void OnFiscalRetentionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Double _Value;
        partial void OnValueChanging(global::System.Double value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LastUpdateUser
        {
            get
            {
                return _LastUpdateUser;
            }
            set
            {
                OnLastUpdateUserChanging(value);
                ReportPropertyChanging("LastUpdateUser");
                _LastUpdateUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateUser");
                OnLastUpdateUserChanged();
            }
        }
        private global::System.Guid _LastUpdateUser;
        partial void OnLastUpdateUserChanging(global::System.Guid value);
        partial void OnLastUpdateUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CAECode
        {
            get
            {
                return _CAECode;
            }
            set
            {
                OnCAECodeChanging(value);
                ReportPropertyChanging("CAECode");
                _CAECode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CAECode");
                OnCAECodeChanged();
            }
        }
        private global::System.Int32 _CAECode;
        partial void OnCAECodeChanging(global::System.Int32 value);
        partial void OnCAECodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsIVA
        {
            get
            {
                return _IsIVA;
            }
            set
            {
                OnIsIVAChanging(value);
                ReportPropertyChanging("IsIVA");
                _IsIVA = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsIVA");
                OnIsIVAChanged();
            }
        }
        private global::System.Boolean _IsIVA;
        partial void OnIsIVAChanging(global::System.Boolean value);
        partial void OnIsIVAChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_FiscalRetention_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_FiscalRetention_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_FiscalRetention_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_FiscalRetention_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MedilabModel.FK_FiscalRetention_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceProfileRetention_FiscalRetention", "InvoiceProfileRetention")]
        public EntityCollection<InvoiceProfileRetention> InvoiceProfileRetention
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceProfileRetention>("MedilabModel.FK_InvoiceProfileRetention_FiscalRetention", "InvoiceProfileRetention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceProfileRetention>("MedilabModel.FK_InvoiceProfileRetention_FiscalRetention", "InvoiceProfileRetention", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceRetention_FiscalRetention", "InvoiceRetention")]
        public EntityCollection<InvoiceRetention> InvoiceRetention
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceRetention>("MedilabModel.FK_InvoiceRetention_FiscalRetention", "InvoiceRetention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceRetention>("MedilabModel.FK_InvoiceRetention_FiscalRetention", "InvoiceRetention", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="Gender")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Gender : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Gender object.
        /// </summary>
        /// <param name="genderId">Initial value of the GenderId property.</param>
        /// <param name="genderName">Initial value of the GenderName property.</param>
        public static Gender CreateGender(global::System.Int32 genderId, global::System.String genderName)
        {
            Gender gender = new Gender();
            gender.GenderId = genderId;
            gender.GenderName = genderName;
            return gender;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenderId
        {
            get
            {
                return _GenderId;
            }
            set
            {
                if (_GenderId != value)
                {
                    OnGenderIdChanging(value);
                    ReportPropertyChanging("GenderId");
                    _GenderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GenderId");
                    OnGenderIdChanged();
                }
            }
        }
        private global::System.Int32 _GenderId;
        partial void OnGenderIdChanging(global::System.Int32 value);
        partial void OnGenderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GenderName
        {
            get
            {
                return _GenderName;
            }
            set
            {
                OnGenderNameChanging(value);
                ReportPropertyChanging("GenderName");
                _GenderName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GenderName");
                OnGenderNameChanged();
            }
        }
        private global::System.String _GenderName;
        partial void OnGenderNameChanging(global::System.String value);
        partial void OnGenderNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Patient_Gender", "Patient")]
        public EntityCollection<Patient> Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("MedilabModel.FK_Patient_Gender", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("MedilabModel.FK_Patient_Gender", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="Group")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Group : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Group object.
        /// </summary>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="groupCode">Initial value of the GroupCode property.</param>
        /// <param name="groupName">Initial value of the GroupName property.</param>
        /// <param name="groupDescription">Initial value of the GroupDescription property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static Group CreateGroup(global::System.Guid groupId, global::System.Int32 groupCode, global::System.String groupName, global::System.String groupDescription, global::System.Byte[] lastUpdated, global::System.Boolean isDeleted)
        {
            Group group = new Group();
            group.GroupId = groupId;
            group.GroupCode = groupCode;
            group.GroupName = groupName;
            group.GroupDescription = groupDescription;
            group.LastUpdated = lastUpdated;
            group.IsDeleted = isDeleted;
            return group;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                if (_GroupId != value)
                {
                    OnGroupIdChanging(value);
                    ReportPropertyChanging("GroupId");
                    _GroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupId");
                    OnGroupIdChanged();
                }
            }
        }
        private global::System.Guid _GroupId;
        partial void OnGroupIdChanging(global::System.Guid value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GroupCode
        {
            get
            {
                return _GroupCode;
            }
            set
            {
                OnGroupCodeChanging(value);
                ReportPropertyChanging("GroupCode");
                _GroupCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupCode");
                OnGroupCodeChanged();
            }
        }
        private global::System.Int32 _GroupCode;
        partial void OnGroupCodeChanging(global::System.Int32 value);
        partial void OnGroupCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupDescription
        {
            get
            {
                return _GroupDescription;
            }
            set
            {
                OnGroupDescriptionChanging(value);
                ReportPropertyChanging("GroupDescription");
                _GroupDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupDescription");
                OnGroupDescriptionChanged();
            }
        }
        private global::System.String _GroupDescription;
        partial void OnGroupDescriptionChanging(global::System.String value);
        partial void OnGroupDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_GroupMedicalPractice_Group", "GroupMedicalPractice")]
        public EntityCollection<GroupMedicalPractice> GroupMedicalPractice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupMedicalPractice>("MedilabModel.FK_GroupMedicalPractice_Group", "GroupMedicalPractice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupMedicalPractice>("MedilabModel.FK_GroupMedicalPractice_Group", "GroupMedicalPractice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceDetail_Group", "InvoiceDetail")]
        public EntityCollection<InvoiceDetail> InvoiceDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceDetail>("MedilabModel.FK_InvoiceDetail_Group", "InvoiceDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceDetail>("MedilabModel.FK_InvoiceDetail_Group", "InvoiceDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistoryPractice_Group", "MedicalHistoryPractice")]
        public EntityCollection<MedicalHistoryPractice> MedicalHistoryPractice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalHistoryPractice>("MedilabModel.FK_MedicalHistoryPractice_Group", "MedicalHistoryPractice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalHistoryPractice>("MedilabModel.FK_MedicalHistoryPractice_Group", "MedicalHistoryPractice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="GroupMedicalPractice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GroupMedicalPractice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GroupMedicalPractice object.
        /// </summary>
        /// <param name="groupMedicalPracticeId">Initial value of the GroupMedicalPracticeId property.</param>
        /// <param name="groupId">Initial value of the GroupId property.</param>
        /// <param name="medicalPracticeId">Initial value of the MedicalPracticeId property.</param>
        public static GroupMedicalPractice CreateGroupMedicalPractice(global::System.Guid groupMedicalPracticeId, global::System.Guid groupId, global::System.Guid medicalPracticeId)
        {
            GroupMedicalPractice groupMedicalPractice = new GroupMedicalPractice();
            groupMedicalPractice.GroupMedicalPracticeId = groupMedicalPracticeId;
            groupMedicalPractice.GroupId = groupId;
            groupMedicalPractice.MedicalPracticeId = medicalPracticeId;
            return groupMedicalPractice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupMedicalPracticeId
        {
            get
            {
                return _GroupMedicalPracticeId;
            }
            set
            {
                if (_GroupMedicalPracticeId != value)
                {
                    OnGroupMedicalPracticeIdChanging(value);
                    ReportPropertyChanging("GroupMedicalPracticeId");
                    _GroupMedicalPracticeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupMedicalPracticeId");
                    OnGroupMedicalPracticeIdChanged();
                }
            }
        }
        private global::System.Guid _GroupMedicalPracticeId;
        partial void OnGroupMedicalPracticeIdChanging(global::System.Guid value);
        partial void OnGroupMedicalPracticeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private global::System.Guid _GroupId;
        partial void OnGroupIdChanging(global::System.Guid value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MedicalPracticeId
        {
            get
            {
                return _MedicalPracticeId;
            }
            set
            {
                OnMedicalPracticeIdChanging(value);
                ReportPropertyChanging("MedicalPracticeId");
                _MedicalPracticeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicalPracticeId");
                OnMedicalPracticeIdChanged();
            }
        }
        private global::System.Guid _MedicalPracticeId;
        partial void OnMedicalPracticeIdChanging(global::System.Guid value);
        partial void OnMedicalPracticeIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_GroupMedicalPractice_MedicalPractice", "MedicalPractice")]
        public MedicalPractice MedicalPractice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalPractice>("MedilabModel.FK_GroupMedicalPractice_MedicalPractice", "MedicalPractice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalPractice>("MedilabModel.FK_GroupMedicalPractice_MedicalPractice", "MedicalPractice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalPractice> MedicalPracticeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalPractice>("MedilabModel.FK_GroupMedicalPractice_MedicalPractice", "MedicalPractice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalPractice>("MedilabModel.FK_GroupMedicalPractice_MedicalPractice", "MedicalPractice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_GroupMedicalPractice_Group", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("MedilabModel.FK_GroupMedicalPractice_Group", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("MedilabModel.FK_GroupMedicalPractice_Group", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("MedilabModel.FK_GroupMedicalPractice_Group", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("MedilabModel.FK_GroupMedicalPractice_Group", "Group", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="InstructionLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InstructionLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InstructionLevel object.
        /// </summary>
        /// <param name="instructionLevelId">Initial value of the InstructionLevelId property.</param>
        /// <param name="instructionLevelName">Initial value of the InstructionLevelName property.</param>
        public static InstructionLevel CreateInstructionLevel(global::System.Int32 instructionLevelId, global::System.String instructionLevelName)
        {
            InstructionLevel instructionLevel = new InstructionLevel();
            instructionLevel.InstructionLevelId = instructionLevelId;
            instructionLevel.InstructionLevelName = instructionLevelName;
            return instructionLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstructionLevelId
        {
            get
            {
                return _InstructionLevelId;
            }
            set
            {
                if (_InstructionLevelId != value)
                {
                    OnInstructionLevelIdChanging(value);
                    ReportPropertyChanging("InstructionLevelId");
                    _InstructionLevelId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstructionLevelId");
                    OnInstructionLevelIdChanged();
                }
            }
        }
        private global::System.Int32 _InstructionLevelId;
        partial void OnInstructionLevelIdChanging(global::System.Int32 value);
        partial void OnInstructionLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstructionLevelName
        {
            get
            {
                return _InstructionLevelName;
            }
            set
            {
                OnInstructionLevelNameChanging(value);
                ReportPropertyChanging("InstructionLevelName");
                _InstructionLevelName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InstructionLevelName");
                OnInstructionLevelNameChanged();
            }
        }
        private global::System.String _InstructionLevelName;
        partial void OnInstructionLevelNameChanging(global::System.String value);
        partial void OnInstructionLevelNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Patient_InstructionLevel", "Patient")]
        public EntityCollection<Patient> Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("MedilabModel.FK_Patient_InstructionLevel", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("MedilabModel.FK_Patient_InstructionLevel", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="InvoiceDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvoiceDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvoiceDetail object.
        /// </summary>
        /// <param name="invoiceDetailId">Initial value of the InvoiceDetailId property.</param>
        /// <param name="invoiceHeaderId">Initial value of the InvoiceHeaderId property.</param>
        /// <param name="itemId">Initial value of the ItemId property.</param>
        /// <param name="itemCode">Initial value of the ItemCode property.</param>
        /// <param name="itemDescription">Initial value of the ItemDescription property.</param>
        /// <param name="itemQuantity">Initial value of the ItemQuantity property.</param>
        /// <param name="itemPrice">Initial value of the ItemPrice property.</param>
        /// <param name="itemCreationDate">Initial value of the ItemCreationDate property.</param>
        public static InvoiceDetail CreateInvoiceDetail(global::System.Guid invoiceDetailId, global::System.Guid invoiceHeaderId, global::System.Guid itemId, global::System.Int32 itemCode, global::System.String itemDescription, global::System.Int32 itemQuantity, global::System.Double itemPrice, global::System.DateTime itemCreationDate)
        {
            InvoiceDetail invoiceDetail = new InvoiceDetail();
            invoiceDetail.InvoiceDetailId = invoiceDetailId;
            invoiceDetail.InvoiceHeaderId = invoiceHeaderId;
            invoiceDetail.ItemId = itemId;
            invoiceDetail.ItemCode = itemCode;
            invoiceDetail.ItemDescription = itemDescription;
            invoiceDetail.ItemQuantity = itemQuantity;
            invoiceDetail.ItemPrice = itemPrice;
            invoiceDetail.ItemCreationDate = itemCreationDate;
            return invoiceDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InvoiceDetailId
        {
            get
            {
                return _InvoiceDetailId;
            }
            set
            {
                if (_InvoiceDetailId != value)
                {
                    OnInvoiceDetailIdChanging(value);
                    ReportPropertyChanging("InvoiceDetailId");
                    _InvoiceDetailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvoiceDetailId");
                    OnInvoiceDetailIdChanged();
                }
            }
        }
        private global::System.Guid _InvoiceDetailId;
        partial void OnInvoiceDetailIdChanging(global::System.Guid value);
        partial void OnInvoiceDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InvoiceHeaderId
        {
            get
            {
                return _InvoiceHeaderId;
            }
            set
            {
                OnInvoiceHeaderIdChanging(value);
                ReportPropertyChanging("InvoiceHeaderId");
                _InvoiceHeaderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceHeaderId");
                OnInvoiceHeaderIdChanged();
            }
        }
        private global::System.Guid _InvoiceHeaderId;
        partial void OnInvoiceHeaderIdChanging(global::System.Guid value);
        partial void OnInvoiceHeaderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemId
        {
            get
            {
                return _ItemId;
            }
            set
            {
                OnItemIdChanging(value);
                ReportPropertyChanging("ItemId");
                _ItemId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemId");
                OnItemIdChanged();
            }
        }
        private global::System.Guid _ItemId;
        partial void OnItemIdChanging(global::System.Guid value);
        partial void OnItemIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemCode
        {
            get
            {
                return _ItemCode;
            }
            set
            {
                OnItemCodeChanging(value);
                ReportPropertyChanging("ItemCode");
                _ItemCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemCode");
                OnItemCodeChanged();
            }
        }
        private global::System.Int32 _ItemCode;
        partial void OnItemCodeChanging(global::System.Int32 value);
        partial void OnItemCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemDescription
        {
            get
            {
                return _ItemDescription;
            }
            set
            {
                OnItemDescriptionChanging(value);
                ReportPropertyChanging("ItemDescription");
                _ItemDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemDescription");
                OnItemDescriptionChanged();
            }
        }
        private global::System.String _ItemDescription;
        partial void OnItemDescriptionChanging(global::System.String value);
        partial void OnItemDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ItemQuantity
        {
            get
            {
                return _ItemQuantity;
            }
            set
            {
                OnItemQuantityChanging(value);
                ReportPropertyChanging("ItemQuantity");
                _ItemQuantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemQuantity");
                OnItemQuantityChanged();
            }
        }
        private global::System.Int32 _ItemQuantity;
        partial void OnItemQuantityChanging(global::System.Int32 value);
        partial void OnItemQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ItemPrice
        {
            get
            {
                return _ItemPrice;
            }
            set
            {
                OnItemPriceChanging(value);
                ReportPropertyChanging("ItemPrice");
                _ItemPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemPrice");
                OnItemPriceChanged();
            }
        }
        private global::System.Double _ItemPrice;
        partial void OnItemPriceChanging(global::System.Double value);
        partial void OnItemPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemObservation
        {
            get
            {
                return _ItemObservation;
            }
            set
            {
                OnItemObservationChanging(value);
                ReportPropertyChanging("ItemObservation");
                _ItemObservation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemObservation");
                OnItemObservationChanged();
            }
        }
        private global::System.String _ItemObservation;
        partial void OnItemObservationChanging(global::System.String value);
        partial void OnItemObservationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ItemGroupId
        {
            get
            {
                return _ItemGroupId;
            }
            set
            {
                OnItemGroupIdChanging(value);
                ReportPropertyChanging("ItemGroupId");
                _ItemGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemGroupId");
                OnItemGroupIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ItemGroupId;
        partial void OnItemGroupIdChanging(Nullable<global::System.Guid> value);
        partial void OnItemGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                OnPatientIdChanging(value);
                ReportPropertyChanging("PatientId");
                _PatientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientId");
                OnPatientIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PatientId;
        partial void OnPatientIdChanging(Nullable<global::System.Guid> value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExamTypeId
        {
            get
            {
                return _ExamTypeId;
            }
            set
            {
                OnExamTypeIdChanging(value);
                ReportPropertyChanging("ExamTypeId");
                _ExamTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExamTypeId");
                OnExamTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ExamTypeId;
        partial void OnExamTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnExamTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ItemCreationDate
        {
            get
            {
                return _ItemCreationDate;
            }
            set
            {
                OnItemCreationDateChanging(value);
                ReportPropertyChanging("ItemCreationDate");
                _ItemCreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemCreationDate");
                OnItemCreationDateChanged();
            }
        }
        private global::System.DateTime _ItemCreationDate;
        partial void OnItemCreationDateChanging(global::System.DateTime value);
        partial void OnItemCreationDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceDetail_ExamType", "ExamType")]
        public ExamType ExamType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExamType>("MedilabModel.FK_InvoiceDetail_ExamType", "ExamType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExamType>("MedilabModel.FK_InvoiceDetail_ExamType", "ExamType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExamType> ExamTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExamType>("MedilabModel.FK_InvoiceDetail_ExamType", "ExamType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExamType>("MedilabModel.FK_InvoiceDetail_ExamType", "ExamType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceDetail_Group", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("MedilabModel.FK_InvoiceDetail_Group", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("MedilabModel.FK_InvoiceDetail_Group", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("MedilabModel.FK_InvoiceDetail_Group", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("MedilabModel.FK_InvoiceDetail_Group", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceDetail_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("MedilabModel.FK_InvoiceDetail_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("MedilabModel.FK_InvoiceDetail_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("MedilabModel.FK_InvoiceDetail_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("MedilabModel.FK_InvoiceDetail_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceDetail_InvoiceHeader", "InvoiceHeader")]
        public InvoiceHeader InvoiceHeader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceHeader>("MedilabModel.FK_InvoiceDetail_InvoiceHeader", "InvoiceHeader").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceHeader>("MedilabModel.FK_InvoiceDetail_InvoiceHeader", "InvoiceHeader").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceHeader> InvoiceHeaderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceHeader>("MedilabModel.FK_InvoiceDetail_InvoiceHeader", "InvoiceHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvoiceHeader>("MedilabModel.FK_InvoiceDetail_InvoiceHeader", "InvoiceHeader", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="InvoiceHeader")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvoiceHeader : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvoiceHeader object.
        /// </summary>
        /// <param name="invoiceHeaderId">Initial value of the InvoiceHeaderId property.</param>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="invoiceType">Initial value of the InvoiceType property.</param>
        /// <param name="companyInfoId">Initial value of the CompanyInfoId property.</param>
        /// <param name="salePoint">Initial value of the SalePoint property.</param>
        /// <param name="invoiceNumber">Initial value of the InvoiceNumber property.</param>
        /// <param name="total">Initial value of the Total property.</param>
        /// <param name="ivaPercentage">Initial value of the IvaPercentage property.</param>
        /// <param name="ivaPerception">Initial value of the IvaPerception property.</param>
        /// <param name="otherPerception">Initial value of the OtherPerception property.</param>
        /// <param name="dgrPerception">Initial value of the DgrPerception property.</param>
        /// <param name="noTaxedConcept">Initial value of the NoTaxedConcept property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="subTotal">Initial value of the SubTotal property.</param>
        /// <param name="cAEExpirationDate">Initial value of the CAEExpirationDate property.</param>
        /// <param name="createUserId">Initial value of the CreateUserId property.</param>
        /// <param name="lastUpdateUserId">Initial value of the LastUpdateUserId property.</param>
        /// <param name="invoiceRemainder">Initial value of the InvoiceRemainder property.</param>
        public static InvoiceHeader CreateInvoiceHeader(global::System.Guid invoiceHeaderId, global::System.Guid clientId, global::System.DateTime date, global::System.Int32 invoiceType, global::System.Guid companyInfoId, global::System.Int32 salePoint, global::System.Int32 invoiceNumber, global::System.Double total, global::System.Double ivaPercentage, global::System.Double ivaPerception, global::System.Double otherPerception, global::System.Double dgrPerception, global::System.Double noTaxedConcept, global::System.Int32 status, global::System.Double subTotal, global::System.DateTime cAEExpirationDate, global::System.Guid createUserId, global::System.Guid lastUpdateUserId, global::System.Double invoiceRemainder)
        {
            InvoiceHeader invoiceHeader = new InvoiceHeader();
            invoiceHeader.InvoiceHeaderId = invoiceHeaderId;
            invoiceHeader.ClientId = clientId;
            invoiceHeader.Date = date;
            invoiceHeader.InvoiceType = invoiceType;
            invoiceHeader.CompanyInfoId = companyInfoId;
            invoiceHeader.SalePoint = salePoint;
            invoiceHeader.InvoiceNumber = invoiceNumber;
            invoiceHeader.Total = total;
            invoiceHeader.IvaPercentage = ivaPercentage;
            invoiceHeader.IvaPerception = ivaPerception;
            invoiceHeader.OtherPerception = otherPerception;
            invoiceHeader.DgrPerception = dgrPerception;
            invoiceHeader.NoTaxedConcept = noTaxedConcept;
            invoiceHeader.Status = status;
            invoiceHeader.SubTotal = subTotal;
            invoiceHeader.CAEExpirationDate = cAEExpirationDate;
            invoiceHeader.CreateUserId = createUserId;
            invoiceHeader.LastUpdateUserId = lastUpdateUserId;
            invoiceHeader.InvoiceRemainder = invoiceRemainder;
            return invoiceHeader;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InvoiceHeaderId
        {
            get
            {
                return _InvoiceHeaderId;
            }
            set
            {
                if (_InvoiceHeaderId != value)
                {
                    OnInvoiceHeaderIdChanging(value);
                    ReportPropertyChanging("InvoiceHeaderId");
                    _InvoiceHeaderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvoiceHeaderId");
                    OnInvoiceHeaderIdChanged();
                }
            }
        }
        private global::System.Guid _InvoiceHeaderId;
        partial void OnInvoiceHeaderIdChanging(global::System.Guid value);
        partial void OnInvoiceHeaderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private global::System.Guid _ClientId;
        partial void OnClientIdChanging(global::System.Guid value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceType
        {
            get
            {
                return _InvoiceType;
            }
            set
            {
                OnInvoiceTypeChanging(value);
                ReportPropertyChanging("InvoiceType");
                _InvoiceType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceType");
                OnInvoiceTypeChanged();
            }
        }
        private global::System.Int32 _InvoiceType;
        partial void OnInvoiceTypeChanging(global::System.Int32 value);
        partial void OnInvoiceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CompanyInfoId
        {
            get
            {
                return _CompanyInfoId;
            }
            set
            {
                OnCompanyInfoIdChanging(value);
                ReportPropertyChanging("CompanyInfoId");
                _CompanyInfoId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyInfoId");
                OnCompanyInfoIdChanged();
            }
        }
        private global::System.Guid _CompanyInfoId;
        partial void OnCompanyInfoIdChanging(global::System.Guid value);
        partial void OnCompanyInfoIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SalePoint
        {
            get
            {
                return _SalePoint;
            }
            set
            {
                OnSalePointChanging(value);
                ReportPropertyChanging("SalePoint");
                _SalePoint = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SalePoint");
                OnSalePointChanged();
            }
        }
        private global::System.Int32 _SalePoint;
        partial void OnSalePointChanging(global::System.Int32 value);
        partial void OnSalePointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceNumber
        {
            get
            {
                return _InvoiceNumber;
            }
            set
            {
                OnInvoiceNumberChanging(value);
                ReportPropertyChanging("InvoiceNumber");
                _InvoiceNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceNumber");
                OnInvoiceNumberChanged();
            }
        }
        private global::System.Int32 _InvoiceNumber;
        partial void OnInvoiceNumberChanging(global::System.Int32 value);
        partial void OnInvoiceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private global::System.Double _Total;
        partial void OnTotalChanging(global::System.Double value);
        partial void OnTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double IvaPercentage
        {
            get
            {
                return _IvaPercentage;
            }
            set
            {
                OnIvaPercentageChanging(value);
                ReportPropertyChanging("IvaPercentage");
                _IvaPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IvaPercentage");
                OnIvaPercentageChanged();
            }
        }
        private global::System.Double _IvaPercentage;
        partial void OnIvaPercentageChanging(global::System.Double value);
        partial void OnIvaPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double IvaPerception
        {
            get
            {
                return _IvaPerception;
            }
            set
            {
                OnIvaPerceptionChanging(value);
                ReportPropertyChanging("IvaPerception");
                _IvaPerception = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IvaPerception");
                OnIvaPerceptionChanged();
            }
        }
        private global::System.Double _IvaPerception;
        partial void OnIvaPerceptionChanging(global::System.Double value);
        partial void OnIvaPerceptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double OtherPerception
        {
            get
            {
                return _OtherPerception;
            }
            set
            {
                OnOtherPerceptionChanging(value);
                ReportPropertyChanging("OtherPerception");
                _OtherPerception = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OtherPerception");
                OnOtherPerceptionChanged();
            }
        }
        private global::System.Double _OtherPerception;
        partial void OnOtherPerceptionChanging(global::System.Double value);
        partial void OnOtherPerceptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double DgrPerception
        {
            get
            {
                return _DgrPerception;
            }
            set
            {
                OnDgrPerceptionChanging(value);
                ReportPropertyChanging("DgrPerception");
                _DgrPerception = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DgrPerception");
                OnDgrPerceptionChanged();
            }
        }
        private global::System.Double _DgrPerception;
        partial void OnDgrPerceptionChanging(global::System.Double value);
        partial void OnDgrPerceptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double NoTaxedConcept
        {
            get
            {
                return _NoTaxedConcept;
            }
            set
            {
                OnNoTaxedConceptChanging(value);
                ReportPropertyChanging("NoTaxedConcept");
                _NoTaxedConcept = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoTaxedConcept");
                OnNoTaxedConceptChanged();
            }
        }
        private global::System.Double _NoTaxedConcept;
        partial void OnNoTaxedConceptChanging(global::System.Double value);
        partial void OnNoTaxedConceptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvoiceObservation
        {
            get
            {
                return _InvoiceObservation;
            }
            set
            {
                OnInvoiceObservationChanging(value);
                ReportPropertyChanging("InvoiceObservation");
                _InvoiceObservation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InvoiceObservation");
                OnInvoiceObservationChanged();
            }
        }
        private global::System.String _InvoiceObservation;
        partial void OnInvoiceObservationChanging(global::System.String value);
        partial void OnInvoiceObservationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ManualDetailText
        {
            get
            {
                return _ManualDetailText;
            }
            set
            {
                OnManualDetailTextChanging(value);
                ReportPropertyChanging("ManualDetailText");
                _ManualDetailText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ManualDetailText");
                OnManualDetailTextChanged();
            }
        }
        private global::System.String _ManualDetailText;
        partial void OnManualDetailTextChanging(global::System.String value);
        partial void OnManualDetailTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double SubTotal
        {
            get
            {
                return _SubTotal;
            }
            set
            {
                OnSubTotalChanging(value);
                ReportPropertyChanging("SubTotal");
                _SubTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubTotal");
                OnSubTotalChanged();
            }
        }
        private global::System.Double _SubTotal;
        partial void OnSubTotalChanging(global::System.Double value);
        partial void OnSubTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CAE
        {
            get
            {
                return _CAE;
            }
            set
            {
                OnCAEChanging(value);
                ReportPropertyChanging("CAE");
                _CAE = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CAE");
                OnCAEChanged();
            }
        }
        private global::System.String _CAE;
        partial void OnCAEChanging(global::System.String value);
        partial void OnCAEChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CAEExpirationDate
        {
            get
            {
                return _CAEExpirationDate;
            }
            set
            {
                OnCAEExpirationDateChanging(value);
                ReportPropertyChanging("CAEExpirationDate");
                _CAEExpirationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CAEExpirationDate");
                OnCAEExpirationDateChanged();
            }
        }
        private global::System.DateTime _CAEExpirationDate;
        partial void OnCAEExpirationDateChanging(global::System.DateTime value);
        partial void OnCAEExpirationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CreateUserId
        {
            get
            {
                return _CreateUserId;
            }
            set
            {
                OnCreateUserIdChanging(value);
                ReportPropertyChanging("CreateUserId");
                _CreateUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateUserId");
                OnCreateUserIdChanged();
            }
        }
        private global::System.Guid _CreateUserId;
        partial void OnCreateUserIdChanging(global::System.Guid value);
        partial void OnCreateUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LastUpdateUserId
        {
            get
            {
                return _LastUpdateUserId;
            }
            set
            {
                OnLastUpdateUserIdChanging(value);
                ReportPropertyChanging("LastUpdateUserId");
                _LastUpdateUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateUserId");
                OnLastUpdateUserIdChanged();
            }
        }
        private global::System.Guid _LastUpdateUserId;
        partial void OnLastUpdateUserIdChanging(global::System.Guid value);
        partial void OnLastUpdateUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double InvoiceRemainder
        {
            get
            {
                return _InvoiceRemainder;
            }
            set
            {
                OnInvoiceRemainderChanging(value);
                ReportPropertyChanging("InvoiceRemainder");
                _InvoiceRemainder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceRemainder");
                OnInvoiceRemainderChanged();
            }
        }
        private global::System.Double _InvoiceRemainder;
        partial void OnInvoiceRemainderChanging(global::System.Double value);
        partial void OnInvoiceRemainderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceHeader_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_InvoiceHeader_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_InvoiceHeader_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_InvoiceHeader_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("MedilabModel.FK_InvoiceHeader_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceHeader_CompanyInfo", "CompanyInfo")]
        public CompanyInfo CompanyInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyInfo>("MedilabModel.FK_InvoiceHeader_CompanyInfo", "CompanyInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyInfo>("MedilabModel.FK_InvoiceHeader_CompanyInfo", "CompanyInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompanyInfo> CompanyInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompanyInfo>("MedilabModel.FK_InvoiceHeader_CompanyInfo", "CompanyInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompanyInfo>("MedilabModel.FK_InvoiceHeader_CompanyInfo", "CompanyInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceDetail_InvoiceHeader", "InvoiceDetail")]
        public EntityCollection<InvoiceDetail> InvoiceDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceDetail>("MedilabModel.FK_InvoiceDetail_InvoiceHeader", "InvoiceDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceDetail>("MedilabModel.FK_InvoiceDetail_InvoiceHeader", "InvoiceDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceHeader_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_InvoiceHeader_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_InvoiceHeader_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_InvoiceHeader_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MedilabModel.FK_InvoiceHeader_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceHeader_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_InvoiceHeader_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_InvoiceHeader_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_InvoiceHeader_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MedilabModel.FK_InvoiceHeader_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceRetention_InvoiceHeader", "InvoiceRetention")]
        public EntityCollection<InvoiceRetention> InvoiceRetention
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceRetention>("MedilabModel.FK_InvoiceRetention_InvoiceHeader", "InvoiceRetention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceRetention>("MedilabModel.FK_InvoiceRetention_InvoiceHeader", "InvoiceRetention", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_CreditNote_InvoiceHeader", "CreditNote")]
        public EntityCollection<CreditNote> CreditNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CreditNote>("MedilabModel.FK_CreditNote_InvoiceHeader", "CreditNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CreditNote>("MedilabModel.FK_CreditNote_InvoiceHeader", "CreditNote", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="InvoiceProfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvoiceProfile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvoiceProfile object.
        /// </summary>
        /// <param name="invoiceProfileId">Initial value of the InvoiceProfileId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="lastUpdateUser">Initial value of the LastUpdateUser property.</param>
        /// <param name="isDefault">Initial value of the IsDefault property.</param>
        public static InvoiceProfile CreateInvoiceProfile(global::System.Guid invoiceProfileId, global::System.String name, global::System.String description, global::System.Boolean isDeleted, global::System.Byte[] lastUpdated, global::System.Guid lastUpdateUser, global::System.Boolean isDefault)
        {
            InvoiceProfile invoiceProfile = new InvoiceProfile();
            invoiceProfile.InvoiceProfileId = invoiceProfileId;
            invoiceProfile.Name = name;
            invoiceProfile.Description = description;
            invoiceProfile.IsDeleted = isDeleted;
            invoiceProfile.LastUpdated = lastUpdated;
            invoiceProfile.LastUpdateUser = lastUpdateUser;
            invoiceProfile.IsDefault = isDefault;
            return invoiceProfile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InvoiceProfileId
        {
            get
            {
                return _InvoiceProfileId;
            }
            set
            {
                if (_InvoiceProfileId != value)
                {
                    OnInvoiceProfileIdChanging(value);
                    ReportPropertyChanging("InvoiceProfileId");
                    _InvoiceProfileId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvoiceProfileId");
                    OnInvoiceProfileIdChanged();
                }
            }
        }
        private global::System.Guid _InvoiceProfileId;
        partial void OnInvoiceProfileIdChanging(global::System.Guid value);
        partial void OnInvoiceProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LastUpdateUser
        {
            get
            {
                return _LastUpdateUser;
            }
            set
            {
                OnLastUpdateUserChanging(value);
                ReportPropertyChanging("LastUpdateUser");
                _LastUpdateUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateUser");
                OnLastUpdateUserChanged();
            }
        }
        private global::System.Guid _LastUpdateUser;
        partial void OnLastUpdateUserChanging(global::System.Guid value);
        partial void OnLastUpdateUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private global::System.Boolean _IsDefault;
        partial void OnIsDefaultChanging(global::System.Boolean value);
        partial void OnIsDefaultChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Client_InvoiceProfile", "Client")]
        public EntityCollection<Client> Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client>("MedilabModel.FK_Client_InvoiceProfile", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client>("MedilabModel.FK_Client_InvoiceProfile", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceProfile_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_InvoiceProfile_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_InvoiceProfile_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_InvoiceProfile_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MedilabModel.FK_InvoiceProfile_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceProfileRetention_InvoiceProfile", "InvoiceProfileRetention")]
        public EntityCollection<InvoiceProfileRetention> InvoiceProfileRetention
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceProfileRetention>("MedilabModel.FK_InvoiceProfileRetention_InvoiceProfile", "InvoiceProfileRetention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceProfileRetention>("MedilabModel.FK_InvoiceProfileRetention_InvoiceProfile", "InvoiceProfileRetention", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="InvoiceProfileRetention")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvoiceProfileRetention : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvoiceProfileRetention object.
        /// </summary>
        /// <param name="invoiceProfileRetentionId">Initial value of the InvoiceProfileRetentionId property.</param>
        /// <param name="invoiceProfileId">Initial value of the InvoiceProfileId property.</param>
        /// <param name="fiscalRetentionId">Initial value of the FiscalRetentionId property.</param>
        public static InvoiceProfileRetention CreateInvoiceProfileRetention(global::System.Guid invoiceProfileRetentionId, global::System.Guid invoiceProfileId, global::System.Guid fiscalRetentionId)
        {
            InvoiceProfileRetention invoiceProfileRetention = new InvoiceProfileRetention();
            invoiceProfileRetention.InvoiceProfileRetentionId = invoiceProfileRetentionId;
            invoiceProfileRetention.InvoiceProfileId = invoiceProfileId;
            invoiceProfileRetention.FiscalRetentionId = fiscalRetentionId;
            return invoiceProfileRetention;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InvoiceProfileRetentionId
        {
            get
            {
                return _InvoiceProfileRetentionId;
            }
            set
            {
                if (_InvoiceProfileRetentionId != value)
                {
                    OnInvoiceProfileRetentionIdChanging(value);
                    ReportPropertyChanging("InvoiceProfileRetentionId");
                    _InvoiceProfileRetentionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvoiceProfileRetentionId");
                    OnInvoiceProfileRetentionIdChanged();
                }
            }
        }
        private global::System.Guid _InvoiceProfileRetentionId;
        partial void OnInvoiceProfileRetentionIdChanging(global::System.Guid value);
        partial void OnInvoiceProfileRetentionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InvoiceProfileId
        {
            get
            {
                return _InvoiceProfileId;
            }
            set
            {
                OnInvoiceProfileIdChanging(value);
                ReportPropertyChanging("InvoiceProfileId");
                _InvoiceProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceProfileId");
                OnInvoiceProfileIdChanged();
            }
        }
        private global::System.Guid _InvoiceProfileId;
        partial void OnInvoiceProfileIdChanging(global::System.Guid value);
        partial void OnInvoiceProfileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FiscalRetentionId
        {
            get
            {
                return _FiscalRetentionId;
            }
            set
            {
                OnFiscalRetentionIdChanging(value);
                ReportPropertyChanging("FiscalRetentionId");
                _FiscalRetentionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiscalRetentionId");
                OnFiscalRetentionIdChanged();
            }
        }
        private global::System.Guid _FiscalRetentionId;
        partial void OnFiscalRetentionIdChanging(global::System.Guid value);
        partial void OnFiscalRetentionIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceProfileRetention_InvoiceProfile", "InvoiceProfile")]
        public InvoiceProfile InvoiceProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceProfile>("MedilabModel.FK_InvoiceProfileRetention_InvoiceProfile", "InvoiceProfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceProfile>("MedilabModel.FK_InvoiceProfileRetention_InvoiceProfile", "InvoiceProfile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceProfile> InvoiceProfileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceProfile>("MedilabModel.FK_InvoiceProfileRetention_InvoiceProfile", "InvoiceProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvoiceProfile>("MedilabModel.FK_InvoiceProfileRetention_InvoiceProfile", "InvoiceProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceProfileRetention_FiscalRetention", "FiscalRetention")]
        public FiscalRetention FiscalRetention
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FiscalRetention>("MedilabModel.FK_InvoiceProfileRetention_FiscalRetention", "FiscalRetention").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FiscalRetention>("MedilabModel.FK_InvoiceProfileRetention_FiscalRetention", "FiscalRetention").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FiscalRetention> FiscalRetentionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FiscalRetention>("MedilabModel.FK_InvoiceProfileRetention_FiscalRetention", "FiscalRetention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FiscalRetention>("MedilabModel.FK_InvoiceProfileRetention_FiscalRetention", "FiscalRetention", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="InvoiceRetention")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvoiceRetention : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvoiceRetention object.
        /// </summary>
        /// <param name="invoiceRetentionId">Initial value of the InvoiceRetentionId property.</param>
        /// <param name="invoiceHeaderId">Initial value of the InvoiceHeaderId property.</param>
        /// <param name="fiscalRetentionId">Initial value of the FiscalRetentionId property.</param>
        /// <param name="fiscalRetentionName">Initial value of the FiscalRetentionName property.</param>
        /// <param name="fiscalRetentionValue">Initial value of the FiscalRetentionValue property.</param>
        public static InvoiceRetention CreateInvoiceRetention(global::System.Guid invoiceRetentionId, global::System.Guid invoiceHeaderId, global::System.Guid fiscalRetentionId, global::System.String fiscalRetentionName, global::System.Double fiscalRetentionValue)
        {
            InvoiceRetention invoiceRetention = new InvoiceRetention();
            invoiceRetention.InvoiceRetentionId = invoiceRetentionId;
            invoiceRetention.InvoiceHeaderId = invoiceHeaderId;
            invoiceRetention.FiscalRetentionId = fiscalRetentionId;
            invoiceRetention.FiscalRetentionName = fiscalRetentionName;
            invoiceRetention.FiscalRetentionValue = fiscalRetentionValue;
            return invoiceRetention;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InvoiceRetentionId
        {
            get
            {
                return _InvoiceRetentionId;
            }
            set
            {
                if (_InvoiceRetentionId != value)
                {
                    OnInvoiceRetentionIdChanging(value);
                    ReportPropertyChanging("InvoiceRetentionId");
                    _InvoiceRetentionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvoiceRetentionId");
                    OnInvoiceRetentionIdChanged();
                }
            }
        }
        private global::System.Guid _InvoiceRetentionId;
        partial void OnInvoiceRetentionIdChanging(global::System.Guid value);
        partial void OnInvoiceRetentionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InvoiceHeaderId
        {
            get
            {
                return _InvoiceHeaderId;
            }
            set
            {
                OnInvoiceHeaderIdChanging(value);
                ReportPropertyChanging("InvoiceHeaderId");
                _InvoiceHeaderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceHeaderId");
                OnInvoiceHeaderIdChanged();
            }
        }
        private global::System.Guid _InvoiceHeaderId;
        partial void OnInvoiceHeaderIdChanging(global::System.Guid value);
        partial void OnInvoiceHeaderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FiscalRetentionId
        {
            get
            {
                return _FiscalRetentionId;
            }
            set
            {
                OnFiscalRetentionIdChanging(value);
                ReportPropertyChanging("FiscalRetentionId");
                _FiscalRetentionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiscalRetentionId");
                OnFiscalRetentionIdChanged();
            }
        }
        private global::System.Guid _FiscalRetentionId;
        partial void OnFiscalRetentionIdChanging(global::System.Guid value);
        partial void OnFiscalRetentionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FiscalRetentionName
        {
            get
            {
                return _FiscalRetentionName;
            }
            set
            {
                OnFiscalRetentionNameChanging(value);
                ReportPropertyChanging("FiscalRetentionName");
                _FiscalRetentionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FiscalRetentionName");
                OnFiscalRetentionNameChanged();
            }
        }
        private global::System.String _FiscalRetentionName;
        partial void OnFiscalRetentionNameChanging(global::System.String value);
        partial void OnFiscalRetentionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double FiscalRetentionValue
        {
            get
            {
                return _FiscalRetentionValue;
            }
            set
            {
                OnFiscalRetentionValueChanging(value);
                ReportPropertyChanging("FiscalRetentionValue");
                _FiscalRetentionValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiscalRetentionValue");
                OnFiscalRetentionValueChanged();
            }
        }
        private global::System.Double _FiscalRetentionValue;
        partial void OnFiscalRetentionValueChanging(global::System.Double value);
        partial void OnFiscalRetentionValueChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceRetention_FiscalRetention", "FiscalRetention")]
        public FiscalRetention FiscalRetention
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FiscalRetention>("MedilabModel.FK_InvoiceRetention_FiscalRetention", "FiscalRetention").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FiscalRetention>("MedilabModel.FK_InvoiceRetention_FiscalRetention", "FiscalRetention").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FiscalRetention> FiscalRetentionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FiscalRetention>("MedilabModel.FK_InvoiceRetention_FiscalRetention", "FiscalRetention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FiscalRetention>("MedilabModel.FK_InvoiceRetention_FiscalRetention", "FiscalRetention", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceRetention_InvoiceHeader", "InvoiceHeader")]
        public InvoiceHeader InvoiceHeader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceHeader>("MedilabModel.FK_InvoiceRetention_InvoiceHeader", "InvoiceHeader").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceHeader>("MedilabModel.FK_InvoiceRetention_InvoiceHeader", "InvoiceHeader").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvoiceHeader> InvoiceHeaderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvoiceHeader>("MedilabModel.FK_InvoiceRetention_InvoiceHeader", "InvoiceHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvoiceHeader>("MedilabModel.FK_InvoiceRetention_InvoiceHeader", "InvoiceHeader", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="IvaCondition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IvaCondition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IvaCondition object.
        /// </summary>
        /// <param name="ivaConditionId">Initial value of the IvaConditionId property.</param>
        /// <param name="ivaConditionDescription">Initial value of the IvaConditionDescription property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static IvaCondition CreateIvaCondition(global::System.Int32 ivaConditionId, global::System.String ivaConditionDescription, global::System.Boolean isDeleted)
        {
            IvaCondition ivaCondition = new IvaCondition();
            ivaCondition.IvaConditionId = ivaConditionId;
            ivaCondition.IvaConditionDescription = ivaConditionDescription;
            ivaCondition.IsDeleted = isDeleted;
            return ivaCondition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IvaConditionId
        {
            get
            {
                return _IvaConditionId;
            }
            set
            {
                if (_IvaConditionId != value)
                {
                    OnIvaConditionIdChanging(value);
                    ReportPropertyChanging("IvaConditionId");
                    _IvaConditionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IvaConditionId");
                    OnIvaConditionIdChanged();
                }
            }
        }
        private global::System.Int32 _IvaConditionId;
        partial void OnIvaConditionIdChanging(global::System.Int32 value);
        partial void OnIvaConditionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IvaConditionDescription
        {
            get
            {
                return _IvaConditionDescription;
            }
            set
            {
                OnIvaConditionDescriptionChanging(value);
                ReportPropertyChanging("IvaConditionDescription");
                _IvaConditionDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IvaConditionDescription");
                OnIvaConditionDescriptionChanged();
            }
        }
        private global::System.String _IvaConditionDescription;
        partial void OnIvaConditionDescriptionChanging(global::System.String value);
        partial void OnIvaConditionDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Client_IvaCondition", "Client")]
        public EntityCollection<Client> Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Client>("MedilabModel.FK_Client_IvaCondition", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Client>("MedilabModel.FK_Client_IvaCondition", "Client", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="MedicalHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalHistory object.
        /// </summary>
        /// <param name="medicalHistoryId">Initial value of the MedicalHistoryId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="patiendId">Initial value of the PatiendId property.</param>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        /// <param name="examTypeId">Initial value of the ExamTypeId property.</param>
        /// <param name="tasksToDo">Initial value of the TasksToDo property.</param>
        /// <param name="workArea">Initial value of the WorkArea property.</param>
        /// <param name="observations">Initial value of the Observations property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="isHighPriority">Initial value of the IsHighPriority property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="resultId">Initial value of the ResultId property.</param>
        /// <param name="lastUpdateUserId">Initial value of the LastUpdateUserId property.</param>
        /// <param name="lastUpdatedDate">Initial value of the LastUpdatedDate property.</param>
        /// <param name="resultObservations">Initial value of the ResultObservations property.</param>
        /// <param name="dailyPatientNumber">Initial value of the DailyPatientNumber property.</param>
        public static MedicalHistory CreateMedicalHistory(global::System.Guid medicalHistoryId, global::System.DateTime createdDate, global::System.Guid patiendId, global::System.Guid clientId, global::System.Int32 examTypeId, global::System.String tasksToDo, global::System.String workArea, global::System.String observations, global::System.Int32 status, global::System.Boolean isHighPriority, global::System.Byte[] lastUpdated, global::System.Int32 resultId, global::System.Guid lastUpdateUserId, global::System.DateTime lastUpdatedDate, global::System.String resultObservations, global::System.Int32 dailyPatientNumber)
        {
            MedicalHistory medicalHistory = new MedicalHistory();
            medicalHistory.MedicalHistoryId = medicalHistoryId;
            medicalHistory.CreatedDate = createdDate;
            medicalHistory.PatiendId = patiendId;
            medicalHistory.ClientId = clientId;
            medicalHistory.ExamTypeId = examTypeId;
            medicalHistory.TasksToDo = tasksToDo;
            medicalHistory.WorkArea = workArea;
            medicalHistory.Observations = observations;
            medicalHistory.Status = status;
            medicalHistory.IsHighPriority = isHighPriority;
            medicalHistory.LastUpdated = lastUpdated;
            medicalHistory.ResultId = resultId;
            medicalHistory.LastUpdateUserId = lastUpdateUserId;
            medicalHistory.LastUpdatedDate = lastUpdatedDate;
            medicalHistory.ResultObservations = resultObservations;
            medicalHistory.DailyPatientNumber = dailyPatientNumber;
            return medicalHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MedicalHistoryId
        {
            get
            {
                return _MedicalHistoryId;
            }
            set
            {
                if (_MedicalHistoryId != value)
                {
                    OnMedicalHistoryIdChanging(value);
                    ReportPropertyChanging("MedicalHistoryId");
                    _MedicalHistoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedicalHistoryId");
                    OnMedicalHistoryIdChanged();
                }
            }
        }
        private global::System.Guid _MedicalHistoryId;
        partial void OnMedicalHistoryIdChanging(global::System.Guid value);
        partial void OnMedicalHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PatiendId
        {
            get
            {
                return _PatiendId;
            }
            set
            {
                OnPatiendIdChanging(value);
                ReportPropertyChanging("PatiendId");
                _PatiendId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatiendId");
                OnPatiendIdChanged();
            }
        }
        private global::System.Guid _PatiendId;
        partial void OnPatiendIdChanging(global::System.Guid value);
        partial void OnPatiendIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private global::System.Guid _ClientId;
        partial void OnClientIdChanging(global::System.Guid value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ClientAreaId
        {
            get
            {
                return _ClientAreaId;
            }
            set
            {
                OnClientAreaIdChanging(value);
                ReportPropertyChanging("ClientAreaId");
                _ClientAreaId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientAreaId");
                OnClientAreaIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ClientAreaId;
        partial void OnClientAreaIdChanging(Nullable<global::System.Guid> value);
        partial void OnClientAreaIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ExamTypeId
        {
            get
            {
                return _ExamTypeId;
            }
            set
            {
                OnExamTypeIdChanging(value);
                ReportPropertyChanging("ExamTypeId");
                _ExamTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExamTypeId");
                OnExamTypeIdChanged();
            }
        }
        private global::System.Int32 _ExamTypeId;
        partial void OnExamTypeIdChanging(global::System.Int32 value);
        partial void OnExamTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TasksToDo
        {
            get
            {
                return _TasksToDo;
            }
            set
            {
                OnTasksToDoChanging(value);
                ReportPropertyChanging("TasksToDo");
                _TasksToDo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TasksToDo");
                OnTasksToDoChanged();
            }
        }
        private global::System.String _TasksToDo;
        partial void OnTasksToDoChanging(global::System.String value);
        partial void OnTasksToDoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkArea
        {
            get
            {
                return _WorkArea;
            }
            set
            {
                OnWorkAreaChanging(value);
                ReportPropertyChanging("WorkArea");
                _WorkArea = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WorkArea");
                OnWorkAreaChanged();
            }
        }
        private global::System.String _WorkArea;
        partial void OnWorkAreaChanging(global::System.String value);
        partial void OnWorkAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Observations
        {
            get
            {
                return _Observations;
            }
            set
            {
                OnObservationsChanging(value);
                ReportPropertyChanging("Observations");
                _Observations = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Observations");
                OnObservationsChanged();
            }
        }
        private global::System.String _Observations;
        partial void OnObservationsChanging(global::System.String value);
        partial void OnObservationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHighPriority
        {
            get
            {
                return _IsHighPriority;
            }
            set
            {
                OnIsHighPriorityChanging(value);
                ReportPropertyChanging("IsHighPriority");
                _IsHighPriority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsHighPriority");
                OnIsHighPriorityChanged();
            }
        }
        private global::System.Boolean _IsHighPriority;
        partial void OnIsHighPriorityChanging(global::System.Boolean value);
        partial void OnIsHighPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ResultId
        {
            get
            {
                return _ResultId;
            }
            set
            {
                OnResultIdChanging(value);
                ReportPropertyChanging("ResultId");
                _ResultId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultId");
                OnResultIdChanged();
            }
        }
        private global::System.Int32 _ResultId;
        partial void OnResultIdChanging(global::System.Int32 value);
        partial void OnResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LastUpdateUserId
        {
            get
            {
                return _LastUpdateUserId;
            }
            set
            {
                OnLastUpdateUserIdChanging(value);
                ReportPropertyChanging("LastUpdateUserId");
                _LastUpdateUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateUserId");
                OnLastUpdateUserIdChanged();
            }
        }
        private global::System.Guid _LastUpdateUserId;
        partial void OnLastUpdateUserIdChanging(global::System.Guid value);
        partial void OnLastUpdateUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private global::System.DateTime _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(global::System.DateTime value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResultObservations
        {
            get
            {
                return _ResultObservations;
            }
            set
            {
                OnResultObservationsChanging(value);
                ReportPropertyChanging("ResultObservations");
                _ResultObservations = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ResultObservations");
                OnResultObservationsChanged();
            }
        }
        private global::System.String _ResultObservations;
        partial void OnResultObservationsChanging(global::System.String value);
        partial void OnResultObservationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AnotherTypeDescription
        {
            get
            {
                return _AnotherTypeDescription;
            }
            set
            {
                OnAnotherTypeDescriptionChanging(value);
                ReportPropertyChanging("AnotherTypeDescription");
                _AnotherTypeDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AnotherTypeDescription");
                OnAnotherTypeDescriptionChanged();
            }
        }
        private global::System.String _AnotherTypeDescription;
        partial void OnAnotherTypeDescriptionChanging(global::System.String value);
        partial void OnAnotherTypeDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DailyPatientNumber
        {
            get
            {
                return _DailyPatientNumber;
            }
            set
            {
                OnDailyPatientNumberChanging(value);
                ReportPropertyChanging("DailyPatientNumber");
                _DailyPatientNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DailyPatientNumber");
                OnDailyPatientNumberChanged();
            }
        }
        private global::System.Int32 _DailyPatientNumber;
        partial void OnDailyPatientNumberChanging(global::System.Int32 value);
        partial void OnDailyPatientNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ChargeToClientId
        {
            get
            {
                return _ChargeToClientId;
            }
            set
            {
                OnChargeToClientIdChanging(value);
                ReportPropertyChanging("ChargeToClientId");
                _ChargeToClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChargeToClientId");
                OnChargeToClientIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ChargeToClientId;
        partial void OnChargeToClientIdChanging(Nullable<global::System.Guid> value);
        partial void OnChargeToClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SystemVersion
        {
            get
            {
                return _SystemVersion;
            }
            set
            {
                OnSystemVersionChanging(value);
                ReportPropertyChanging("SystemVersion");
                _SystemVersion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SystemVersion");
                OnSystemVersionChanged();
            }
        }
        private Nullable<global::System.Int32> _SystemVersion;
        partial void OnSystemVersionChanging(Nullable<global::System.Int32> value);
        partial void OnSystemVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ReceptionUser
        {
            get
            {
                return _ReceptionUser;
            }
            set
            {
                OnReceptionUserChanging(value);
                ReportPropertyChanging("ReceptionUser");
                _ReceptionUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceptionUser");
                OnReceptionUserChanged();
            }
        }
        private Nullable<global::System.Guid> _ReceptionUser;
        partial void OnReceptionUserChanging(Nullable<global::System.Guid> value);
        partial void OnReceptionUserChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistory_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_MedicalHistory_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_MedicalHistory_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_MedicalHistory_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("MedilabModel.FK_MedicalHistory_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistory_ClientArea", "ClientArea")]
        public ClientArea ClientArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientArea>("MedilabModel.FK_MedicalHistory_ClientArea", "ClientArea").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientArea>("MedilabModel.FK_MedicalHistory_ClientArea", "ClientArea").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClientArea> ClientAreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClientArea>("MedilabModel.FK_MedicalHistory_ClientArea", "ClientArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClientArea>("MedilabModel.FK_MedicalHistory_ClientArea", "ClientArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_ClinicalExam_MedicalHistory", "ClinicalExam")]
        public EntityCollection<ClinicalExam> ClinicalExam
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClinicalExam>("MedilabModel.FK_ClinicalExam_MedicalHistory", "ClinicalExam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClinicalExam>("MedilabModel.FK_ClinicalExam_MedicalHistory", "ClinicalExam", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistory_ClinicalHistoryResult", "ClinicalHistoryResult")]
        public ClinicalHistoryResult ClinicalHistoryResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicalHistoryResult>("MedilabModel.FK_MedicalHistory_ClinicalHistoryResult", "ClinicalHistoryResult").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicalHistoryResult>("MedilabModel.FK_MedicalHistory_ClinicalHistoryResult", "ClinicalHistoryResult").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClinicalHistoryResult> ClinicalHistoryResultReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicalHistoryResult>("MedilabModel.FK_MedicalHistory_ClinicalHistoryResult", "ClinicalHistoryResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClinicalHistoryResult>("MedilabModel.FK_MedicalHistory_ClinicalHistoryResult", "ClinicalHistoryResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistory_ExamType", "ExamType")]
        public ExamType ExamType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExamType>("MedilabModel.FK_MedicalHistory_ExamType", "ExamType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExamType>("MedilabModel.FK_MedicalHistory_ExamType", "ExamType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ExamType> ExamTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ExamType>("MedilabModel.FK_MedicalHistory_ExamType", "ExamType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ExamType>("MedilabModel.FK_MedicalHistory_ExamType", "ExamType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistory_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_MedicalHistory_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_MedicalHistory_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_MedicalHistory_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MedilabModel.FK_MedicalHistory_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistoryPractice_MedicalHistory", "MedicalHistoryPractice")]
        public EntityCollection<MedicalHistoryPractice> MedicalHistoryPractice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalHistoryPractice>("MedilabModel.FK_MedicalHistoryPractice_MedicalHistory", "MedicalHistoryPractice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalHistoryPractice>("MedilabModel.FK_MedicalHistoryPractice_MedicalHistory", "MedicalHistoryPractice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistoryResult_MedicalHistory", "MedicalHistoryResult")]
        public EntityCollection<MedicalHistoryResult> MedicalHistoryResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalHistoryResult>("MedilabModel.FK_MedicalHistoryResult_MedicalHistory", "MedicalHistoryResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalHistoryResult>("MedilabModel.FK_MedicalHistoryResult_MedicalHistory", "MedicalHistoryResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistory_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("MedilabModel.FK_MedicalHistory_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("MedilabModel.FK_MedicalHistory_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("MedilabModel.FK_MedicalHistory_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("MedilabModel.FK_MedicalHistory_Patient", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="MedicalHistoryPractice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalHistoryPractice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalHistoryPractice object.
        /// </summary>
        /// <param name="medicalHistoryPracticeId">Initial value of the MedicalHistoryPracticeId property.</param>
        /// <param name="medicalHistoryId">Initial value of the MedicalHistoryId property.</param>
        /// <param name="medicalPracticeId">Initial value of the MedicalPracticeId property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="result">Initial value of the Result property.</param>
        public static MedicalHistoryPractice CreateMedicalHistoryPractice(global::System.Guid medicalHistoryPracticeId, global::System.Guid medicalHistoryId, global::System.Guid medicalPracticeId, global::System.Int32 status, global::System.Int32 result)
        {
            MedicalHistoryPractice medicalHistoryPractice = new MedicalHistoryPractice();
            medicalHistoryPractice.MedicalHistoryPracticeId = medicalHistoryPracticeId;
            medicalHistoryPractice.MedicalHistoryId = medicalHistoryId;
            medicalHistoryPractice.MedicalPracticeId = medicalPracticeId;
            medicalHistoryPractice.Status = status;
            medicalHistoryPractice.Result = result;
            return medicalHistoryPractice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MedicalHistoryPracticeId
        {
            get
            {
                return _MedicalHistoryPracticeId;
            }
            set
            {
                if (_MedicalHistoryPracticeId != value)
                {
                    OnMedicalHistoryPracticeIdChanging(value);
                    ReportPropertyChanging("MedicalHistoryPracticeId");
                    _MedicalHistoryPracticeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedicalHistoryPracticeId");
                    OnMedicalHistoryPracticeIdChanged();
                }
            }
        }
        private global::System.Guid _MedicalHistoryPracticeId;
        partial void OnMedicalHistoryPracticeIdChanging(global::System.Guid value);
        partial void OnMedicalHistoryPracticeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MedicalHistoryId
        {
            get
            {
                return _MedicalHistoryId;
            }
            set
            {
                OnMedicalHistoryIdChanging(value);
                ReportPropertyChanging("MedicalHistoryId");
                _MedicalHistoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicalHistoryId");
                OnMedicalHistoryIdChanged();
            }
        }
        private global::System.Guid _MedicalHistoryId;
        partial void OnMedicalHistoryIdChanging(global::System.Guid value);
        partial void OnMedicalHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MedicalPracticeId
        {
            get
            {
                return _MedicalPracticeId;
            }
            set
            {
                OnMedicalPracticeIdChanging(value);
                ReportPropertyChanging("MedicalPracticeId");
                _MedicalPracticeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicalPracticeId");
                OnMedicalPracticeIdChanged();
            }
        }
        private global::System.Guid _MedicalPracticeId;
        partial void OnMedicalPracticeIdChanging(global::System.Guid value);
        partial void OnMedicalPracticeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.Int32 _Status;
        partial void OnStatusChanging(global::System.Int32 value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private global::System.Int32 _Result;
        partial void OnResultChanging(global::System.Int32 value);
        partial void OnResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Observations
        {
            get
            {
                return _Observations;
            }
            set
            {
                OnObservationsChanging(value);
                ReportPropertyChanging("Observations");
                _Observations = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Observations");
                OnObservationsChanged();
            }
        }
        private global::System.String _Observations;
        partial void OnObservationsChanging(global::System.String value);
        partial void OnObservationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> GroupId
        {
            get
            {
                return _GroupId;
            }
            set
            {
                OnGroupIdChanging(value);
                ReportPropertyChanging("GroupId");
                _GroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupId");
                OnGroupIdChanged();
            }
        }
        private Nullable<global::System.Guid> _GroupId;
        partial void OnGroupIdChanging(Nullable<global::System.Guid> value);
        partial void OnGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> InvoiceId
        {
            get
            {
                return _InvoiceId;
            }
            set
            {
                OnInvoiceIdChanging(value);
                ReportPropertyChanging("InvoiceId");
                _InvoiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceId");
                OnInvoiceIdChanged();
            }
        }
        private Nullable<global::System.Guid> _InvoiceId;
        partial void OnInvoiceIdChanging(Nullable<global::System.Guid> value);
        partial void OnInvoiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ProfessionalId
        {
            get
            {
                return _ProfessionalId;
            }
            set
            {
                OnProfessionalIdChanging(value);
                ReportPropertyChanging("ProfessionalId");
                _ProfessionalId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfessionalId");
                OnProfessionalIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ProfessionalId;
        partial void OnProfessionalIdChanging(Nullable<global::System.Guid> value);
        partial void OnProfessionalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AttentionDate
        {
            get
            {
                return _AttentionDate;
            }
            set
            {
                OnAttentionDateChanging(value);
                ReportPropertyChanging("AttentionDate");
                _AttentionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttentionDate");
                OnAttentionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AttentionDate;
        partial void OnAttentionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAttentionDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistoryPractice_MedicalPractice", "MedicalPractice")]
        public MedicalPractice MedicalPractice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalPractice>("MedilabModel.FK_MedicalHistoryPractice_MedicalPractice", "MedicalPractice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalPractice>("MedilabModel.FK_MedicalHistoryPractice_MedicalPractice", "MedicalPractice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalPractice> MedicalPracticeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalPractice>("MedilabModel.FK_MedicalHistoryPractice_MedicalPractice", "MedicalPractice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalPractice>("MedilabModel.FK_MedicalHistoryPractice_MedicalPractice", "MedicalPractice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistoryPractice_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_MedicalHistoryPractice_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_MedicalHistoryPractice_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_MedicalHistoryPractice_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MedilabModel.FK_MedicalHistoryPractice_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistoryPractice_Group", "Group")]
        public Group Group
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("MedilabModel.FK_MedicalHistoryPractice_Group", "Group").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("MedilabModel.FK_MedicalHistoryPractice_Group", "Group").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Group> GroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Group>("MedilabModel.FK_MedicalHistoryPractice_Group", "Group");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Group>("MedilabModel.FK_MedicalHistoryPractice_Group", "Group", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistoryPractice_MedicalHistory", "MedicalHistory")]
        public MedicalHistory MedicalHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalHistory>("MedilabModel.FK_MedicalHistoryPractice_MedicalHistory", "MedicalHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalHistory>("MedilabModel.FK_MedicalHistoryPractice_MedicalHistory", "MedicalHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalHistory> MedicalHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalHistory>("MedilabModel.FK_MedicalHistoryPractice_MedicalHistory", "MedicalHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalHistory>("MedilabModel.FK_MedicalHistoryPractice_MedicalHistory", "MedicalHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="MedicalHistoryResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalHistoryResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalHistoryResult object.
        /// </summary>
        /// <param name="medicalHistoryResultId">Initial value of the MedicalHistoryResultId property.</param>
        /// <param name="medicalHistoryId">Initial value of the MedicalHistoryId property.</param>
        /// <param name="dateCompleted">Initial value of the DateCompleted property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="chestXRay">Initial value of the ChestXRay property.</param>
        /// <param name="chestXRayDetails">Initial value of the ChestXRayDetails property.</param>
        /// <param name="columnXRay">Initial value of the ColumnXRay property.</param>
        /// <param name="columnXRayDetails">Initial value of the ColumnXRayDetails property.</param>
        /// <param name="laboratory">Initial value of the Laboratory property.</param>
        /// <param name="laboratoryDetails">Initial value of the LaboratoryDetails property.</param>
        /// <param name="electrocardiogram">Initial value of the Electrocardiogram property.</param>
        /// <param name="electrocardiogramDetails">Initial value of the ElectrocardiogramDetails property.</param>
        /// <param name="audiometry">Initial value of the Audiometry property.</param>
        /// <param name="audiometryDetails">Initial value of the AudiometryDetails property.</param>
        /// <param name="spirometry">Initial value of the Spirometry property.</param>
        /// <param name="spirometryDetails">Initial value of the SpirometryDetails property.</param>
        /// <param name="psychologicalExam">Initial value of the PsychologicalExam property.</param>
        /// <param name="psychologicalExamDetails">Initial value of the PsychologicalExamDetails property.</param>
        /// <param name="electroencephalogram">Initial value of the Electroencephalogram property.</param>
        /// <param name="electroencephalogramDetails">Initial value of the ElectroencephalogramDetails property.</param>
        /// <param name="ergometry">Initial value of the Ergometry property.</param>
        /// <param name="ergometryDetails">Initial value of the ErgometryDetails property.</param>
        /// <param name="ophthalmology">Initial value of the Ophthalmology property.</param>
        /// <param name="ophthalmologyDetails">Initial value of the OphthalmologyDetails property.</param>
        /// <param name="neurologicalConsultation">Initial value of the NeurologicalConsultation property.</param>
        /// <param name="neurologicalDetails">Initial value of the NeurologicalDetails property.</param>
        /// <param name="cardiologyConsultation">Initial value of the CardiologyConsultation property.</param>
        /// <param name="cardiologyDetails">Initial value of the CardiologyDetails property.</param>
        /// <param name="neumonologyConsultation">Initial value of the NeumonologyConsultation property.</param>
        /// <param name="neumonologyDetails">Initial value of the NeumonologyDetails property.</param>
        /// <param name="magneticResonance">Initial value of the MagneticResonance property.</param>
        /// <param name="magneticResonanceDetails">Initial value of the MagneticResonanceDetails property.</param>
        /// <param name="ultrasound">Initial value of the Ultrasound property.</param>
        /// <param name="ultrasoundDetails">Initial value of the UltrasoundDetails property.</param>
        /// <param name="vestibularExam">Initial value of the VestibularExam property.</param>
        /// <param name="vestibularExamDetails">Initial value of the VestibularExamDetails property.</param>
        /// <param name="dental">Initial value of the Dental property.</param>
        /// <param name="dentalDetails">Initial value of the DentalDetails property.</param>
        /// <param name="oRL">Initial value of the ORL property.</param>
        /// <param name="oRLDetails">Initial value of the ORLDetails property.</param>
        /// <param name="others">Initial value of the Others property.</param>
        public static MedicalHistoryResult CreateMedicalHistoryResult(global::System.Guid medicalHistoryResultId, global::System.Guid medicalHistoryId, global::System.DateTime dateCompleted, global::System.Guid createdBy, global::System.Int32 chestXRay, global::System.String chestXRayDetails, global::System.Int32 columnXRay, global::System.String columnXRayDetails, global::System.Int32 laboratory, global::System.String laboratoryDetails, global::System.Int32 electrocardiogram, global::System.String electrocardiogramDetails, global::System.Int32 audiometry, global::System.String audiometryDetails, global::System.Int32 spirometry, global::System.String spirometryDetails, global::System.Int32 psychologicalExam, global::System.String psychologicalExamDetails, global::System.Int32 electroencephalogram, global::System.String electroencephalogramDetails, global::System.Int32 ergometry, global::System.String ergometryDetails, global::System.Int32 ophthalmology, global::System.String ophthalmologyDetails, global::System.Int32 neurologicalConsultation, global::System.String neurologicalDetails, global::System.Int32 cardiologyConsultation, global::System.String cardiologyDetails, global::System.Int32 neumonologyConsultation, global::System.String neumonologyDetails, global::System.Int32 magneticResonance, global::System.String magneticResonanceDetails, global::System.Int32 ultrasound, global::System.String ultrasoundDetails, global::System.Int32 vestibularExam, global::System.String vestibularExamDetails, global::System.Int32 dental, global::System.String dentalDetails, global::System.Int32 oRL, global::System.String oRLDetails, global::System.String others)
        {
            MedicalHistoryResult medicalHistoryResult = new MedicalHistoryResult();
            medicalHistoryResult.MedicalHistoryResultId = medicalHistoryResultId;
            medicalHistoryResult.MedicalHistoryId = medicalHistoryId;
            medicalHistoryResult.DateCompleted = dateCompleted;
            medicalHistoryResult.CreatedBy = createdBy;
            medicalHistoryResult.ChestXRay = chestXRay;
            medicalHistoryResult.ChestXRayDetails = chestXRayDetails;
            medicalHistoryResult.ColumnXRay = columnXRay;
            medicalHistoryResult.ColumnXRayDetails = columnXRayDetails;
            medicalHistoryResult.Laboratory = laboratory;
            medicalHistoryResult.LaboratoryDetails = laboratoryDetails;
            medicalHistoryResult.Electrocardiogram = electrocardiogram;
            medicalHistoryResult.ElectrocardiogramDetails = electrocardiogramDetails;
            medicalHistoryResult.Audiometry = audiometry;
            medicalHistoryResult.AudiometryDetails = audiometryDetails;
            medicalHistoryResult.Spirometry = spirometry;
            medicalHistoryResult.SpirometryDetails = spirometryDetails;
            medicalHistoryResult.PsychologicalExam = psychologicalExam;
            medicalHistoryResult.PsychologicalExamDetails = psychologicalExamDetails;
            medicalHistoryResult.Electroencephalogram = electroencephalogram;
            medicalHistoryResult.ElectroencephalogramDetails = electroencephalogramDetails;
            medicalHistoryResult.Ergometry = ergometry;
            medicalHistoryResult.ErgometryDetails = ergometryDetails;
            medicalHistoryResult.Ophthalmology = ophthalmology;
            medicalHistoryResult.OphthalmologyDetails = ophthalmologyDetails;
            medicalHistoryResult.NeurologicalConsultation = neurologicalConsultation;
            medicalHistoryResult.NeurologicalDetails = neurologicalDetails;
            medicalHistoryResult.CardiologyConsultation = cardiologyConsultation;
            medicalHistoryResult.CardiologyDetails = cardiologyDetails;
            medicalHistoryResult.NeumonologyConsultation = neumonologyConsultation;
            medicalHistoryResult.NeumonologyDetails = neumonologyDetails;
            medicalHistoryResult.MagneticResonance = magneticResonance;
            medicalHistoryResult.MagneticResonanceDetails = magneticResonanceDetails;
            medicalHistoryResult.Ultrasound = ultrasound;
            medicalHistoryResult.UltrasoundDetails = ultrasoundDetails;
            medicalHistoryResult.VestibularExam = vestibularExam;
            medicalHistoryResult.VestibularExamDetails = vestibularExamDetails;
            medicalHistoryResult.Dental = dental;
            medicalHistoryResult.DentalDetails = dentalDetails;
            medicalHistoryResult.ORL = oRL;
            medicalHistoryResult.ORLDetails = oRLDetails;
            medicalHistoryResult.Others = others;
            return medicalHistoryResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MedicalHistoryResultId
        {
            get
            {
                return _MedicalHistoryResultId;
            }
            set
            {
                if (_MedicalHistoryResultId != value)
                {
                    OnMedicalHistoryResultIdChanging(value);
                    ReportPropertyChanging("MedicalHistoryResultId");
                    _MedicalHistoryResultId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedicalHistoryResultId");
                    OnMedicalHistoryResultIdChanged();
                }
            }
        }
        private global::System.Guid _MedicalHistoryResultId;
        partial void OnMedicalHistoryResultIdChanging(global::System.Guid value);
        partial void OnMedicalHistoryResultIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MedicalHistoryId
        {
            get
            {
                return _MedicalHistoryId;
            }
            set
            {
                OnMedicalHistoryIdChanging(value);
                ReportPropertyChanging("MedicalHistoryId");
                _MedicalHistoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedicalHistoryId");
                OnMedicalHistoryIdChanged();
            }
        }
        private global::System.Guid _MedicalHistoryId;
        partial void OnMedicalHistoryIdChanging(global::System.Guid value);
        partial void OnMedicalHistoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCompleted
        {
            get
            {
                return _DateCompleted;
            }
            set
            {
                OnDateCompletedChanging(value);
                ReportPropertyChanging("DateCompleted");
                _DateCompleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCompleted");
                OnDateCompletedChanged();
            }
        }
        private global::System.DateTime _DateCompleted;
        partial void OnDateCompletedChanging(global::System.DateTime value);
        partial void OnDateCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Guid _CreatedBy;
        partial void OnCreatedByChanging(global::System.Guid value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChestXRay
        {
            get
            {
                return _ChestXRay;
            }
            set
            {
                OnChestXRayChanging(value);
                ReportPropertyChanging("ChestXRay");
                _ChestXRay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChestXRay");
                OnChestXRayChanged();
            }
        }
        private global::System.Int32 _ChestXRay;
        partial void OnChestXRayChanging(global::System.Int32 value);
        partial void OnChestXRayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChestXRayDetails
        {
            get
            {
                return _ChestXRayDetails;
            }
            set
            {
                OnChestXRayDetailsChanging(value);
                ReportPropertyChanging("ChestXRayDetails");
                _ChestXRayDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChestXRayDetails");
                OnChestXRayDetailsChanged();
            }
        }
        private global::System.String _ChestXRayDetails;
        partial void OnChestXRayDetailsChanging(global::System.String value);
        partial void OnChestXRayDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColumnXRay
        {
            get
            {
                return _ColumnXRay;
            }
            set
            {
                OnColumnXRayChanging(value);
                ReportPropertyChanging("ColumnXRay");
                _ColumnXRay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ColumnXRay");
                OnColumnXRayChanged();
            }
        }
        private global::System.Int32 _ColumnXRay;
        partial void OnColumnXRayChanging(global::System.Int32 value);
        partial void OnColumnXRayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ColumnXRayDetails
        {
            get
            {
                return _ColumnXRayDetails;
            }
            set
            {
                OnColumnXRayDetailsChanging(value);
                ReportPropertyChanging("ColumnXRayDetails");
                _ColumnXRayDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ColumnXRayDetails");
                OnColumnXRayDetailsChanged();
            }
        }
        private global::System.String _ColumnXRayDetails;
        partial void OnColumnXRayDetailsChanging(global::System.String value);
        partial void OnColumnXRayDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Laboratory
        {
            get
            {
                return _Laboratory;
            }
            set
            {
                OnLaboratoryChanging(value);
                ReportPropertyChanging("Laboratory");
                _Laboratory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Laboratory");
                OnLaboratoryChanged();
            }
        }
        private global::System.Int32 _Laboratory;
        partial void OnLaboratoryChanging(global::System.Int32 value);
        partial void OnLaboratoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LaboratoryDetails
        {
            get
            {
                return _LaboratoryDetails;
            }
            set
            {
                OnLaboratoryDetailsChanging(value);
                ReportPropertyChanging("LaboratoryDetails");
                _LaboratoryDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LaboratoryDetails");
                OnLaboratoryDetailsChanged();
            }
        }
        private global::System.String _LaboratoryDetails;
        partial void OnLaboratoryDetailsChanging(global::System.String value);
        partial void OnLaboratoryDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Electrocardiogram
        {
            get
            {
                return _Electrocardiogram;
            }
            set
            {
                OnElectrocardiogramChanging(value);
                ReportPropertyChanging("Electrocardiogram");
                _Electrocardiogram = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Electrocardiogram");
                OnElectrocardiogramChanged();
            }
        }
        private global::System.Int32 _Electrocardiogram;
        partial void OnElectrocardiogramChanging(global::System.Int32 value);
        partial void OnElectrocardiogramChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ElectrocardiogramDetails
        {
            get
            {
                return _ElectrocardiogramDetails;
            }
            set
            {
                OnElectrocardiogramDetailsChanging(value);
                ReportPropertyChanging("ElectrocardiogramDetails");
                _ElectrocardiogramDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ElectrocardiogramDetails");
                OnElectrocardiogramDetailsChanged();
            }
        }
        private global::System.String _ElectrocardiogramDetails;
        partial void OnElectrocardiogramDetailsChanging(global::System.String value);
        partial void OnElectrocardiogramDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Audiometry
        {
            get
            {
                return _Audiometry;
            }
            set
            {
                OnAudiometryChanging(value);
                ReportPropertyChanging("Audiometry");
                _Audiometry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Audiometry");
                OnAudiometryChanged();
            }
        }
        private global::System.Int32 _Audiometry;
        partial void OnAudiometryChanging(global::System.Int32 value);
        partial void OnAudiometryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AudiometryDetails
        {
            get
            {
                return _AudiometryDetails;
            }
            set
            {
                OnAudiometryDetailsChanging(value);
                ReportPropertyChanging("AudiometryDetails");
                _AudiometryDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AudiometryDetails");
                OnAudiometryDetailsChanged();
            }
        }
        private global::System.String _AudiometryDetails;
        partial void OnAudiometryDetailsChanging(global::System.String value);
        partial void OnAudiometryDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Spirometry
        {
            get
            {
                return _Spirometry;
            }
            set
            {
                OnSpirometryChanging(value);
                ReportPropertyChanging("Spirometry");
                _Spirometry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Spirometry");
                OnSpirometryChanged();
            }
        }
        private global::System.Int32 _Spirometry;
        partial void OnSpirometryChanging(global::System.Int32 value);
        partial void OnSpirometryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SpirometryDetails
        {
            get
            {
                return _SpirometryDetails;
            }
            set
            {
                OnSpirometryDetailsChanging(value);
                ReportPropertyChanging("SpirometryDetails");
                _SpirometryDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SpirometryDetails");
                OnSpirometryDetailsChanged();
            }
        }
        private global::System.String _SpirometryDetails;
        partial void OnSpirometryDetailsChanging(global::System.String value);
        partial void OnSpirometryDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PsychologicalExam
        {
            get
            {
                return _PsychologicalExam;
            }
            set
            {
                OnPsychologicalExamChanging(value);
                ReportPropertyChanging("PsychologicalExam");
                _PsychologicalExam = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PsychologicalExam");
                OnPsychologicalExamChanged();
            }
        }
        private global::System.Int32 _PsychologicalExam;
        partial void OnPsychologicalExamChanging(global::System.Int32 value);
        partial void OnPsychologicalExamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PsychologicalExamDetails
        {
            get
            {
                return _PsychologicalExamDetails;
            }
            set
            {
                OnPsychologicalExamDetailsChanging(value);
                ReportPropertyChanging("PsychologicalExamDetails");
                _PsychologicalExamDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PsychologicalExamDetails");
                OnPsychologicalExamDetailsChanged();
            }
        }
        private global::System.String _PsychologicalExamDetails;
        partial void OnPsychologicalExamDetailsChanging(global::System.String value);
        partial void OnPsychologicalExamDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Electroencephalogram
        {
            get
            {
                return _Electroencephalogram;
            }
            set
            {
                OnElectroencephalogramChanging(value);
                ReportPropertyChanging("Electroencephalogram");
                _Electroencephalogram = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Electroencephalogram");
                OnElectroencephalogramChanged();
            }
        }
        private global::System.Int32 _Electroencephalogram;
        partial void OnElectroencephalogramChanging(global::System.Int32 value);
        partial void OnElectroencephalogramChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ElectroencephalogramDetails
        {
            get
            {
                return _ElectroencephalogramDetails;
            }
            set
            {
                OnElectroencephalogramDetailsChanging(value);
                ReportPropertyChanging("ElectroencephalogramDetails");
                _ElectroencephalogramDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ElectroencephalogramDetails");
                OnElectroencephalogramDetailsChanged();
            }
        }
        private global::System.String _ElectroencephalogramDetails;
        partial void OnElectroencephalogramDetailsChanging(global::System.String value);
        partial void OnElectroencephalogramDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Ergometry
        {
            get
            {
                return _Ergometry;
            }
            set
            {
                OnErgometryChanging(value);
                ReportPropertyChanging("Ergometry");
                _Ergometry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ergometry");
                OnErgometryChanged();
            }
        }
        private global::System.Int32 _Ergometry;
        partial void OnErgometryChanging(global::System.Int32 value);
        partial void OnErgometryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ErgometryDetails
        {
            get
            {
                return _ErgometryDetails;
            }
            set
            {
                OnErgometryDetailsChanging(value);
                ReportPropertyChanging("ErgometryDetails");
                _ErgometryDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ErgometryDetails");
                OnErgometryDetailsChanged();
            }
        }
        private global::System.String _ErgometryDetails;
        partial void OnErgometryDetailsChanging(global::System.String value);
        partial void OnErgometryDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Ophthalmology
        {
            get
            {
                return _Ophthalmology;
            }
            set
            {
                OnOphthalmologyChanging(value);
                ReportPropertyChanging("Ophthalmology");
                _Ophthalmology = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ophthalmology");
                OnOphthalmologyChanged();
            }
        }
        private global::System.Int32 _Ophthalmology;
        partial void OnOphthalmologyChanging(global::System.Int32 value);
        partial void OnOphthalmologyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OphthalmologyDetails
        {
            get
            {
                return _OphthalmologyDetails;
            }
            set
            {
                OnOphthalmologyDetailsChanging(value);
                ReportPropertyChanging("OphthalmologyDetails");
                _OphthalmologyDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OphthalmologyDetails");
                OnOphthalmologyDetailsChanged();
            }
        }
        private global::System.String _OphthalmologyDetails;
        partial void OnOphthalmologyDetailsChanging(global::System.String value);
        partial void OnOphthalmologyDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NeurologicalConsultation
        {
            get
            {
                return _NeurologicalConsultation;
            }
            set
            {
                OnNeurologicalConsultationChanging(value);
                ReportPropertyChanging("NeurologicalConsultation");
                _NeurologicalConsultation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeurologicalConsultation");
                OnNeurologicalConsultationChanged();
            }
        }
        private global::System.Int32 _NeurologicalConsultation;
        partial void OnNeurologicalConsultationChanging(global::System.Int32 value);
        partial void OnNeurologicalConsultationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NeurologicalDetails
        {
            get
            {
                return _NeurologicalDetails;
            }
            set
            {
                OnNeurologicalDetailsChanging(value);
                ReportPropertyChanging("NeurologicalDetails");
                _NeurologicalDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NeurologicalDetails");
                OnNeurologicalDetailsChanged();
            }
        }
        private global::System.String _NeurologicalDetails;
        partial void OnNeurologicalDetailsChanging(global::System.String value);
        partial void OnNeurologicalDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CardiologyConsultation
        {
            get
            {
                return _CardiologyConsultation;
            }
            set
            {
                OnCardiologyConsultationChanging(value);
                ReportPropertyChanging("CardiologyConsultation");
                _CardiologyConsultation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CardiologyConsultation");
                OnCardiologyConsultationChanged();
            }
        }
        private global::System.Int32 _CardiologyConsultation;
        partial void OnCardiologyConsultationChanging(global::System.Int32 value);
        partial void OnCardiologyConsultationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardiologyDetails
        {
            get
            {
                return _CardiologyDetails;
            }
            set
            {
                OnCardiologyDetailsChanging(value);
                ReportPropertyChanging("CardiologyDetails");
                _CardiologyDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CardiologyDetails");
                OnCardiologyDetailsChanged();
            }
        }
        private global::System.String _CardiologyDetails;
        partial void OnCardiologyDetailsChanging(global::System.String value);
        partial void OnCardiologyDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NeumonologyConsultation
        {
            get
            {
                return _NeumonologyConsultation;
            }
            set
            {
                OnNeumonologyConsultationChanging(value);
                ReportPropertyChanging("NeumonologyConsultation");
                _NeumonologyConsultation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeumonologyConsultation");
                OnNeumonologyConsultationChanged();
            }
        }
        private global::System.Int32 _NeumonologyConsultation;
        partial void OnNeumonologyConsultationChanging(global::System.Int32 value);
        partial void OnNeumonologyConsultationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NeumonologyDetails
        {
            get
            {
                return _NeumonologyDetails;
            }
            set
            {
                OnNeumonologyDetailsChanging(value);
                ReportPropertyChanging("NeumonologyDetails");
                _NeumonologyDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NeumonologyDetails");
                OnNeumonologyDetailsChanged();
            }
        }
        private global::System.String _NeumonologyDetails;
        partial void OnNeumonologyDetailsChanging(global::System.String value);
        partial void OnNeumonologyDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MagneticResonance
        {
            get
            {
                return _MagneticResonance;
            }
            set
            {
                OnMagneticResonanceChanging(value);
                ReportPropertyChanging("MagneticResonance");
                _MagneticResonance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MagneticResonance");
                OnMagneticResonanceChanged();
            }
        }
        private global::System.Int32 _MagneticResonance;
        partial void OnMagneticResonanceChanging(global::System.Int32 value);
        partial void OnMagneticResonanceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MagneticResonanceDetails
        {
            get
            {
                return _MagneticResonanceDetails;
            }
            set
            {
                OnMagneticResonanceDetailsChanging(value);
                ReportPropertyChanging("MagneticResonanceDetails");
                _MagneticResonanceDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MagneticResonanceDetails");
                OnMagneticResonanceDetailsChanged();
            }
        }
        private global::System.String _MagneticResonanceDetails;
        partial void OnMagneticResonanceDetailsChanging(global::System.String value);
        partial void OnMagneticResonanceDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Ultrasound
        {
            get
            {
                return _Ultrasound;
            }
            set
            {
                OnUltrasoundChanging(value);
                ReportPropertyChanging("Ultrasound");
                _Ultrasound = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ultrasound");
                OnUltrasoundChanged();
            }
        }
        private global::System.Int32 _Ultrasound;
        partial void OnUltrasoundChanging(global::System.Int32 value);
        partial void OnUltrasoundChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UltrasoundDetails
        {
            get
            {
                return _UltrasoundDetails;
            }
            set
            {
                OnUltrasoundDetailsChanging(value);
                ReportPropertyChanging("UltrasoundDetails");
                _UltrasoundDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UltrasoundDetails");
                OnUltrasoundDetailsChanged();
            }
        }
        private global::System.String _UltrasoundDetails;
        partial void OnUltrasoundDetailsChanging(global::System.String value);
        partial void OnUltrasoundDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VestibularExam
        {
            get
            {
                return _VestibularExam;
            }
            set
            {
                OnVestibularExamChanging(value);
                ReportPropertyChanging("VestibularExam");
                _VestibularExam = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VestibularExam");
                OnVestibularExamChanged();
            }
        }
        private global::System.Int32 _VestibularExam;
        partial void OnVestibularExamChanging(global::System.Int32 value);
        partial void OnVestibularExamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VestibularExamDetails
        {
            get
            {
                return _VestibularExamDetails;
            }
            set
            {
                OnVestibularExamDetailsChanging(value);
                ReportPropertyChanging("VestibularExamDetails");
                _VestibularExamDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VestibularExamDetails");
                OnVestibularExamDetailsChanged();
            }
        }
        private global::System.String _VestibularExamDetails;
        partial void OnVestibularExamDetailsChanging(global::System.String value);
        partial void OnVestibularExamDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Dental
        {
            get
            {
                return _Dental;
            }
            set
            {
                OnDentalChanging(value);
                ReportPropertyChanging("Dental");
                _Dental = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Dental");
                OnDentalChanged();
            }
        }
        private global::System.Int32 _Dental;
        partial void OnDentalChanging(global::System.Int32 value);
        partial void OnDentalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DentalDetails
        {
            get
            {
                return _DentalDetails;
            }
            set
            {
                OnDentalDetailsChanging(value);
                ReportPropertyChanging("DentalDetails");
                _DentalDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DentalDetails");
                OnDentalDetailsChanged();
            }
        }
        private global::System.String _DentalDetails;
        partial void OnDentalDetailsChanging(global::System.String value);
        partial void OnDentalDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ORL
        {
            get
            {
                return _ORL;
            }
            set
            {
                OnORLChanging(value);
                ReportPropertyChanging("ORL");
                _ORL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ORL");
                OnORLChanged();
            }
        }
        private global::System.Int32 _ORL;
        partial void OnORLChanging(global::System.Int32 value);
        partial void OnORLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ORLDetails
        {
            get
            {
                return _ORLDetails;
            }
            set
            {
                OnORLDetailsChanging(value);
                ReportPropertyChanging("ORLDetails");
                _ORLDetails = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ORLDetails");
                OnORLDetailsChanged();
            }
        }
        private global::System.String _ORLDetails;
        partial void OnORLDetailsChanging(global::System.String value);
        partial void OnORLDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Others
        {
            get
            {
                return _Others;
            }
            set
            {
                OnOthersChanging(value);
                ReportPropertyChanging("Others");
                _Others = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Others");
                OnOthersChanged();
            }
        }
        private global::System.String _Others;
        partial void OnOthersChanging(global::System.String value);
        partial void OnOthersChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistoryResult_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_MedicalHistoryResult_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_MedicalHistoryResult_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_MedicalHistoryResult_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MedilabModel.FK_MedicalHistoryResult_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistoryResult_MedicalHistory", "MedicalHistory")]
        public MedicalHistory MedicalHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalHistory>("MedilabModel.FK_MedicalHistoryResult_MedicalHistory", "MedicalHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalHistory>("MedilabModel.FK_MedicalHistoryResult_MedicalHistory", "MedicalHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalHistory> MedicalHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalHistory>("MedilabModel.FK_MedicalHistoryResult_MedicalHistory", "MedicalHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalHistory>("MedilabModel.FK_MedicalHistoryResult_MedicalHistory", "MedicalHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="MedicalPractice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalPractice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalPractice object.
        /// </summary>
        /// <param name="medicalPracticeId">Initial value of the MedicalPracticeId property.</param>
        /// <param name="practiceCode">Initial value of the PracticeCode property.</param>
        /// <param name="practiceName">Initial value of the PracticeName property.</param>
        /// <param name="practiceDescription">Initial value of the PracticeDescription property.</param>
        /// <param name="specialityId">Initial value of the SpecialityId property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="isExternal">Initial value of the IsExternal property.</param>
        public static MedicalPractice CreateMedicalPractice(global::System.Guid medicalPracticeId, global::System.Int32 practiceCode, global::System.String practiceName, global::System.String practiceDescription, global::System.Guid specialityId, global::System.Boolean isDeleted, global::System.Byte[] lastUpdated, global::System.Boolean isExternal)
        {
            MedicalPractice medicalPractice = new MedicalPractice();
            medicalPractice.MedicalPracticeId = medicalPracticeId;
            medicalPractice.PracticeCode = practiceCode;
            medicalPractice.PracticeName = practiceName;
            medicalPractice.PracticeDescription = practiceDescription;
            medicalPractice.SpecialityId = specialityId;
            medicalPractice.IsDeleted = isDeleted;
            medicalPractice.LastUpdated = lastUpdated;
            medicalPractice.IsExternal = isExternal;
            return medicalPractice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MedicalPracticeId
        {
            get
            {
                return _MedicalPracticeId;
            }
            set
            {
                if (_MedicalPracticeId != value)
                {
                    OnMedicalPracticeIdChanging(value);
                    ReportPropertyChanging("MedicalPracticeId");
                    _MedicalPracticeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedicalPracticeId");
                    OnMedicalPracticeIdChanged();
                }
            }
        }
        private global::System.Guid _MedicalPracticeId;
        partial void OnMedicalPracticeIdChanging(global::System.Guid value);
        partial void OnMedicalPracticeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PracticeCode
        {
            get
            {
                return _PracticeCode;
            }
            set
            {
                OnPracticeCodeChanging(value);
                ReportPropertyChanging("PracticeCode");
                _PracticeCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PracticeCode");
                OnPracticeCodeChanged();
            }
        }
        private global::System.Int32 _PracticeCode;
        partial void OnPracticeCodeChanging(global::System.Int32 value);
        partial void OnPracticeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PracticeName
        {
            get
            {
                return _PracticeName;
            }
            set
            {
                OnPracticeNameChanging(value);
                ReportPropertyChanging("PracticeName");
                _PracticeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PracticeName");
                OnPracticeNameChanged();
            }
        }
        private global::System.String _PracticeName;
        partial void OnPracticeNameChanging(global::System.String value);
        partial void OnPracticeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PracticeDescription
        {
            get
            {
                return _PracticeDescription;
            }
            set
            {
                OnPracticeDescriptionChanging(value);
                ReportPropertyChanging("PracticeDescription");
                _PracticeDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PracticeDescription");
                OnPracticeDescriptionChanged();
            }
        }
        private global::System.String _PracticeDescription;
        partial void OnPracticeDescriptionChanging(global::System.String value);
        partial void OnPracticeDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SpecialityId
        {
            get
            {
                return _SpecialityId;
            }
            set
            {
                OnSpecialityIdChanging(value);
                ReportPropertyChanging("SpecialityId");
                _SpecialityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecialityId");
                OnSpecialityIdChanged();
            }
        }
        private global::System.Guid _SpecialityId;
        partial void OnSpecialityIdChanging(global::System.Guid value);
        partial void OnSpecialityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsExternal
        {
            get
            {
                return _IsExternal;
            }
            set
            {
                OnIsExternalChanging(value);
                ReportPropertyChanging("IsExternal");
                _IsExternal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExternal");
                OnIsExternalChanged();
            }
        }
        private global::System.Boolean _IsExternal;
        partial void OnIsExternalChanging(global::System.Boolean value);
        partial void OnIsExternalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReportName
        {
            get
            {
                return _ReportName;
            }
            set
            {
                OnReportNameChanging(value);
                ReportPropertyChanging("ReportName");
                _ReportName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReportName");
                OnReportNameChanged();
            }
        }
        private global::System.String _ReportName;
        partial void OnReportNameChanging(global::System.String value);
        partial void OnReportNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_GroupMedicalPractice_MedicalPractice", "GroupMedicalPractice")]
        public EntityCollection<GroupMedicalPractice> GroupMedicalPractice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GroupMedicalPractice>("MedilabModel.FK_GroupMedicalPractice_MedicalPractice", "GroupMedicalPractice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GroupMedicalPractice>("MedilabModel.FK_GroupMedicalPractice_MedicalPractice", "GroupMedicalPractice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalPractice_Speciality", "Speciality")]
        public Speciality Speciality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("MedilabModel.FK_MedicalPractice_Speciality", "Speciality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("MedilabModel.FK_MedicalPractice_Speciality", "Speciality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Speciality> SpecialityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("MedilabModel.FK_MedicalPractice_Speciality", "Speciality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Speciality>("MedilabModel.FK_MedicalPractice_Speciality", "Speciality", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistoryPractice_MedicalPractice", "MedicalHistoryPractice")]
        public EntityCollection<MedicalHistoryPractice> MedicalHistoryPractice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalHistoryPractice>("MedilabModel.FK_MedicalHistoryPractice_MedicalPractice", "MedicalHistoryPractice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalHistoryPractice>("MedilabModel.FK_MedicalHistoryPractice_MedicalPractice", "MedicalHistoryPractice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="NextCreditNoteNumber")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NextCreditNoteNumber : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NextCreditNoteNumber object.
        /// </summary>
        /// <param name="creditNoteNumberID">Initial value of the CreditNoteNumberID property.</param>
        /// <param name="creditNoteType">Initial value of the CreditNoteType property.</param>
        /// <param name="masterNumber">Initial value of the MasterNumber property.</param>
        /// <param name="creditNoteNumber">Initial value of the CreditNoteNumber property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static NextCreditNoteNumber CreateNextCreditNoteNumber(global::System.Int32 creditNoteNumberID, global::System.Int32 creditNoteType, global::System.Int32 masterNumber, global::System.Int32 creditNoteNumber, global::System.Byte[] lastUpdated)
        {
            NextCreditNoteNumber nextCreditNoteNumber = new NextCreditNoteNumber();
            nextCreditNoteNumber.CreditNoteNumberID = creditNoteNumberID;
            nextCreditNoteNumber.CreditNoteType = creditNoteType;
            nextCreditNoteNumber.MasterNumber = masterNumber;
            nextCreditNoteNumber.CreditNoteNumber = creditNoteNumber;
            nextCreditNoteNumber.LastUpdated = lastUpdated;
            return nextCreditNoteNumber;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreditNoteNumberID
        {
            get
            {
                return _CreditNoteNumberID;
            }
            set
            {
                if (_CreditNoteNumberID != value)
                {
                    OnCreditNoteNumberIDChanging(value);
                    ReportPropertyChanging("CreditNoteNumberID");
                    _CreditNoteNumberID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreditNoteNumberID");
                    OnCreditNoteNumberIDChanged();
                }
            }
        }
        private global::System.Int32 _CreditNoteNumberID;
        partial void OnCreditNoteNumberIDChanging(global::System.Int32 value);
        partial void OnCreditNoteNumberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreditNoteType
        {
            get
            {
                return _CreditNoteType;
            }
            set
            {
                OnCreditNoteTypeChanging(value);
                ReportPropertyChanging("CreditNoteType");
                _CreditNoteType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditNoteType");
                OnCreditNoteTypeChanged();
            }
        }
        private global::System.Int32 _CreditNoteType;
        partial void OnCreditNoteTypeChanging(global::System.Int32 value);
        partial void OnCreditNoteTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterNumber
        {
            get
            {
                return _MasterNumber;
            }
            set
            {
                OnMasterNumberChanging(value);
                ReportPropertyChanging("MasterNumber");
                _MasterNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterNumber");
                OnMasterNumberChanged();
            }
        }
        private global::System.Int32 _MasterNumber;
        partial void OnMasterNumberChanging(global::System.Int32 value);
        partial void OnMasterNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreditNoteNumber
        {
            get
            {
                return _CreditNoteNumber;
            }
            set
            {
                OnCreditNoteNumberChanging(value);
                ReportPropertyChanging("CreditNoteNumber");
                _CreditNoteNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreditNoteNumber");
                OnCreditNoteNumberChanged();
            }
        }
        private global::System.Int32 _CreditNoteNumber;
        partial void OnCreditNoteNumberChanging(global::System.Int32 value);
        partial void OnCreditNoteNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="NextDebitNoteNumber")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NextDebitNoteNumber : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NextDebitNoteNumber object.
        /// </summary>
        /// <param name="debitNoteNumberID">Initial value of the DebitNoteNumberID property.</param>
        /// <param name="debitNoteType">Initial value of the DebitNoteType property.</param>
        /// <param name="masterNumber">Initial value of the MasterNumber property.</param>
        /// <param name="debitNoteNumber">Initial value of the DebitNoteNumber property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static NextDebitNoteNumber CreateNextDebitNoteNumber(global::System.Int32 debitNoteNumberID, global::System.Int32 debitNoteType, global::System.Int32 masterNumber, global::System.Int32 debitNoteNumber, global::System.Byte[] lastUpdated)
        {
            NextDebitNoteNumber nextDebitNoteNumber = new NextDebitNoteNumber();
            nextDebitNoteNumber.DebitNoteNumberID = debitNoteNumberID;
            nextDebitNoteNumber.DebitNoteType = debitNoteType;
            nextDebitNoteNumber.MasterNumber = masterNumber;
            nextDebitNoteNumber.DebitNoteNumber = debitNoteNumber;
            nextDebitNoteNumber.LastUpdated = lastUpdated;
            return nextDebitNoteNumber;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DebitNoteNumberID
        {
            get
            {
                return _DebitNoteNumberID;
            }
            set
            {
                if (_DebitNoteNumberID != value)
                {
                    OnDebitNoteNumberIDChanging(value);
                    ReportPropertyChanging("DebitNoteNumberID");
                    _DebitNoteNumberID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DebitNoteNumberID");
                    OnDebitNoteNumberIDChanged();
                }
            }
        }
        private global::System.Int32 _DebitNoteNumberID;
        partial void OnDebitNoteNumberIDChanging(global::System.Int32 value);
        partial void OnDebitNoteNumberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DebitNoteType
        {
            get
            {
                return _DebitNoteType;
            }
            set
            {
                OnDebitNoteTypeChanging(value);
                ReportPropertyChanging("DebitNoteType");
                _DebitNoteType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DebitNoteType");
                OnDebitNoteTypeChanged();
            }
        }
        private global::System.Int32 _DebitNoteType;
        partial void OnDebitNoteTypeChanging(global::System.Int32 value);
        partial void OnDebitNoteTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterNumber
        {
            get
            {
                return _MasterNumber;
            }
            set
            {
                OnMasterNumberChanging(value);
                ReportPropertyChanging("MasterNumber");
                _MasterNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterNumber");
                OnMasterNumberChanged();
            }
        }
        private global::System.Int32 _MasterNumber;
        partial void OnMasterNumberChanging(global::System.Int32 value);
        partial void OnMasterNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DebitNoteNumber
        {
            get
            {
                return _DebitNoteNumber;
            }
            set
            {
                OnDebitNoteNumberChanging(value);
                ReportPropertyChanging("DebitNoteNumber");
                _DebitNoteNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DebitNoteNumber");
                OnDebitNoteNumberChanged();
            }
        }
        private global::System.Int32 _DebitNoteNumber;
        partial void OnDebitNoteNumberChanging(global::System.Int32 value);
        partial void OnDebitNoteNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="NextInvoiceNumber")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NextInvoiceNumber : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NextInvoiceNumber object.
        /// </summary>
        /// <param name="invoiceNumberID">Initial value of the InvoiceNumberID property.</param>
        /// <param name="invoiceType">Initial value of the InvoiceType property.</param>
        /// <param name="masterNumber">Initial value of the MasterNumber property.</param>
        /// <param name="invoiceNumber">Initial value of the InvoiceNumber property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static NextInvoiceNumber CreateNextInvoiceNumber(global::System.Int32 invoiceNumberID, global::System.Int32 invoiceType, global::System.Int32 masterNumber, global::System.Int32 invoiceNumber, global::System.Byte[] lastUpdated)
        {
            NextInvoiceNumber nextInvoiceNumber = new NextInvoiceNumber();
            nextInvoiceNumber.InvoiceNumberID = invoiceNumberID;
            nextInvoiceNumber.InvoiceType = invoiceType;
            nextInvoiceNumber.MasterNumber = masterNumber;
            nextInvoiceNumber.InvoiceNumber = invoiceNumber;
            nextInvoiceNumber.LastUpdated = lastUpdated;
            return nextInvoiceNumber;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceNumberID
        {
            get
            {
                return _InvoiceNumberID;
            }
            set
            {
                if (_InvoiceNumberID != value)
                {
                    OnInvoiceNumberIDChanging(value);
                    ReportPropertyChanging("InvoiceNumberID");
                    _InvoiceNumberID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvoiceNumberID");
                    OnInvoiceNumberIDChanged();
                }
            }
        }
        private global::System.Int32 _InvoiceNumberID;
        partial void OnInvoiceNumberIDChanging(global::System.Int32 value);
        partial void OnInvoiceNumberIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceType
        {
            get
            {
                return _InvoiceType;
            }
            set
            {
                OnInvoiceTypeChanging(value);
                ReportPropertyChanging("InvoiceType");
                _InvoiceType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceType");
                OnInvoiceTypeChanged();
            }
        }
        private global::System.Int32 _InvoiceType;
        partial void OnInvoiceTypeChanging(global::System.Int32 value);
        partial void OnInvoiceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MasterNumber
        {
            get
            {
                return _MasterNumber;
            }
            set
            {
                OnMasterNumberChanging(value);
                ReportPropertyChanging("MasterNumber");
                _MasterNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MasterNumber");
                OnMasterNumberChanged();
            }
        }
        private global::System.Int32 _MasterNumber;
        partial void OnMasterNumberChanging(global::System.Int32 value);
        partial void OnMasterNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvoiceNumber
        {
            get
            {
                return _InvoiceNumber;
            }
            set
            {
                OnInvoiceNumberChanging(value);
                ReportPropertyChanging("InvoiceNumber");
                _InvoiceNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceNumber");
                OnInvoiceNumberChanged();
            }
        }
        private global::System.Int32 _InvoiceNumber;
        partial void OnInvoiceNumberChanging(global::System.Int32 value);
        partial void OnInvoiceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="ObjectType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ObjectType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ObjectType object.
        /// </summary>
        /// <param name="objectTypeId">Initial value of the ObjectTypeId property.</param>
        /// <param name="objectTypeName">Initial value of the ObjectTypeName property.</param>
        public static ObjectType CreateObjectType(global::System.Int32 objectTypeId, global::System.String objectTypeName)
        {
            ObjectType objectType = new ObjectType();
            objectType.ObjectTypeId = objectTypeId;
            objectType.ObjectTypeName = objectTypeName;
            return objectType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectTypeId
        {
            get
            {
                return _ObjectTypeId;
            }
            set
            {
                if (_ObjectTypeId != value)
                {
                    OnObjectTypeIdChanging(value);
                    ReportPropertyChanging("ObjectTypeId");
                    _ObjectTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ObjectTypeId");
                    OnObjectTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ObjectTypeId;
        partial void OnObjectTypeIdChanging(global::System.Int32 value);
        partial void OnObjectTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObjectTypeName
        {
            get
            {
                return _ObjectTypeName;
            }
            set
            {
                OnObjectTypeNameChanging(value);
                ReportPropertyChanging("ObjectTypeName");
                _ObjectTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObjectTypeName");
                OnObjectTypeNameChanged();
            }
        }
        private global::System.String _ObjectTypeName;
        partial void OnObjectTypeNameChanging(global::System.String value);
        partial void OnObjectTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Audit_ObjectType", "Audit")]
        public EntityCollection<Audit> Audit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Audit>("MedilabModel.FK_Audit_ObjectType", "Audit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Audit>("MedilabModel.FK_Audit_ObjectType", "Audit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="patientId">Initial value of the PatientId property.</param>
        /// <param name="documentTypeId">Initial value of the DocumentTypeId property.</param>
        /// <param name="documentNumber">Initial value of the DocumentNumber property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="birthDay">Initial value of the BirthDay property.</param>
        /// <param name="genderId">Initial value of the GenderId property.</param>
        /// <param name="childrenNumber">Initial value of the ChildrenNumber property.</param>
        /// <param name="civilStateId">Initial value of the CivilStateId property.</param>
        /// <param name="instructionLevelId">Initial value of the InstructionLevelId property.</param>
        /// <param name="instructionTitle">Initial value of the InstructionTitle property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="observations">Initial value of the Observations property.</param>
        /// <param name="photo">Initial value of the Photo property.</param>
        /// <param name="privateMedicineNumber">Initial value of the PrivateMedicineNumber property.</param>
        /// <param name="nationality">Initial value of the Nationality property.</param>
        /// <param name="birthPlaceId">Initial value of the BirthPlaceId property.</param>
        public static Patient CreatePatient(global::System.Guid patientId, global::System.Int32 documentTypeId, global::System.String documentNumber, global::System.String lastName, global::System.String firstName, global::System.DateTime birthDay, global::System.Int32 genderId, global::System.Int32 childrenNumber, global::System.Int32 civilStateId, global::System.Int32 instructionLevelId, global::System.String instructionTitle, global::System.Boolean isDeleted, global::System.Byte[] lastUpdated, global::System.String observations, global::System.String photo, global::System.String privateMedicineNumber, global::System.String nationality, global::System.Int32 birthPlaceId)
        {
            Patient patient = new Patient();
            patient.PatientId = patientId;
            patient.DocumentTypeId = documentTypeId;
            patient.DocumentNumber = documentNumber;
            patient.LastName = lastName;
            patient.FirstName = firstName;
            patient.BirthDay = birthDay;
            patient.GenderId = genderId;
            patient.ChildrenNumber = childrenNumber;
            patient.CivilStateId = civilStateId;
            patient.InstructionLevelId = instructionLevelId;
            patient.InstructionTitle = instructionTitle;
            patient.IsDeleted = isDeleted;
            patient.LastUpdated = lastUpdated;
            patient.Observations = observations;
            patient.Photo = photo;
            patient.PrivateMedicineNumber = privateMedicineNumber;
            patient.Nationality = nationality;
            patient.BirthPlaceId = birthPlaceId;
            return patient;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PatientId
        {
            get
            {
                return _PatientId;
            }
            set
            {
                if (_PatientId != value)
                {
                    OnPatientIdChanging(value);
                    ReportPropertyChanging("PatientId");
                    _PatientId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PatientId");
                    OnPatientIdChanged();
                }
            }
        }
        private global::System.Guid _PatientId;
        partial void OnPatientIdChanging(global::System.Guid value);
        partial void OnPatientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeId
        {
            get
            {
                return _DocumentTypeId;
            }
            set
            {
                OnDocumentTypeIdChanging(value);
                ReportPropertyChanging("DocumentTypeId");
                _DocumentTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentTypeId");
                OnDocumentTypeIdChanged();
            }
        }
        private global::System.Int32 _DocumentTypeId;
        partial void OnDocumentTypeIdChanging(global::System.Int32 value);
        partial void OnDocumentTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentNumber
        {
            get
            {
                return _DocumentNumber;
            }
            set
            {
                OnDocumentNumberChanging(value);
                ReportPropertyChanging("DocumentNumber");
                _DocumentNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DocumentNumber");
                OnDocumentNumberChanged();
            }
        }
        private global::System.String _DocumentNumber;
        partial void OnDocumentNumberChanging(global::System.String value);
        partial void OnDocumentNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime BirthDay
        {
            get
            {
                return _BirthDay;
            }
            set
            {
                OnBirthDayChanging(value);
                ReportPropertyChanging("BirthDay");
                _BirthDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthDay");
                OnBirthDayChanged();
            }
        }
        private global::System.DateTime _BirthDay;
        partial void OnBirthDayChanging(global::System.DateTime value);
        partial void OnBirthDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GenderId
        {
            get
            {
                return _GenderId;
            }
            set
            {
                OnGenderIdChanging(value);
                ReportPropertyChanging("GenderId");
                _GenderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GenderId");
                OnGenderIdChanged();
            }
        }
        private global::System.Int32 _GenderId;
        partial void OnGenderIdChanging(global::System.Int32 value);
        partial void OnGenderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ChildrenNumber
        {
            get
            {
                return _ChildrenNumber;
            }
            set
            {
                OnChildrenNumberChanging(value);
                ReportPropertyChanging("ChildrenNumber");
                _ChildrenNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChildrenNumber");
                OnChildrenNumberChanged();
            }
        }
        private global::System.Int32 _ChildrenNumber;
        partial void OnChildrenNumberChanging(global::System.Int32 value);
        partial void OnChildrenNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CivilStateId
        {
            get
            {
                return _CivilStateId;
            }
            set
            {
                OnCivilStateIdChanging(value);
                ReportPropertyChanging("CivilStateId");
                _CivilStateId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CivilStateId");
                OnCivilStateIdChanged();
            }
        }
        private global::System.Int32 _CivilStateId;
        partial void OnCivilStateIdChanging(global::System.Int32 value);
        partial void OnCivilStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InstructionLevelId
        {
            get
            {
                return _InstructionLevelId;
            }
            set
            {
                OnInstructionLevelIdChanging(value);
                ReportPropertyChanging("InstructionLevelId");
                _InstructionLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstructionLevelId");
                OnInstructionLevelIdChanged();
            }
        }
        private global::System.Int32 _InstructionLevelId;
        partial void OnInstructionLevelIdChanging(global::System.Int32 value);
        partial void OnInstructionLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InstructionTitle
        {
            get
            {
                return _InstructionTitle;
            }
            set
            {
                OnInstructionTitleChanging(value);
                ReportPropertyChanging("InstructionTitle");
                _InstructionTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InstructionTitle");
                OnInstructionTitleChanged();
            }
        }
        private global::System.String _InstructionTitle;
        partial void OnInstructionTitleChanging(global::System.String value);
        partial void OnInstructionTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomePhoneNumber
        {
            get
            {
                return _HomePhoneNumber;
            }
            set
            {
                OnHomePhoneNumberChanging(value);
                ReportPropertyChanging("HomePhoneNumber");
                _HomePhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HomePhoneNumber");
                OnHomePhoneNumberChanged();
            }
        }
        private global::System.String _HomePhoneNumber;
        partial void OnHomePhoneNumberChanging(global::System.String value);
        partial void OnHomePhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CellPhoneNumber
        {
            get
            {
                return _CellPhoneNumber;
            }
            set
            {
                OnCellPhoneNumberChanging(value);
                ReportPropertyChanging("CellPhoneNumber");
                _CellPhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CellPhoneNumber");
                OnCellPhoneNumberChanged();
            }
        }
        private global::System.String _CellPhoneNumber;
        partial void OnCellPhoneNumberChanging(global::System.String value);
        partial void OnCellPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Observations
        {
            get
            {
                return _Observations;
            }
            set
            {
                OnObservationsChanging(value);
                ReportPropertyChanging("Observations");
                _Observations = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Observations");
                OnObservationsChanged();
            }
        }
        private global::System.String _Observations;
        partial void OnObservationsChanging(global::System.String value);
        partial void OnObservationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> PrivateMedicineId
        {
            get
            {
                return _PrivateMedicineId;
            }
            set
            {
                OnPrivateMedicineIdChanging(value);
                ReportPropertyChanging("PrivateMedicineId");
                _PrivateMedicineId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrivateMedicineId");
                OnPrivateMedicineIdChanged();
            }
        }
        private Nullable<global::System.Guid> _PrivateMedicineId;
        partial void OnPrivateMedicineIdChanging(Nullable<global::System.Guid> value);
        partial void OnPrivateMedicineIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Photo
        {
            get
            {
                return _Photo;
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.String _Photo;
        partial void OnPhotoChanging(global::System.String value);
        partial void OnPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PrivateMedicineNumber
        {
            get
            {
                return _PrivateMedicineNumber;
            }
            set
            {
                OnPrivateMedicineNumberChanging(value);
                ReportPropertyChanging("PrivateMedicineNumber");
                _PrivateMedicineNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PrivateMedicineNumber");
                OnPrivateMedicineNumberChanged();
            }
        }
        private global::System.String _PrivateMedicineNumber;
        partial void OnPrivateMedicineNumberChanging(global::System.String value);
        partial void OnPrivateMedicineNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> WorkRiskInsuranceId
        {
            get
            {
                return _WorkRiskInsuranceId;
            }
            set
            {
                OnWorkRiskInsuranceIdChanging(value);
                ReportPropertyChanging("WorkRiskInsuranceId");
                _WorkRiskInsuranceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WorkRiskInsuranceId");
                OnWorkRiskInsuranceIdChanged();
            }
        }
        private Nullable<global::System.Guid> _WorkRiskInsuranceId;
        partial void OnWorkRiskInsuranceIdChanging(Nullable<global::System.Guid> value);
        partial void OnWorkRiskInsuranceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nationality
        {
            get
            {
                return _Nationality;
            }
            set
            {
                OnNationalityChanging(value);
                ReportPropertyChanging("Nationality");
                _Nationality = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nationality");
                OnNationalityChanged();
            }
        }
        private global::System.String _Nationality;
        partial void OnNationalityChanging(global::System.String value);
        partial void OnNationalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BirthPlaceId
        {
            get
            {
                return _BirthPlaceId;
            }
            set
            {
                OnBirthPlaceIdChanging(value);
                ReportPropertyChanging("BirthPlaceId");
                _BirthPlaceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BirthPlaceId");
                OnBirthPlaceIdChanged();
            }
        }
        private global::System.Int32 _BirthPlaceId;
        partial void OnBirthPlaceIdChanging(global::System.Int32 value);
        partial void OnBirthPlaceIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Patient_CivilState", "CivilState")]
        public CivilState CivilState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CivilState>("MedilabModel.FK_Patient_CivilState", "CivilState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CivilState>("MedilabModel.FK_Patient_CivilState", "CivilState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CivilState> CivilStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CivilState>("MedilabModel.FK_Patient_CivilState", "CivilState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CivilState>("MedilabModel.FK_Patient_CivilState", "CivilState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Patient_DocumentType", "DocumentType")]
        public DocumentType DocumentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("MedilabModel.FK_Patient_DocumentType", "DocumentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("MedilabModel.FK_Patient_DocumentType", "DocumentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentType> DocumentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("MedilabModel.FK_Patient_DocumentType", "DocumentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentType>("MedilabModel.FK_Patient_DocumentType", "DocumentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Patient_Gender", "Gender")]
        public Gender Gender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("MedilabModel.FK_Patient_Gender", "Gender").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("MedilabModel.FK_Patient_Gender", "Gender").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Gender> GenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Gender>("MedilabModel.FK_Patient_Gender", "Gender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Gender>("MedilabModel.FK_Patient_Gender", "Gender", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Patient_InstructionLevel", "InstructionLevel")]
        public InstructionLevel InstructionLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstructionLevel>("MedilabModel.FK_Patient_InstructionLevel", "InstructionLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstructionLevel>("MedilabModel.FK_Patient_InstructionLevel", "InstructionLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InstructionLevel> InstructionLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InstructionLevel>("MedilabModel.FK_Patient_InstructionLevel", "InstructionLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InstructionLevel>("MedilabModel.FK_Patient_InstructionLevel", "InstructionLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceDetail_Patient", "InvoiceDetail")]
        public EntityCollection<InvoiceDetail> InvoiceDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceDetail>("MedilabModel.FK_InvoiceDetail_Patient", "InvoiceDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceDetail>("MedilabModel.FK_InvoiceDetail_Patient", "InvoiceDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistory_Patient", "MedicalHistory")]
        public EntityCollection<MedicalHistory> MedicalHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalHistory>("MedilabModel.FK_MedicalHistory_Patient", "MedicalHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalHistory>("MedilabModel.FK_MedicalHistory_Patient", "MedicalHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Patient_PrivateMedicineCompany", "PrivateMedicineCompany")]
        public PrivateMedicineCompany PrivateMedicineCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateMedicineCompany>("MedilabModel.FK_Patient_PrivateMedicineCompany", "PrivateMedicineCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateMedicineCompany>("MedilabModel.FK_Patient_PrivateMedicineCompany", "PrivateMedicineCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrivateMedicineCompany> PrivateMedicineCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivateMedicineCompany>("MedilabModel.FK_Patient_PrivateMedicineCompany", "PrivateMedicineCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrivateMedicineCompany>("MedilabModel.FK_Patient_PrivateMedicineCompany", "PrivateMedicineCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Patient_State", "State")]
        public State State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("MedilabModel.FK_Patient_State", "State").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("MedilabModel.FK_Patient_State", "State").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<State> StateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<State>("MedilabModel.FK_Patient_State", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<State>("MedilabModel.FK_Patient_State", "State", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Patient_WorkRiskInsurance", "WorkRiskInsurance")]
        public WorkRiskInsurance WorkRiskInsurance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkRiskInsurance>("MedilabModel.FK_Patient_WorkRiskInsurance", "WorkRiskInsurance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkRiskInsurance>("MedilabModel.FK_Patient_WorkRiskInsurance", "WorkRiskInsurance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WorkRiskInsurance> WorkRiskInsuranceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WorkRiskInsurance>("MedilabModel.FK_Patient_WorkRiskInsurance", "WorkRiskInsurance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WorkRiskInsurance>("MedilabModel.FK_Patient_WorkRiskInsurance", "WorkRiskInsurance", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="PracticeGroupPrice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PracticeGroupPrice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PracticeGroupPrice object.
        /// </summary>
        /// <param name="priceId">Initial value of the PriceId property.</param>
        /// <param name="practiceGroupId">Initial value of the PracticeGroupId property.</param>
        /// <param name="price">Initial value of the Price property.</param>
        public static PracticeGroupPrice CreatePracticeGroupPrice(global::System.Guid priceId, global::System.Guid practiceGroupId, global::System.Double price)
        {
            PracticeGroupPrice practiceGroupPrice = new PracticeGroupPrice();
            practiceGroupPrice.PriceId = priceId;
            practiceGroupPrice.PracticeGroupId = practiceGroupId;
            practiceGroupPrice.Price = price;
            return practiceGroupPrice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PriceId
        {
            get
            {
                return _PriceId;
            }
            set
            {
                if (_PriceId != value)
                {
                    OnPriceIdChanging(value);
                    ReportPropertyChanging("PriceId");
                    _PriceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PriceId");
                    OnPriceIdChanged();
                }
            }
        }
        private global::System.Guid _PriceId;
        partial void OnPriceIdChanging(global::System.Guid value);
        partial void OnPriceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PracticeGroupId
        {
            get
            {
                return _PracticeGroupId;
            }
            set
            {
                OnPracticeGroupIdChanging(value);
                ReportPropertyChanging("PracticeGroupId");
                _PracticeGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PracticeGroupId");
                OnPracticeGroupIdChanged();
            }
        }
        private global::System.Guid _PracticeGroupId;
        partial void OnPracticeGroupIdChanging(global::System.Guid value);
        partial void OnPracticeGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private Nullable<global::System.Guid> _ClientId;
        partial void OnClientIdChanging(Nullable<global::System.Guid> value);
        partial void OnClientIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_PracticeGroupPrice_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_PracticeGroupPrice_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_PracticeGroupPrice_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_PracticeGroupPrice_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("MedilabModel.FK_PracticeGroupPrice_Client", "Client", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="PrivateMedicineCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivateMedicineCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivateMedicineCompany object.
        /// </summary>
        /// <param name="privateMedicineCompanyId">Initial value of the PrivateMedicineCompanyId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        public static PrivateMedicineCompany CreatePrivateMedicineCompany(global::System.Guid privateMedicineCompanyId, global::System.String name, global::System.Byte[] lastUpdated, global::System.Boolean isDeleted)
        {
            PrivateMedicineCompany privateMedicineCompany = new PrivateMedicineCompany();
            privateMedicineCompany.PrivateMedicineCompanyId = privateMedicineCompanyId;
            privateMedicineCompany.Name = name;
            privateMedicineCompany.LastUpdated = lastUpdated;
            privateMedicineCompany.IsDeleted = isDeleted;
            return privateMedicineCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PrivateMedicineCompanyId
        {
            get
            {
                return _PrivateMedicineCompanyId;
            }
            set
            {
                if (_PrivateMedicineCompanyId != value)
                {
                    OnPrivateMedicineCompanyIdChanging(value);
                    ReportPropertyChanging("PrivateMedicineCompanyId");
                    _PrivateMedicineCompanyId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrivateMedicineCompanyId");
                    OnPrivateMedicineCompanyIdChanged();
                }
            }
        }
        private global::System.Guid _PrivateMedicineCompanyId;
        partial void OnPrivateMedicineCompanyIdChanging(global::System.Guid value);
        partial void OnPrivateMedicineCompanyIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Patient_PrivateMedicineCompany", "Patient")]
        public EntityCollection<Patient> Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("MedilabModel.FK_Patient_PrivateMedicineCompany", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("MedilabModel.FK_Patient_PrivateMedicineCompany", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="Receipt")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Receipt : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Receipt object.
        /// </summary>
        /// <param name="receiptId">Initial value of the ReceiptId property.</param>
        /// <param name="receiptNumber">Initial value of the ReceiptNumber property.</param>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        /// <param name="total">Initial value of the Total property.</param>
        /// <param name="createUserId">Initial value of the CreateUserId property.</param>
        /// <param name="lastUpdateUserId">Initial value of the LastUpdateUserId property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="discount">Initial value of the Discount property.</param>
        /// <param name="notes">Initial value of the Notes property.</param>
        public static Receipt CreateReceipt(global::System.Guid receiptId, global::System.String receiptNumber, global::System.Guid clientId, global::System.Double total, global::System.Guid createUserId, global::System.Guid lastUpdateUserId, global::System.DateTime createdDate, global::System.DateTime date, global::System.Double discount, global::System.String notes)
        {
            Receipt receipt = new Receipt();
            receipt.ReceiptId = receiptId;
            receipt.ReceiptNumber = receiptNumber;
            receipt.ClientId = clientId;
            receipt.Total = total;
            receipt.CreateUserId = createUserId;
            receipt.LastUpdateUserId = lastUpdateUserId;
            receipt.CreatedDate = createdDate;
            receipt.Date = date;
            receipt.Discount = discount;
            receipt.Notes = notes;
            return receipt;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReceiptId
        {
            get
            {
                return _ReceiptId;
            }
            set
            {
                if (_ReceiptId != value)
                {
                    OnReceiptIdChanging(value);
                    ReportPropertyChanging("ReceiptId");
                    _ReceiptId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReceiptId");
                    OnReceiptIdChanged();
                }
            }
        }
        private global::System.Guid _ReceiptId;
        partial void OnReceiptIdChanging(global::System.Guid value);
        partial void OnReceiptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReceiptNumber
        {
            get
            {
                return _ReceiptNumber;
            }
            set
            {
                OnReceiptNumberChanging(value);
                ReportPropertyChanging("ReceiptNumber");
                _ReceiptNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReceiptNumber");
                OnReceiptNumberChanged();
            }
        }
        private global::System.String _ReceiptNumber;
        partial void OnReceiptNumberChanging(global::System.String value);
        partial void OnReceiptNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private global::System.Guid _ClientId;
        partial void OnClientIdChanging(global::System.Guid value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private global::System.Double _Total;
        partial void OnTotalChanging(global::System.Double value);
        partial void OnTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CreateUserId
        {
            get
            {
                return _CreateUserId;
            }
            set
            {
                OnCreateUserIdChanging(value);
                ReportPropertyChanging("CreateUserId");
                _CreateUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateUserId");
                OnCreateUserIdChanged();
            }
        }
        private global::System.Guid _CreateUserId;
        partial void OnCreateUserIdChanging(global::System.Guid value);
        partial void OnCreateUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LastUpdateUserId
        {
            get
            {
                return _LastUpdateUserId;
            }
            set
            {
                OnLastUpdateUserIdChanging(value);
                ReportPropertyChanging("LastUpdateUserId");
                _LastUpdateUserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdateUserId");
                OnLastUpdateUserIdChanged();
            }
        }
        private global::System.Guid _LastUpdateUserId;
        partial void OnLastUpdateUserIdChanging(global::System.Guid value);
        partial void OnLastUpdateUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReceiverName
        {
            get
            {
                return _ReceiverName;
            }
            set
            {
                OnReceiverNameChanging(value);
                ReportPropertyChanging("ReceiverName");
                _ReceiverName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReceiverName");
                OnReceiverNameChanged();
            }
        }
        private global::System.String _ReceiverName;
        partial void OnReceiverNameChanging(global::System.String value);
        partial void OnReceiverNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private global::System.Double _Discount;
        partial void OnDiscountChanging(global::System.Double value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Cash_Receipt", "Cash")]
        public EntityCollection<Cash> Cash
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cash>("MedilabModel.FK_Cash_Receipt", "Cash");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cash>("MedilabModel.FK_Cash_Receipt", "Cash", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Check_Receipt", "Check")]
        public EntityCollection<Check> Check
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Check>("MedilabModel.FK_Check_Receipt", "Check");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Check>("MedilabModel.FK_Check_Receipt", "Check", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Receipt_Client", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_Receipt_Client", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_Receipt_Client", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("MedilabModel.FK_Receipt_Client", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("MedilabModel.FK_Receipt_Client", "Client", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_ElectronicTrasnfer_Receipt", "ElectronicTransfer")]
        public EntityCollection<ElectronicTransfer> ElectronicTransfer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ElectronicTransfer>("MedilabModel.FK_ElectronicTrasnfer_Receipt", "ElectronicTransfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ElectronicTransfer>("MedilabModel.FK_ElectronicTrasnfer_Receipt", "ElectronicTransfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Receipt_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_Receipt_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_Receipt_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_Receipt_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MedilabModel.FK_Receipt_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Receipt_User1", "User")]
        public User User1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_Receipt_User1", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_Receipt_User1", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> User1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_Receipt_User1", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MedilabModel.FK_Receipt_User1", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_RetentionCertificate_Receipt", "RetentionCertificate")]
        public EntityCollection<RetentionCertificate> RetentionCertificate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RetentionCertificate>("MedilabModel.FK_RetentionCertificate_Receipt", "RetentionCertificate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RetentionCertificate>("MedilabModel.FK_RetentionCertificate_Receipt", "RetentionCertificate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_ReceiptInvoice_Receipt", "ReceiptInvoice")]
        public EntityCollection<ReceiptInvoice> ReceiptInvoice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReceiptInvoice>("MedilabModel.FK_ReceiptInvoice_Receipt", "ReceiptInvoice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReceiptInvoice>("MedilabModel.FK_ReceiptInvoice_Receipt", "ReceiptInvoice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_CreditNote_Receipt", "CreditNote")]
        public EntityCollection<CreditNote> CreditNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CreditNote>("MedilabModel.FK_CreditNote_Receipt", "CreditNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CreditNote>("MedilabModel.FK_CreditNote_Receipt", "CreditNote", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="ReceiptInvoice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReceiptInvoice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReceiptInvoice object.
        /// </summary>
        /// <param name="receiptInvoiceId">Initial value of the ReceiptInvoiceId property.</param>
        /// <param name="receiptId">Initial value of the ReceiptId property.</param>
        /// <param name="invoiceId">Initial value of the InvoiceId property.</param>
        /// <param name="paymentAmount">Initial value of the PaymentAmount property.</param>
        /// <param name="voucherType">Initial value of the VoucherType property.</param>
        public static ReceiptInvoice CreateReceiptInvoice(global::System.Guid receiptInvoiceId, global::System.Guid receiptId, global::System.Guid invoiceId, global::System.Double paymentAmount, global::System.Int32 voucherType)
        {
            ReceiptInvoice receiptInvoice = new ReceiptInvoice();
            receiptInvoice.ReceiptInvoiceId = receiptInvoiceId;
            receiptInvoice.ReceiptId = receiptId;
            receiptInvoice.InvoiceId = invoiceId;
            receiptInvoice.PaymentAmount = paymentAmount;
            receiptInvoice.VoucherType = voucherType;
            return receiptInvoice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReceiptInvoiceId
        {
            get
            {
                return _ReceiptInvoiceId;
            }
            set
            {
                if (_ReceiptInvoiceId != value)
                {
                    OnReceiptInvoiceIdChanging(value);
                    ReportPropertyChanging("ReceiptInvoiceId");
                    _ReceiptInvoiceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReceiptInvoiceId");
                    OnReceiptInvoiceIdChanged();
                }
            }
        }
        private global::System.Guid _ReceiptInvoiceId;
        partial void OnReceiptInvoiceIdChanging(global::System.Guid value);
        partial void OnReceiptInvoiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReceiptId
        {
            get
            {
                return _ReceiptId;
            }
            set
            {
                OnReceiptIdChanging(value);
                ReportPropertyChanging("ReceiptId");
                _ReceiptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiptId");
                OnReceiptIdChanged();
            }
        }
        private global::System.Guid _ReceiptId;
        partial void OnReceiptIdChanging(global::System.Guid value);
        partial void OnReceiptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InvoiceId
        {
            get
            {
                return _InvoiceId;
            }
            set
            {
                OnInvoiceIdChanging(value);
                ReportPropertyChanging("InvoiceId");
                _InvoiceId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceId");
                OnInvoiceIdChanged();
            }
        }
        private global::System.Guid _InvoiceId;
        partial void OnInvoiceIdChanging(global::System.Guid value);
        partial void OnInvoiceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PaymentAmount
        {
            get
            {
                return _PaymentAmount;
            }
            set
            {
                OnPaymentAmountChanging(value);
                ReportPropertyChanging("PaymentAmount");
                _PaymentAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentAmount");
                OnPaymentAmountChanged();
            }
        }
        private global::System.Double _PaymentAmount;
        partial void OnPaymentAmountChanging(global::System.Double value);
        partial void OnPaymentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VoucherType
        {
            get
            {
                return _VoucherType;
            }
            set
            {
                OnVoucherTypeChanging(value);
                ReportPropertyChanging("VoucherType");
                _VoucherType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VoucherType");
                OnVoucherTypeChanged();
            }
        }
        private global::System.Int32 _VoucherType;
        partial void OnVoucherTypeChanging(global::System.Int32 value);
        partial void OnVoucherTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_ReceiptInvoice_Receipt", "Receipt")]
        public Receipt Receipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_ReceiptInvoice_Receipt", "Receipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_ReceiptInvoice_Receipt", "Receipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Receipt> ReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_ReceiptInvoice_Receipt", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Receipt>("MedilabModel.FK_ReceiptInvoice_Receipt", "Receipt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="RetentionCertificate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RetentionCertificate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RetentionCertificate object.
        /// </summary>
        /// <param name="retentionCertificateId">Initial value of the RetentionCertificateId property.</param>
        /// <param name="retentionImport">Initial value of the RetentionImport property.</param>
        /// <param name="paymentDate">Initial value of the PaymentDate property.</param>
        /// <param name="retentionType">Initial value of the RetentionType property.</param>
        /// <param name="notes">Initial value of the Notes property.</param>
        /// <param name="receiptId">Initial value of the ReceiptId property.</param>
        /// <param name="certificateNumber">Initial value of the CertificateNumber property.</param>
        public static RetentionCertificate CreateRetentionCertificate(global::System.Guid retentionCertificateId, global::System.Double retentionImport, global::System.DateTime paymentDate, global::System.Int32 retentionType, global::System.String notes, global::System.Guid receiptId, global::System.String certificateNumber)
        {
            RetentionCertificate retentionCertificate = new RetentionCertificate();
            retentionCertificate.RetentionCertificateId = retentionCertificateId;
            retentionCertificate.RetentionImport = retentionImport;
            retentionCertificate.PaymentDate = paymentDate;
            retentionCertificate.RetentionType = retentionType;
            retentionCertificate.Notes = notes;
            retentionCertificate.ReceiptId = receiptId;
            retentionCertificate.CertificateNumber = certificateNumber;
            return retentionCertificate;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RetentionCertificateId
        {
            get
            {
                return _RetentionCertificateId;
            }
            set
            {
                if (_RetentionCertificateId != value)
                {
                    OnRetentionCertificateIdChanging(value);
                    ReportPropertyChanging("RetentionCertificateId");
                    _RetentionCertificateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RetentionCertificateId");
                    OnRetentionCertificateIdChanged();
                }
            }
        }
        private global::System.Guid _RetentionCertificateId;
        partial void OnRetentionCertificateIdChanging(global::System.Guid value);
        partial void OnRetentionCertificateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RetentionImport
        {
            get
            {
                return _RetentionImport;
            }
            set
            {
                OnRetentionImportChanging(value);
                ReportPropertyChanging("RetentionImport");
                _RetentionImport = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RetentionImport");
                OnRetentionImportChanged();
            }
        }
        private global::System.Double _RetentionImport;
        partial void OnRetentionImportChanging(global::System.Double value);
        partial void OnRetentionImportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PaymentDate
        {
            get
            {
                return _PaymentDate;
            }
            set
            {
                OnPaymentDateChanging(value);
                ReportPropertyChanging("PaymentDate");
                _PaymentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentDate");
                OnPaymentDateChanged();
            }
        }
        private global::System.DateTime _PaymentDate;
        partial void OnPaymentDateChanging(global::System.DateTime value);
        partial void OnPaymentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RetentionType
        {
            get
            {
                return _RetentionType;
            }
            set
            {
                OnRetentionTypeChanging(value);
                ReportPropertyChanging("RetentionType");
                _RetentionType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RetentionType");
                OnRetentionTypeChanged();
            }
        }
        private global::System.Int32 _RetentionType;
        partial void OnRetentionTypeChanging(global::System.Int32 value);
        partial void OnRetentionTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ReceiptId
        {
            get
            {
                return _ReceiptId;
            }
            set
            {
                OnReceiptIdChanging(value);
                ReportPropertyChanging("ReceiptId");
                _ReceiptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiptId");
                OnReceiptIdChanged();
            }
        }
        private global::System.Guid _ReceiptId;
        partial void OnReceiptIdChanging(global::System.Guid value);
        partial void OnReceiptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CertificateNumber
        {
            get
            {
                return _CertificateNumber;
            }
            set
            {
                OnCertificateNumberChanging(value);
                ReportPropertyChanging("CertificateNumber");
                _CertificateNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CertificateNumber");
                OnCertificateNumberChanged();
            }
        }
        private global::System.String _CertificateNumber;
        partial void OnCertificateNumberChanging(global::System.String value);
        partial void OnCertificateNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_RetentionCertificate_Receipt", "Receipt")]
        public Receipt Receipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_RetentionCertificate_Receipt", "Receipt").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_RetentionCertificate_Receipt", "Receipt").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Receipt> ReceiptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Receipt>("MedilabModel.FK_RetentionCertificate_Receipt", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Receipt>("MedilabModel.FK_RetentionCertificate_Receipt", "Receipt", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="roleDescription">Initial value of the RoleDescription property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static Role CreateRole(global::System.Guid roleId, global::System.String roleName, global::System.String roleDescription, global::System.Byte[] lastUpdated)
        {
            Role role = new Role();
            role.RoleId = roleId;
            role.RoleName = roleName;
            role.RoleDescription = roleDescription;
            role.LastUpdated = lastUpdated;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleDescription
        {
            get
            {
                return _RoleDescription;
            }
            set
            {
                OnRoleDescriptionChanging(value);
                ReportPropertyChanging("RoleDescription");
                _RoleDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleDescription");
                OnRoleDescriptionChanged();
            }
        }
        private global::System.String _RoleDescription;
        partial void OnRoleDescriptionChanging(global::System.String value);
        partial void OnRoleDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_RolePrivilege_Role", "RolePrivilege")]
        public EntityCollection<RolePrivilege> RolePrivilege
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RolePrivilege>("MedilabModel.FK_RolePrivilege_Role", "RolePrivilege");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RolePrivilege>("MedilabModel.FK_RolePrivilege_Role", "RolePrivilege", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_UserRole_Role", "UserRole")]
        public EntityCollection<UserRole> UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("MedilabModel.FK_UserRole_Role", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("MedilabModel.FK_UserRole_Role", "UserRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="RolePrivilege")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RolePrivilege : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RolePrivilege object.
        /// </summary>
        /// <param name="rolePrivilegeId">Initial value of the RolePrivilegeId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="privilegeName">Initial value of the PrivilegeName property.</param>
        public static RolePrivilege CreateRolePrivilege(global::System.Guid rolePrivilegeId, global::System.Guid roleId, global::System.String privilegeName)
        {
            RolePrivilege rolePrivilege = new RolePrivilege();
            rolePrivilege.RolePrivilegeId = rolePrivilegeId;
            rolePrivilege.RoleId = roleId;
            rolePrivilege.PrivilegeName = privilegeName;
            return rolePrivilege;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RolePrivilegeId
        {
            get
            {
                return _RolePrivilegeId;
            }
            set
            {
                if (_RolePrivilegeId != value)
                {
                    OnRolePrivilegeIdChanging(value);
                    ReportPropertyChanging("RolePrivilegeId");
                    _RolePrivilegeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RolePrivilegeId");
                    OnRolePrivilegeIdChanged();
                }
            }
        }
        private global::System.Guid _RolePrivilegeId;
        partial void OnRolePrivilegeIdChanging(global::System.Guid value);
        partial void OnRolePrivilegeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PrivilegeName
        {
            get
            {
                return _PrivilegeName;
            }
            set
            {
                OnPrivilegeNameChanging(value);
                ReportPropertyChanging("PrivilegeName");
                _PrivilegeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PrivilegeName");
                OnPrivilegeNameChanged();
            }
        }
        private global::System.String _PrivilegeName;
        partial void OnPrivilegeNameChanging(global::System.String value);
        partial void OnPrivilegeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_RolePrivilege_Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("MedilabModel.FK_RolePrivilege_Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("MedilabModel.FK_RolePrivilege_Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("MedilabModel.FK_RolePrivilege_Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("MedilabModel.FK_RolePrivilege_Role", "Role", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="Speciality")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Speciality : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Speciality object.
        /// </summary>
        /// <param name="specialityId">Initial value of the SpecialityId property.</param>
        /// <param name="specialityName">Initial value of the SpecialityName property.</param>
        /// <param name="specialityDescription">Initial value of the SpecialityDescription property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="specialityDisplayName">Initial value of the SpecialityDisplayName property.</param>
        public static Speciality CreateSpeciality(global::System.Guid specialityId, global::System.String specialityName, global::System.String specialityDescription, global::System.Byte[] lastUpdated, global::System.Boolean isDeleted, global::System.String specialityDisplayName)
        {
            Speciality speciality = new Speciality();
            speciality.SpecialityId = specialityId;
            speciality.SpecialityName = specialityName;
            speciality.SpecialityDescription = specialityDescription;
            speciality.LastUpdated = lastUpdated;
            speciality.IsDeleted = isDeleted;
            speciality.SpecialityDisplayName = specialityDisplayName;
            return speciality;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SpecialityId
        {
            get
            {
                return _SpecialityId;
            }
            set
            {
                if (_SpecialityId != value)
                {
                    OnSpecialityIdChanging(value);
                    ReportPropertyChanging("SpecialityId");
                    _SpecialityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SpecialityId");
                    OnSpecialityIdChanged();
                }
            }
        }
        private global::System.Guid _SpecialityId;
        partial void OnSpecialityIdChanging(global::System.Guid value);
        partial void OnSpecialityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SpecialityName
        {
            get
            {
                return _SpecialityName;
            }
            set
            {
                OnSpecialityNameChanging(value);
                ReportPropertyChanging("SpecialityName");
                _SpecialityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SpecialityName");
                OnSpecialityNameChanged();
            }
        }
        private global::System.String _SpecialityName;
        partial void OnSpecialityNameChanging(global::System.String value);
        partial void OnSpecialityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SpecialityDescription
        {
            get
            {
                return _SpecialityDescription;
            }
            set
            {
                OnSpecialityDescriptionChanging(value);
                ReportPropertyChanging("SpecialityDescription");
                _SpecialityDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SpecialityDescription");
                OnSpecialityDescriptionChanged();
            }
        }
        private global::System.String _SpecialityDescription;
        partial void OnSpecialityDescriptionChanging(global::System.String value);
        partial void OnSpecialityDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SpecialityDisplayName
        {
            get
            {
                return _SpecialityDisplayName;
            }
            set
            {
                OnSpecialityDisplayNameChanging(value);
                ReportPropertyChanging("SpecialityDisplayName");
                _SpecialityDisplayName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SpecialityDisplayName");
                OnSpecialityDisplayNameChanged();
            }
        }
        private global::System.String _SpecialityDisplayName;
        partial void OnSpecialityDisplayNameChanging(global::System.String value);
        partial void OnSpecialityDisplayNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_User_Speciality", "User")]
        public EntityCollection<User> User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("MedilabModel.FK_User_Speciality", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("MedilabModel.FK_User_Speciality", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalPractice_Speciality", "MedicalPractice")]
        public EntityCollection<MedicalPractice> MedicalPractice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalPractice>("MedilabModel.FK_MedicalPractice_Speciality", "MedicalPractice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalPractice>("MedilabModel.FK_MedicalPractice_Speciality", "MedicalPractice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="stateName">Initial value of the StateName property.</param>
        /// <param name="stateId">Initial value of the StateId property.</param>
        public static State CreateState(global::System.String stateName, global::System.Int32 stateId)
        {
            State state = new State();
            state.StateName = stateName;
            state.StateId = stateId;
            return state;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateName
        {
            get
            {
                return _StateName;
            }
            set
            {
                OnStateNameChanging(value);
                ReportPropertyChanging("StateName");
                _StateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StateName");
                OnStateNameChanged();
            }
        }
        private global::System.String _StateName;
        partial void OnStateNameChanging(global::System.String value);
        partial void OnStateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                if (_StateId != value)
                {
                    OnStateIdChanging(value);
                    ReportPropertyChanging("StateId");
                    _StateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StateId");
                    OnStateIdChanged();
                }
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Address_State", "Address")]
        public EntityCollection<Address> Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("MedilabModel.FK_Address_State", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("MedilabModel.FK_Address_State", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Patient_State", "Patient")]
        public EntityCollection<Patient> Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("MedilabModel.FK_Patient_State", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("MedilabModel.FK_Patient_State", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="userFirstName">Initial value of the UserFirstName property.</param>
        /// <param name="userLastName">Initial value of the UserLastName property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        /// <param name="specialityId">Initial value of the SpecialityId property.</param>
        public static User CreateUser(global::System.Guid userId, global::System.String userName, global::System.String userFirstName, global::System.String userLastName, global::System.String emailAddress, global::System.String password, global::System.Boolean isActive, global::System.Boolean isDeleted, global::System.Byte[] lastUpdated, global::System.Guid specialityId)
        {
            User user = new User();
            user.UserId = userId;
            user.UserName = userName;
            user.UserFirstName = userFirstName;
            user.UserLastName = userLastName;
            user.EmailAddress = emailAddress;
            user.Password = password;
            user.IsActive = isActive;
            user.IsDeleted = isDeleted;
            user.LastUpdated = lastUpdated;
            user.SpecialityId = specialityId;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserFirstName
        {
            get
            {
                return _UserFirstName;
            }
            set
            {
                OnUserFirstNameChanging(value);
                ReportPropertyChanging("UserFirstName");
                _UserFirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserFirstName");
                OnUserFirstNameChanged();
            }
        }
        private global::System.String _UserFirstName;
        partial void OnUserFirstNameChanging(global::System.String value);
        partial void OnUserFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserLastName
        {
            get
            {
                return _UserLastName;
            }
            set
            {
                OnUserLastNameChanging(value);
                ReportPropertyChanging("UserLastName");
                _UserLastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserLastName");
                OnUserLastNameChanged();
            }
        }
        private global::System.String _UserLastName;
        partial void OnUserLastNameChanging(global::System.String value);
        partial void OnUserLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SpecialityId
        {
            get
            {
                return _SpecialityId;
            }
            set
            {
                OnSpecialityIdChanging(value);
                ReportPropertyChanging("SpecialityId");
                _SpecialityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecialityId");
                OnSpecialityIdChanged();
            }
        }
        private global::System.Guid _SpecialityId;
        partial void OnSpecialityIdChanging(global::System.Guid value);
        partial void OnSpecialityIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Audit_User", "Audit")]
        public EntityCollection<Audit> Audit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Audit>("MedilabModel.FK_Audit_User", "Audit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Audit>("MedilabModel.FK_Audit_User", "Audit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_UserRole_User", "UserRole")]
        public EntityCollection<UserRole> UserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRole>("MedilabModel.FK_UserRole_User", "UserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRole>("MedilabModel.FK_UserRole_User", "UserRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_User_Speciality", "Speciality")]
        public Speciality Speciality
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("MedilabModel.FK_User_Speciality", "Speciality").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("MedilabModel.FK_User_Speciality", "Speciality").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Speciality> SpecialityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Speciality>("MedilabModel.FK_User_Speciality", "Speciality");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Speciality>("MedilabModel.FK_User_Speciality", "Speciality", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceProfile_User", "InvoiceProfile")]
        public EntityCollection<InvoiceProfile> InvoiceProfile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceProfile>("MedilabModel.FK_InvoiceProfile_User", "InvoiceProfile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceProfile>("MedilabModel.FK_InvoiceProfile_User", "InvoiceProfile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistoryResult_User", "MedicalHistoryResult")]
        public EntityCollection<MedicalHistoryResult> MedicalHistoryResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalHistoryResult>("MedilabModel.FK_MedicalHistoryResult_User", "MedicalHistoryResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalHistoryResult>("MedilabModel.FK_MedicalHistoryResult_User", "MedicalHistoryResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistoryPractice_User", "MedicalHistoryPractice")]
        public EntityCollection<MedicalHistoryPractice> MedicalHistoryPractice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalHistoryPractice>("MedilabModel.FK_MedicalHistoryPractice_User", "MedicalHistoryPractice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalHistoryPractice>("MedilabModel.FK_MedicalHistoryPractice_User", "MedicalHistoryPractice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_MedicalHistory_User", "MedicalHistory")]
        public EntityCollection<MedicalHistory> MedicalHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalHistory>("MedilabModel.FK_MedicalHistory_User", "MedicalHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalHistory>("MedilabModel.FK_MedicalHistory_User", "MedicalHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Receipt_User", "Receipt")]
        public EntityCollection<Receipt> Receipt
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Receipt>("MedilabModel.FK_Receipt_User", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Receipt>("MedilabModel.FK_Receipt_User", "Receipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Receipt_User1", "Receipt")]
        public EntityCollection<Receipt> Receipt1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Receipt>("MedilabModel.FK_Receipt_User1", "Receipt");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Receipt>("MedilabModel.FK_Receipt_User1", "Receipt", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_FiscalRetention_User", "FiscalRetention")]
        public EntityCollection<FiscalRetention> FiscalRetention
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FiscalRetention>("MedilabModel.FK_FiscalRetention_User", "FiscalRetention");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FiscalRetention>("MedilabModel.FK_FiscalRetention_User", "FiscalRetention", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceHeader_User", "InvoiceHeader")]
        public EntityCollection<InvoiceHeader> InvoiceHeader
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceHeader>("MedilabModel.FK_InvoiceHeader_User", "InvoiceHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceHeader>("MedilabModel.FK_InvoiceHeader_User", "InvoiceHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_InvoiceHeader_User1", "InvoiceHeader")]
        public EntityCollection<InvoiceHeader> InvoiceHeader1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvoiceHeader>("MedilabModel.FK_InvoiceHeader_User1", "InvoiceHeader");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvoiceHeader>("MedilabModel.FK_InvoiceHeader_User1", "InvoiceHeader", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_DebitNote_User", "DebitNote")]
        public EntityCollection<DebitNote> DebitNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DebitNote>("MedilabModel.FK_DebitNote_User", "DebitNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DebitNote>("MedilabModel.FK_DebitNote_User", "DebitNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_CreditNote_User", "CreditNote")]
        public EntityCollection<CreditNote> CreditNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CreditNote>("MedilabModel.FK_CreditNote_User", "CreditNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CreditNote>("MedilabModel.FK_CreditNote_User", "CreditNote", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="UserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRole object.
        /// </summary>
        /// <param name="userRoleId">Initial value of the UserRoleId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        public static UserRole CreateUserRole(global::System.Guid userRoleId, global::System.Guid userId, global::System.Guid roleId)
        {
            UserRole userRole = new UserRole();
            userRole.UserRoleId = userRoleId;
            userRole.UserId = userId;
            userRole.RoleId = roleId;
            return userRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserRoleId
        {
            get
            {
                return _UserRoleId;
            }
            set
            {
                if (_UserRoleId != value)
                {
                    OnUserRoleIdChanging(value);
                    ReportPropertyChanging("UserRoleId");
                    _UserRoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserRoleId");
                    OnUserRoleIdChanged();
                }
            }
        }
        private global::System.Guid _UserRoleId;
        partial void OnUserRoleIdChanging(global::System.Guid value);
        partial void OnUserRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                OnRoleIdChanging(value);
                ReportPropertyChanging("RoleId");
                _RoleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleId");
                OnRoleIdChanged();
            }
        }
        private global::System.Guid _RoleId;
        partial void OnRoleIdChanging(global::System.Guid value);
        partial void OnRoleIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_UserRole_Role", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("MedilabModel.FK_UserRole_Role", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("MedilabModel.FK_UserRole_Role", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("MedilabModel.FK_UserRole_Role", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("MedilabModel.FK_UserRole_Role", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_UserRole_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_UserRole_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_UserRole_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("MedilabModel.FK_UserRole_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("MedilabModel.FK_UserRole_User", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MedilabModel", Name="WorkRiskInsurance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkRiskInsurance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkRiskInsurance object.
        /// </summary>
        /// <param name="workRiskInsuranceId">Initial value of the WorkRiskInsuranceId property.</param>
        /// <param name="workRiskInsuranceName">Initial value of the WorkRiskInsuranceName property.</param>
        /// <param name="workRiskInsuranceDescription">Initial value of the WorkRiskInsuranceDescription property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="lastUpdated">Initial value of the LastUpdated property.</param>
        public static WorkRiskInsurance CreateWorkRiskInsurance(global::System.Guid workRiskInsuranceId, global::System.String workRiskInsuranceName, global::System.String workRiskInsuranceDescription, global::System.Boolean isDeleted, global::System.Byte[] lastUpdated)
        {
            WorkRiskInsurance workRiskInsurance = new WorkRiskInsurance();
            workRiskInsurance.WorkRiskInsuranceId = workRiskInsuranceId;
            workRiskInsurance.WorkRiskInsuranceName = workRiskInsuranceName;
            workRiskInsurance.WorkRiskInsuranceDescription = workRiskInsuranceDescription;
            workRiskInsurance.IsDeleted = isDeleted;
            workRiskInsurance.LastUpdated = lastUpdated;
            return workRiskInsurance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid WorkRiskInsuranceId
        {
            get
            {
                return _WorkRiskInsuranceId;
            }
            set
            {
                if (_WorkRiskInsuranceId != value)
                {
                    OnWorkRiskInsuranceIdChanging(value);
                    ReportPropertyChanging("WorkRiskInsuranceId");
                    _WorkRiskInsuranceId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkRiskInsuranceId");
                    OnWorkRiskInsuranceIdChanged();
                }
            }
        }
        private global::System.Guid _WorkRiskInsuranceId;
        partial void OnWorkRiskInsuranceIdChanging(global::System.Guid value);
        partial void OnWorkRiskInsuranceIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkRiskInsuranceName
        {
            get
            {
                return _WorkRiskInsuranceName;
            }
            set
            {
                OnWorkRiskInsuranceNameChanging(value);
                ReportPropertyChanging("WorkRiskInsuranceName");
                _WorkRiskInsuranceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WorkRiskInsuranceName");
                OnWorkRiskInsuranceNameChanged();
            }
        }
        private global::System.String _WorkRiskInsuranceName;
        partial void OnWorkRiskInsuranceNameChanging(global::System.String value);
        partial void OnWorkRiskInsuranceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WorkRiskInsuranceDescription
        {
            get
            {
                return _WorkRiskInsuranceDescription;
            }
            set
            {
                OnWorkRiskInsuranceDescriptionChanging(value);
                ReportPropertyChanging("WorkRiskInsuranceDescription");
                _WorkRiskInsuranceDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WorkRiskInsuranceDescription");
                OnWorkRiskInsuranceDescriptionChanged();
            }
        }
        private global::System.String _WorkRiskInsuranceDescription;
        partial void OnWorkRiskInsuranceDescriptionChanging(global::System.String value);
        partial void OnWorkRiskInsuranceDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] LastUpdated
        {
            get
            {
                return StructuralObject.GetValidValue(_LastUpdated);
            }
            set
            {
                OnLastUpdatedChanging(value);
                ReportPropertyChanging("LastUpdated");
                _LastUpdated = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdated");
                OnLastUpdatedChanged();
            }
        }
        private global::System.Byte[] _LastUpdated;
        partial void OnLastUpdatedChanging(global::System.Byte[] value);
        partial void OnLastUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MedilabModel", "FK_Patient_WorkRiskInsurance", "Patient")]
        public EntityCollection<Patient> Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("MedilabModel.FK_Patient_WorkRiskInsurance", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("MedilabModel.FK_Patient_WorkRiskInsurance", "Patient", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
